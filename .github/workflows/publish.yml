name: Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun run test

      - name: Build library
        run: bun run build

      - name: Update version
        if: github.event_name == 'workflow_dispatch'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION=${{ github.event.inputs.version }}
          echo "Current version: $CURRENT_VERSION"
          echo "Requested version: $NEW_VERSION"
          
          # Only update if different from current version
          if [ "$CURRENT_VERSION" != "$NEW_VERSION" ]; then
            npm version $NEW_VERSION --no-git-tag-version
            echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
          else
            echo "Version $NEW_VERSION already set in package.json"
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          fi

      - name: Get version from release
        if: github.event_name == 'release'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          RELEASE_VERSION=${GITHUB_REF_NAME#v}
          echo "Current version: $CURRENT_VERSION"
          echo "Release version: $RELEASE_VERSION"
          
          # Only update if different from current version
          if [ "$CURRENT_VERSION" != "$RELEASE_VERSION" ]; then
            npm version $RELEASE_VERSION --no-git-tag-version
            echo "VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          else
            echo "Version $RELEASE_VERSION already set in package.json"
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          fi

      - name: Check if version exists on npm
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          echo "Checking if $PACKAGE_NAME@$VERSION exists on npm..."
          
          if npm view $PACKAGE_NAME@$VERSION version 2>/dev/null; then
            echo "❌ Version $VERSION already exists on npm!"
            echo "Please increment the version before publishing."
            exit 1
          else
            echo "✅ Version $VERSION is available for publishing"
          fi

      - name: Publish to npm
        run: |
          echo "Publishing package: $(node -p "require('./package.json').name")@$(node -p "require('./package.json').version")"
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release Assets
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}