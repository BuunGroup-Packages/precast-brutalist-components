{"version":3,"file":"index.cjs","sources":["../../../node_modules/clsx/dist/clsx.mjs","../src/button/Button.tsx","../src/input/Input.tsx","../src/input-otp/InputOTP.tsx","../src/textarea/Textarea.tsx","../src/select/CustomSelect.tsx","../src/select/Select.tsx","../src/checkbox/Checkbox.tsx","../src/radio/Radio.tsx","../src/switch/Switch.tsx","../src/toggle/Toggle.tsx","../src/hover-card/HoverCard.tsx","../src/typography/Typography.tsx","../src/command/Command.tsx","../src/slider/Slider.tsx","../src/avatar/Avatar.tsx","../src/badge/Badge.tsx","../src/card/Card.tsx","../src/alert/Alert.tsx","../src/alert/AlertStack.tsx","../src/progress/Progress.tsx","../src/skeleton/Skeleton.tsx","../src/tooltip/Tooltip.tsx","../src/popover/Popover.tsx","../src/separator/Separator.tsx","../src/theme/themes.ts","../src/theme/types.ts","../src/theme/utils.ts","../src/theme/ThemeContext.tsx","../src/theme/ThemePicker.tsx","../src/table/Table.tsx","../src/spinner/Spinner.tsx","../src/toast/Toast.tsx","../src/dialog/Dialog.tsx","../src/drawer/Drawer.tsx","../src/dropdown/Dropdown.tsx","../src/tabs/Tabs.tsx","../src/container/Container.tsx","../src/stack/Stack.tsx","../src/breadcrumb/Breadcrumb.tsx","../src/sidebar/Sidebar.tsx","../src/navigation/Navigation.tsx","../src/table-of-contents/TableOfContents.tsx","../src/accordion/Accordion.tsx","../src/combobox/Combobox.tsx","../src/bar-chart/BarChart.tsx","../src/line-chart/LineChart.tsx","../src/pie-chart/PieChart.tsx","../src/area-chart/AreaChart.tsx","../src/aspect-ratio/AspectRatio.tsx","../src/pagination/Pagination.tsx","../src/context-menu/ContextMenu.tsx","../src/sheet/Sheet.tsx","../src/carousel/Carousel.tsx","../src/chart/Chart.tsx","../src/shapes/index.ts","../src/tailwind/button/Button.tsx","../src/tailwind/aspect-ratio/AspectRatio.tsx","../src/tailwind/card/Card.tsx","../src/tailwind/input/Input.tsx","../src/tailwind/badge/Badge.tsx","../src/tailwind/alert/Alert.tsx","../src/tailwind/checkbox/Checkbox.tsx","../src/tailwind/avatar/Avatar.tsx","../src/tailwind/progress/Progress.tsx","../src/tailwind/spinner/Spinner.tsx","../src/tailwind/separator/Separator.tsx","../src/tailwind/skeleton/Skeleton.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React, { forwardRef, ButtonHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Button.module.css'\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'default' | 'destructive' | 'outline' | 'ghost' | 'brutal' | 'primary' | 'secondary' | 'danger'\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  fullWidth?: boolean\n  loading?: boolean\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n  brutalistShadow?: boolean\n  glitch?: boolean\n}\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      children,\n      className,\n      variant = 'default',\n      size = 'md',\n      fullWidth = false,\n      loading = false,\n      leftIcon,\n      rightIcon,\n      brutalistShadow = true,\n      glitch = false,\n      disabled,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <button\n        ref={ref}\n        className={clsx(\n          styles.button,\n          styles[variant],\n          styles[size],\n          {\n            [styles.fullWidth]: fullWidth,\n            [styles.loading]: loading,\n            [styles.withShadow]: brutalistShadow,\n            [styles.glitch]: glitch,\n            [styles.disabled]: disabled || loading,\n          },\n          className\n        )}\n        disabled={disabled || loading}\n        data-text={glitch ? children : undefined}\n        {...props}\n      >\n        {loading && <span className={styles.loader} />}\n        {leftIcon && <span className={styles.icon}>{leftIcon}</span>}\n        <span className={styles.content}>{children}</span>\n        {rightIcon && <span className={styles.icon}>{rightIcon}</span>}\n      </button>\n    )\n  }\n)\n\nButton.displayName = 'Button'","import React, { forwardRef, InputHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Input.module.css'\n\nexport interface InputProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      leftIcon,\n      rightIcon,\n      fullWidth = false,\n      brutalistShadow = true,\n      disabled,\n      readOnly,\n      type = 'text',\n      ...props\n    },\n    ref\n  ) => {\n    const inputElement = (\n      <input\n        ref={ref}\n        type={type}\n        className={clsx(\n          styles.input,\n          styles[variant],\n          styles[size],\n          {\n            [styles.withLeftIcon]: leftIcon,\n            [styles.withRightIcon]: rightIcon,\n            [styles.disabled]: disabled,\n            [styles.readOnly]: readOnly,\n            [styles.withShadow]: brutalistShadow && !disabled && !readOnly,\n          },\n          className\n        )}\n        disabled={disabled}\n        readOnly={readOnly}\n        {...props}\n      />\n    )\n\n    if (leftIcon || rightIcon) {\n      return (\n        <div\n          className={clsx(\n            styles.inputWrapper,\n            styles[variant],\n            styles[size],\n            {\n              [styles.fullWidth]: fullWidth,\n              [styles.disabled]: disabled,\n              [styles.readOnly]: readOnly,\n              [styles.withShadow]: brutalistShadow && !disabled && !readOnly,\n            }\n          )}\n        >\n          {leftIcon && (\n            <span className={clsx(styles.icon, styles.leftIcon)}>{leftIcon}</span>\n          )}\n          {inputElement}\n          {rightIcon && (\n            <span className={clsx(styles.icon, styles.rightIcon)}>{rightIcon}</span>\n          )}\n        </div>\n      )\n    }\n\n    return inputElement\n  }\n)\n\nInput.displayName = 'Input'","import React, { forwardRef, useRef, useState, useEffect, KeyboardEvent, ClipboardEvent } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './InputOTP.module.css'\n\nexport interface InputOTPProps {\n  length?: number\n  value?: string\n  onChange?: (value: string) => void\n  onComplete?: (value: string) => void\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  disabled?: boolean\n  autoFocus?: boolean\n  type?: 'text' | 'number'\n  placeholder?: string\n  className?: string\n  brutalistShadow?: boolean\n}\n\nexport const InputOTP = forwardRef<HTMLDivElement, InputOTPProps>(\n  (\n    {\n      length = 6,\n      value = '',\n      onChange,\n      onComplete,\n      variant = 'default',\n      size = 'md',\n      disabled = false,\n      autoFocus = false,\n      type = 'text',\n      placeholder = 'â€¢',\n      className,\n      brutalistShadow = true,\n    },\n    ref\n  ) => {\n    const [otp, setOtp] = useState<string[]>(() => {\n      const arr = value.split('').slice(0, length)\n      return [...arr, ...Array(length - arr.length).fill('')]\n    })\n    const inputRefs = useRef<(HTMLInputElement | null)[]>([])\n\n    useEffect(() => {\n      const arr = value.split('').slice(0, length)\n      setOtp([...arr, ...Array(length - arr.length).fill('')])\n    }, [value, length])\n\n    const focusInput = (index: number) => {\n      if (inputRefs.current[index]) {\n        inputRefs.current[index]?.focus()\n        inputRefs.current[index]?.select()\n      }\n    }\n\n    const handleChange = (index: number, val: string) => {\n      if (type === 'number' && val && !/^\\d+$/.test(val)) return\n\n      const newOtp = [...otp]\n      newOtp[index] = val.slice(-1) // Only take last character\n\n      setOtp(newOtp)\n      const otpValue = newOtp.join('')\n      onChange?.(otpValue)\n\n      // Move to next input if value entered\n      if (val && index < length - 1) {\n        focusInput(index + 1)\n      }\n\n      // Check if complete\n      if (otpValue.length === length && !newOtp.includes('')) {\n        onComplete?.(otpValue)\n      }\n    }\n\n    const handleKeyDown = (index: number, e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Backspace' && !otp[index] && index > 0) {\n        e.preventDefault()\n        focusInput(index - 1)\n      } else if (e.key === 'ArrowLeft' && index > 0) {\n        e.preventDefault()\n        focusInput(index - 1)\n      } else if (e.key === 'ArrowRight' && index < length - 1) {\n        e.preventDefault()\n        focusInput(index + 1)\n      }\n    }\n\n    const handlePaste = (e: ClipboardEvent<HTMLInputElement>) => {\n      e.preventDefault()\n      const pastedData = e.clipboardData.getData('text/plain').slice(0, length)\n      \n      if (type === 'number' && !/^\\d+$/.test(pastedData)) return\n\n      const newOtp = [...otp]\n      pastedData.split('').forEach((char, i) => {\n        if (i < length) {\n          newOtp[i] = char\n        }\n      })\n\n      setOtp(newOtp)\n      const otpValue = newOtp.join('')\n      onChange?.(otpValue)\n\n      // Focus last filled input or last input\n      const lastFilledIndex = newOtp.findLastIndex(val => val !== '')\n      focusInput(Math.min(lastFilledIndex + 1, length - 1))\n\n      // Check if complete\n      if (otpValue.length === length && !newOtp.includes('')) {\n        onComplete?.(otpValue)\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.container,\n          styles[size],\n          className\n        )}\n      >\n        {Array.from({ length }).map((_, index) => (\n          <input\n            key={index}\n            ref={el => inputRefs.current[index] = el}\n            type=\"text\"\n            inputMode={type === 'number' ? 'numeric' : 'text'}\n            pattern={type === 'number' ? '\\\\d*' : undefined}\n            maxLength={1}\n            value={otp[index]}\n            onChange={e => handleChange(index, e.target.value)}\n            onKeyDown={e => handleKeyDown(index, e)}\n            onPaste={index === 0 ? handlePaste : undefined}\n            onFocus={e => e.target.select()}\n            placeholder={placeholder}\n            disabled={disabled}\n            autoFocus={autoFocus && index === 0}\n            className={clsx(\n              styles.input,\n              styles[variant],\n              styles[size],\n              {\n                [styles.filled]: otp[index],\n                [styles.disabled]: disabled,\n                [styles.withShadow]: brutalistShadow && !disabled,\n              }\n            )}\n          />\n        ))}\n      </div>\n    )\n  }\n)\n\nInputOTP.displayName = 'InputOTP'","import React, { forwardRef, TextareaHTMLAttributes, useEffect, useRef, useState, useCallback } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Textarea.module.css'\n\nexport interface TextareaProps extends Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'size'> {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  autoResize?: boolean\n  showCharacterCount?: boolean\n  maxCharacters?: number\n  minRows?: number\n  maxRows?: number\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n  width?: string | number\n  minWidth?: string | number\n  maxWidth?: string | number\n}\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      autoResize = false,\n      showCharacterCount = false,\n      maxCharacters,\n      minRows = 3,\n      maxRows = 10,\n      fullWidth = false,\n      brutalistShadow = true,\n      width,\n      minWidth,\n      maxWidth,\n      disabled,\n      readOnly,\n      value,\n      defaultValue,\n      onChange,\n      ...props\n    },\n    ref\n  ) => {\n    const [internalValue, setInternalValue] = useState(defaultValue || '')\n    const textareaRef = useRef<HTMLTextAreaElement | null>(null)\n\n    // Determine controlled vs uncontrolled\n    const isControlled = value !== undefined\n    const currentValue = isControlled ? value : internalValue\n    const charCount = String(currentValue).length\n\n    // Handle ref forwarding\n    const setRefs = useCallback(\n      (element: HTMLTextAreaElement | null) => {\n        textareaRef.current = element\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(element)\n          } else {\n            ref.current = element\n          }\n        }\n      },\n      [ref]\n    )\n\n    // Auto-resize functionality\n    const adjustHeight = useCallback(() => {\n      const textarea = textareaRef.current\n      if (!textarea || !autoResize) return\n\n      // Reset to auto to get natural scroll height\n      textarea.style.height = 'auto'\n      const scrollHeight = textarea.scrollHeight\n\n      // Set minimum height based on minRows  \n      const minHeight = `${minRows * 1.5}rem` // Simple rem-based calculation\n      const maxHeight = `${maxRows * 1.5}rem`\n\n      if (scrollHeight <= parseInt(minHeight) * 16) {\n        textarea.style.height = minHeight\n        textarea.style.overflowY = 'hidden'\n      } else if (scrollHeight >= parseInt(maxHeight) * 16) {\n        textarea.style.height = maxHeight\n        textarea.style.overflowY = 'auto'\n      } else {\n        textarea.style.height = `${scrollHeight}px`\n        textarea.style.overflowY = 'hidden'\n      }\n    }, [autoResize, minRows, maxRows])\n\n    // Adjust height on mount and when value changes\n    useEffect(() => {\n      adjustHeight()\n    }, [currentValue, adjustHeight])\n\n    // Adjust height on window resize\n    useEffect(() => {\n      if (!autoResize) return\n\n      const handleResize = () => adjustHeight()\n      window.addEventListener('resize', handleResize)\n      return () => window.removeEventListener('resize', handleResize)\n    }, [autoResize, adjustHeight])\n\n    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const newValue = e.target.value\n\n      // Enforce max characters if specified\n      if (maxCharacters && newValue.length > maxCharacters) {\n        return\n      }\n\n      if (!isControlled) {\n        setInternalValue(newValue)\n      }\n\n      onChange?.(e)\n      \n      // Trigger resize on change for better responsiveness\n      if (autoResize) {\n        setTimeout(() => adjustHeight(), 0)\n      }\n    }\n\n    const isOverLimit = maxCharacters ? charCount > maxCharacters : false\n\n    // Convert width values to CSS strings\n    const getWidthValue = (value: string | number | undefined) => {\n      if (value === undefined) return undefined\n      return typeof value === 'number' ? `${value}px` : value\n    }\n\n    const wrapperStyle: React.CSSProperties = {\n      width: getWidthValue(width),\n      minWidth: getWidthValue(minWidth),\n      maxWidth: getWidthValue(maxWidth),\n    }\n\n    return (\n      <div\n        className={clsx(\n          styles.wrapper,\n          {\n            [styles.fullWidth]: fullWidth,\n          }\n        )}\n        style={wrapperStyle}\n      >\n        <textarea\n          ref={setRefs}\n          className={clsx(\n            styles.textarea,\n            styles[variant],\n            styles[size],\n            {\n              [styles.disabled]: disabled,\n              [styles.readOnly]: readOnly,\n              [styles.withShadow]: brutalistShadow && !disabled && !readOnly,\n              [styles.autoResize]: autoResize,\n              [styles.overLimit]: isOverLimit,\n            },\n            className\n          )}\n          disabled={disabled}\n          readOnly={readOnly}\n          value={currentValue}\n          onChange={handleChange}\n          rows={!autoResize ? minRows : undefined}\n          {...props}\n        />\n        {showCharacterCount && (\n          <div\n            className={clsx(\n              styles.characterCount,\n              {\n                [styles.error]: isOverLimit || variant === 'error',\n                [styles.success]: variant === 'success',\n              }\n            )}\n          >\n            <span className={styles.count}>\n              {charCount}\n              {maxCharacters && ` / ${maxCharacters}`}\n            </span>\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nTextarea.displayName = 'Textarea'","import React, { useState, useRef, useEffect, forwardRef, useImperativeHandle } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './CustomSelect.module.css'\n\nexport interface SelectOption {\n  value: string\n  label: string\n  disabled?: boolean\n}\n\nexport interface SelectOptionGroup {\n  label: string\n  options: SelectOption[]\n}\n\nexport interface CustomSelectProps {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  options?: (SelectOption | SelectOptionGroup)[]\n  placeholder?: string\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n  disabled?: boolean\n  value?: string\n  defaultValue?: string\n  onChange?: (value: string) => void\n  onBlur?: () => void\n  onFocus?: () => void\n  className?: string\n  name?: string\n  id?: string\n}\n\nfunction isOptionGroup(option: SelectOption | SelectOptionGroup): option is SelectOptionGroup {\n  return 'options' in option\n}\n\nexport const CustomSelect = forwardRef<HTMLDivElement, CustomSelectProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      options = [],\n      placeholder = 'Select an option...',\n      fullWidth = false,\n      brutalistShadow = true,\n      disabled = false,\n      value,\n      defaultValue,\n      onChange,\n      onBlur,\n      onFocus,\n      name,\n      id,\n    },\n    ref\n  ) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [selectedValue, setSelectedValue] = useState(value || defaultValue || '')\n    const [focusedIndex, setFocusedIndex] = useState(-1)\n    const dropdownRef = useRef<HTMLDivElement>(null)\n    const triggerRef = useRef<HTMLButtonElement>(null)\n\n    useImperativeHandle(ref, () => dropdownRef.current!, [])\n\n    // Flatten options for keyboard navigation\n    const flatOptions: SelectOption[] = []\n    options.forEach(option => {\n      if (isOptionGroup(option)) {\n        flatOptions.push(...option.options.filter(opt => !opt.disabled))\n      } else if (!option.disabled) {\n        flatOptions.push(option)\n      }\n    })\n\n    // Update selectedValue when value prop changes\n    useEffect(() => {\n      if (value !== undefined) {\n        setSelectedValue(value)\n      }\n    }, [value])\n\n    // Close dropdown when clicking outside\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n          setIsOpen(false)\n          setFocusedIndex(-1)\n        }\n      }\n\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside)\n        return () => document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }, [isOpen])\n\n    const handleToggle = () => {\n      if (disabled) return\n      \n      setIsOpen(!isOpen)\n      setFocusedIndex(-1)\n      \n      if (!isOpen) {\n        onFocus?.()\n      } else {\n        onBlur?.()\n      }\n    }\n\n    const handleOptionSelect = (optionValue: string) => {\n      setSelectedValue(optionValue)\n      setIsOpen(false)\n      setFocusedIndex(-1)\n      onChange?.(optionValue)\n      onBlur?.()\n      triggerRef.current?.focus()\n    }\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      if (disabled) return\n\n      switch (event.key) {\n        case 'Enter':\n        case ' ':\n          event.preventDefault()\n          if (isOpen && focusedIndex >= 0) {\n            handleOptionSelect(flatOptions[focusedIndex].value)\n          } else {\n            setIsOpen(!isOpen)\n          }\n          break\n        case 'Escape':\n          setIsOpen(false)\n          setFocusedIndex(-1)\n          triggerRef.current?.focus()\n          break\n        case 'ArrowDown':\n          event.preventDefault()\n          if (!isOpen) {\n            setIsOpen(true)\n            setFocusedIndex(0)\n          } else {\n            setFocusedIndex(prev => \n              prev < flatOptions.length - 1 ? prev + 1 : prev\n            )\n          }\n          break\n        case 'ArrowUp':\n          event.preventDefault()\n          if (isOpen) {\n            setFocusedIndex(prev => prev > 0 ? prev - 1 : prev)\n          }\n          break\n      }\n    }\n\n    // Find selected option label\n    const selectedOption = flatOptions.find(opt => opt.value === selectedValue)\n    const displayValue = selectedOption?.label || placeholder\n\n    return (\n      <div\n        ref={dropdownRef}\n        className={clsx(\n          styles.selectWrapper,\n          styles[variant],\n          styles[size],\n          {\n            [styles.fullWidth]: fullWidth,\n            [styles.disabled]: disabled,\n            [styles.withShadow]: brutalistShadow && !disabled,\n            [styles.isOpen]: isOpen,\n          },\n          className\n        )}\n      >\n        {/* Hidden input for form submission */}\n        <input\n          type=\"hidden\"\n          name={name}\n          value={selectedValue}\n        />\n        \n        {/* Trigger button */}\n        <button\n          ref={triggerRef}\n          type=\"button\"\n          className={styles.trigger}\n          onClick={handleToggle}\n          onKeyDown={handleKeyDown}\n          disabled={disabled}\n          aria-haspopup=\"listbox\"\n          aria-expanded={isOpen}\n          aria-labelledby={id}\n          id={id}\n        >\n          <span className={clsx(styles.value, { [styles.placeholder]: !selectedOption })}>\n            {displayValue}\n          </span>\n          <div className={styles.arrow}>\n            <svg\n              width=\"12\"\n              height=\"8\"\n              viewBox=\"0 0 12 8\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className={clsx({ [styles.arrowOpen]: isOpen })}\n            >\n              <path\n                d=\"M1 1L6 6L11 1\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n                strokeLinejoin=\"miter\"\n              />\n            </svg>\n          </div>\n        </button>\n\n        {/* Dropdown */}\n        {isOpen && (\n          <div className={styles.dropdown} role=\"listbox\">\n            {options.map((option, groupIndex) => {\n              if (isOptionGroup(option)) {\n                return (\n                  <div key={`group-${groupIndex}`} className={styles.optionGroup}>\n                    <div className={styles.groupLabel}>{option.label}</div>\n                    {option.options.map((opt) => {\n                      const flatIndex = flatOptions.findIndex(fo => fo.value === opt.value)\n                      return (\n                        <button\n                          key={opt.value}\n                          type=\"button\"\n                          className={clsx(\n                            styles.option,\n                            {\n                              [styles.selected]: opt.value === selectedValue,\n                              [styles.focused]: flatIndex === focusedIndex,\n                              [styles.disabled]: opt.disabled,\n                            }\n                          )}\n                          onClick={() => !opt.disabled && handleOptionSelect(opt.value)}\n                          disabled={opt.disabled}\n                          role=\"option\"\n                          aria-selected={opt.value === selectedValue}\n                        >\n                          {opt.label}\n                        </button>\n                      )\n                    })}\n                  </div>\n                )\n              } else {\n                const flatIndex = flatOptions.findIndex(fo => fo.value === option.value)\n                return (\n                  <button\n                    key={option.value}\n                    type=\"button\"\n                    className={clsx(\n                      styles.option,\n                      {\n                        [styles.selected]: option.value === selectedValue,\n                        [styles.focused]: flatIndex === focusedIndex,\n                        [styles.disabled]: option.disabled,\n                      }\n                    )}\n                    onClick={() => !option.disabled && handleOptionSelect(option.value)}\n                    disabled={option.disabled}\n                    role=\"option\"\n                    aria-selected={option.value === selectedValue}\n                  >\n                    {option.label}\n                  </button>\n                )\n              }\n            })}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nCustomSelect.displayName = 'CustomSelect'","import React, { forwardRef, SelectHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport { CustomSelect } from './CustomSelect'\nimport styles from './Select.module.css'\n\nexport interface SelectOption {\n  value: string\n  label: string\n  disabled?: boolean\n}\n\nexport interface SelectOptionGroup {\n  label: string\n  options: SelectOption[]\n}\n\nexport interface SelectProps extends Omit<SelectHTMLAttributes<HTMLSelectElement>, 'size'> {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  options?: (SelectOption | SelectOptionGroup)[]\n  placeholder?: string\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n  customArrow?: boolean\n  useCustomDropdown?: boolean\n  onValueChange?: (value: string) => void\n}\n\nfunction isOptionGroup(option: SelectOption | SelectOptionGroup): option is SelectOptionGroup {\n  return 'options' in option\n}\n\nexport const Select = forwardRef<HTMLSelectElement, SelectProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      options = [],\n      placeholder,\n      fullWidth = false,\n      brutalistShadow = true,\n      customArrow = true,\n      useCustomDropdown = true,\n      onValueChange,\n      disabled,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    // Use custom dropdown by default for better styling\n    if (useCustomDropdown) {\n      // Convert JSX children to options array if options prop is empty\n      let processedOptions = options\n      \n      if (options.length === 0 && children) {\n        processedOptions = []\n        React.Children.forEach(children, (child) => {\n          if (React.isValidElement(child)) {\n            if (child.type === 'option') {\n              const value = child.props.value || ''\n              const label = child.props.children || ''\n              if (value && label) {\n                processedOptions.push({\n                  value: value,\n                  label: label,\n                  disabled: child.props.disabled\n                })\n              }\n            } else if (child.type === 'optgroup') {\n              const groupLabel = child.props.label || ''\n              const groupOptions: SelectOption[] = []\n              \n              React.Children.forEach(child.props.children, (optionChild) => {\n                if (React.isValidElement(optionChild) && optionChild.type === 'option') {\n                  const props = optionChild.props as React.OptionHTMLAttributes<HTMLOptionElement>\n                  const value = props.value || ''\n                  const label = props.children || ''\n                  if (value && label) {\n                    groupOptions.push({\n                      value: String(value),\n                      label: String(label),\n                      disabled: props.disabled\n                    })\n                  }\n                }\n              })\n              \n              if (groupOptions.length > 0) {\n                processedOptions.push({\n                  label: groupLabel,\n                  options: groupOptions\n                })\n              }\n            }\n          }\n        })\n      }\n      \n      return (\n        <CustomSelect\n          variant={variant}\n          size={size}\n          options={processedOptions}\n          placeholder={placeholder}\n          fullWidth={fullWidth}\n          brutalistShadow={brutalistShadow}\n          disabled={disabled}\n          value={props.value as string}\n          defaultValue={props.defaultValue as string}\n          onChange={onValueChange || ((value) => {\n            // Create a synthetic event for compatibility\n            const syntheticEvent = {\n              target: { value },\n              currentTarget: { value }\n            } as React.ChangeEvent<HTMLSelectElement>\n            props.onChange?.(syntheticEvent)\n          })}\n          onBlur={props.onBlur ? () => props.onBlur?.({} as React.FocusEvent<HTMLSelectElement>) : undefined}\n          onFocus={props.onFocus ? () => props.onFocus?.({} as React.FocusEvent<HTMLSelectElement>) : undefined}\n          className={className}\n          name={props.name}\n          id={props.id}\n        />\n      )\n    }\n    const selectElement = (\n      <select\n        ref={ref}\n        className={clsx(\n          styles.select,\n          styles[variant],\n          styles[size],\n          {\n            [styles.disabled]: disabled,\n            [styles.withShadow]: brutalistShadow && !disabled,\n            [styles.fullWidth]: fullWidth,\n            [styles.hasPlaceholder]: placeholder && !props.value && !props.defaultValue,\n          },\n          className\n        )}\n        disabled={disabled}\n        {...props}\n      >\n        {placeholder && (\n          <option value=\"\" disabled hidden>\n            {placeholder}\n          </option>\n        )}\n        {children\n          ? children\n          : options.map((option, index) => {\n              if (isOptionGroup(option)) {\n                return (\n                  <optgroup key={`group-${index}`} label={option.label}>\n                    {option.options.map((opt) => (\n                      <option\n                        key={opt.value}\n                        value={opt.value}\n                        disabled={opt.disabled}\n                      >\n                        {opt.label}\n                      </option>\n                    ))}\n                  </optgroup>\n                )\n              } else {\n                return (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                    disabled={option.disabled}\n                  >\n                    {option.label}\n                  </option>\n                )\n              }\n            })}\n      </select>\n    )\n\n    if (customArrow) {\n      return (\n        <div\n          className={clsx(\n            styles.selectWrapper,\n            styles[variant],\n            styles[size],\n            {\n              [styles.fullWidth]: fullWidth,\n              [styles.disabled]: disabled,\n              [styles.withShadow]: brutalistShadow && !disabled,\n            }\n          )}\n        >\n          {selectElement}\n          <div className={styles.arrow}>\n            <svg\n              width=\"12\"\n              height=\"8\"\n              viewBox=\"0 0 12 8\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M1 1L6 6L11 1\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n                strokeLinejoin=\"miter\"\n              />\n            </svg>\n          </div>\n        </div>\n      )\n    }\n\n    return selectElement\n  }\n)\n\nSelect.displayName = 'Select'","import React, { forwardRef, InputHTMLAttributes, useRef, useEffect } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Checkbox.module.css'\n\nexport interface CheckboxProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'size'> {\n  size?: 'sm' | 'md' | 'lg'\n  label?: React.ReactNode\n  indeterminate?: boolean\n  error?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  (\n    {\n      className,\n      size = 'md',\n      label,\n      indeterminate = false,\n      error = false,\n      brutalistShadow = true,\n      disabled,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    const internalRef = useRef<HTMLInputElement>(null)\n    const checkboxRef = ref || internalRef\n\n    // Handle indeterminate state\n    useEffect(() => {\n      const checkbox = typeof checkboxRef === 'function' ? null : checkboxRef.current\n      if (checkbox) {\n        checkbox.indeterminate = indeterminate\n      }\n    }, [indeterminate, checkboxRef])\n\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`\n\n    return (\n      <div \n        className={clsx(\n          styles.container,\n          styles[size],\n          {\n            [styles.disabled]: disabled,\n            [styles.error]: error,\n          },\n          className\n        )}\n      >\n        <div className={styles.checkboxWrapper}>\n          <input\n            ref={checkboxRef as React.Ref<HTMLInputElement>}\n            type=\"checkbox\"\n            id={checkboxId}\n            className={styles.input}\n            disabled={disabled}\n            aria-invalid={error}\n            {...props}\n          />\n          <div \n            className={clsx(\n              styles.checkbox,\n              {\n                [styles.withShadow]: brutalistShadow,\n                [styles.indeterminate]: indeterminate,\n              }\n            )}\n          >\n            <svg \n              className={styles.checkmark} \n              viewBox=\"0 0 24 24\" \n              fill=\"none\"\n              aria-hidden=\"true\"\n            >\n              <path \n                d=\"M5 13L9 17L19 7\" \n                stroke=\"currentColor\" \n                strokeWidth=\"4\" \n                strokeLinecap=\"square\" \n                strokeLinejoin=\"miter\"\n              />\n            </svg>\n            <div className={styles.indeterminateLine} />\n          </div>\n        </div>\n        {label && (\n          <label htmlFor={checkboxId} className={styles.label}>\n            {label}\n          </label>\n        )}\n      </div>\n    )\n  }\n)\n\nCheckbox.displayName = 'Checkbox'","import React, { forwardRef, InputHTMLAttributes, createContext, useContext, useState } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Radio.module.css'\n\n// RadioGroup Context\ninterface RadioGroupContextValue {\n  name: string\n  value: string | undefined\n  onChange: (value: string) => void\n  disabled?: boolean\n  error?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  brutalistShadow?: boolean\n}\n\nconst RadioGroupContext = createContext<RadioGroupContextValue | undefined>(undefined)\n\n// RadioGroup Component\nexport interface RadioGroupProps {\n  name: string\n  value?: string\n  defaultValue?: string\n  onChange?: (value: string) => void\n  children: React.ReactNode\n  direction?: 'horizontal' | 'vertical'\n  size?: 'sm' | 'md' | 'lg'\n  disabled?: boolean\n  error?: boolean\n  brutalistShadow?: boolean\n  className?: string\n}\n\nexport const RadioGroup: React.FC<RadioGroupProps> = ({\n  name,\n  value: controlledValue,\n  defaultValue,\n  onChange,\n  children,\n  direction = 'vertical',\n  size = 'md',\n  disabled = false,\n  error = false,\n  brutalistShadow = true,\n  className,\n}) => {\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue)\n  const isControlled = controlledValue !== undefined\n  const value = isControlled ? controlledValue : uncontrolledValue\n\n  const handleChange = (newValue: string) => {\n    if (!isControlled) {\n      setUncontrolledValue(newValue)\n    }\n    onChange?.(newValue)\n  }\n\n  return (\n    <RadioGroupContext.Provider \n      value={{ \n        name, \n        value, \n        onChange: handleChange, \n        disabled, \n        error,\n        size,\n        brutalistShadow\n      }}\n    >\n      <div \n        className={clsx(\n          styles.group,\n          styles[direction],\n          {\n            [styles.disabled]: disabled,\n            [styles.error]: error,\n          },\n          className\n        )}\n        role=\"radiogroup\"\n        aria-invalid={error}\n      >\n        {children}\n      </div>\n    </RadioGroupContext.Provider>\n  )\n}\n\n// Radio Component\nexport interface RadioProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'size' | 'onChange'> {\n  value: string\n  label?: React.ReactNode\n  size?: 'sm' | 'md' | 'lg'\n  disabled?: boolean\n  error?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Radio = forwardRef<HTMLInputElement, RadioProps>(\n  (\n    {\n      className,\n      value,\n      label,\n      size: propSize,\n      disabled: propDisabled,\n      error: propError,\n      brutalistShadow: propShadow,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    const context = useContext(RadioGroupContext)\n    \n    if (!context) {\n      throw new Error('Radio must be used within RadioGroup')\n    }\n\n    const { \n      name, \n      value: groupValue, \n      onChange, \n      disabled: groupDisabled, \n      error: groupError,\n      size: groupSize,\n      brutalistShadow: groupShadow\n    } = context\n\n    const size = propSize || groupSize || 'md'\n    const disabled = propDisabled || groupDisabled\n    const error = propError || groupError\n    const brutalistShadow = propShadow !== undefined ? propShadow : groupShadow\n    const isChecked = value === groupValue\n    const radioId = id || `radio-${name}-${value}`\n\n    const handleChange = () => {\n      if (!disabled) {\n        onChange(value)\n      }\n    }\n\n    return (\n      <div \n        className={clsx(\n          styles.container,\n          styles[size],\n          {\n            [styles.disabled]: disabled,\n            [styles.error]: error,\n            [styles.checked]: isChecked,\n          },\n          className\n        )}\n      >\n        <div className={styles.radioWrapper}>\n          <input\n            ref={ref}\n            type=\"radio\"\n            id={radioId}\n            name={name}\n            value={value}\n            checked={isChecked}\n            onChange={() => handleChange()}\n            className={styles.input}\n            disabled={disabled}\n            aria-invalid={error}\n            {...props}\n          />\n          <div \n            className={clsx(\n              styles.radio,\n              {\n                [styles.withShadow]: brutalistShadow,\n              }\n            )}\n          >\n            <div className={styles.indicator} />\n          </div>\n        </div>\n        {label && (\n          <label htmlFor={radioId} className={styles.label}>\n            {label}\n          </label>\n        )}\n      </div>\n    )\n  }\n)\n\nRadio.displayName = 'Radio'","import React, { forwardRef, InputHTMLAttributes, useState, useCallback } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Switch.module.css'\n\nexport interface SwitchProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'size'> {\n  size?: 'sm' | 'md' | 'lg'\n  label?: React.ReactNode\n  labelPosition?: 'left' | 'right'\n  loading?: boolean\n  brutalistShadow?: boolean\n  onCheckedChange?: (checked: boolean) => void\n}\n\nexport const Switch = forwardRef<HTMLInputElement, SwitchProps>(\n  (\n    {\n      className,\n      size = 'md',\n      label,\n      labelPosition = 'right',\n      loading = false,\n      brutalistShadow = true,\n      disabled,\n      checked: controlledChecked,\n      defaultChecked,\n      onChange,\n      onCheckedChange,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    // Handle controlled/uncontrolled state\n    const [internalChecked, setInternalChecked] = useState(defaultChecked ?? false)\n    const isControlled = controlledChecked !== undefined\n    const isChecked = isControlled ? controlledChecked : internalChecked\n\n    const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n      const newChecked = event.target.checked\n      \n      // Update internal state for uncontrolled mode\n      if (!isControlled) {\n        setInternalChecked(newChecked)\n      }\n      \n      // Call event handlers\n      onChange?.(event)\n      onCheckedChange?.(newChecked)\n    }, [isControlled, onChange, onCheckedChange])\n\n    const switchId = id || `switch-${Math.random().toString(36).substr(2, 9)}`\n    const isDisabled = disabled || loading\n\n    const switchElement = (\n      <div className={styles.switchWrapper}>\n        <input\n          ref={ref}\n          type=\"checkbox\"\n          id={switchId}\n          className={styles.input}\n          disabled={isDisabled}\n          checked={isChecked}\n          onChange={handleChange}\n          {...props}\n        />\n        <div \n          className={clsx(\n            styles.switch,\n            {\n              [styles.withShadow]: brutalistShadow,\n              [styles.checked]: isChecked,\n              [styles.loading]: loading,\n            }\n          )}\n        >\n          <div className={styles.thumb}>\n            {loading && (\n              <div className={styles.loadingIndicator} />\n            )}\n          </div>\n        </div>\n      </div>\n    )\n\n    const labelElement = label && (\n      <label htmlFor={switchId} className={styles.label}>\n        {label}\n      </label>\n    )\n\n    return (\n      <div \n        className={clsx(\n          styles.container,\n          styles[size],\n          {\n            [styles.disabled]: isDisabled,\n            [styles.labelLeft]: labelPosition === 'left',\n          },\n          className\n        )}\n      >\n        {labelPosition === 'left' && labelElement}\n        {switchElement}\n        {labelPosition === 'right' && labelElement}\n      </div>\n    )\n  }\n)\n\nSwitch.displayName = 'Switch'","import React, { forwardRef, ButtonHTMLAttributes, useState, useCallback } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Toggle.module.css'\n\nexport interface ToggleProps extends Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'type'> {\n  variant?: 'default' | 'brutal' | 'outline'\n  size?: 'sm' | 'md' | 'lg'\n  pressed?: boolean\n  defaultPressed?: boolean\n  onPressedChange?: (pressed: boolean) => void\n  brutalistShadow?: boolean\n  asChild?: boolean\n}\n\nexport const Toggle = forwardRef<HTMLButtonElement, ToggleProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      pressed: controlledPressed,\n      defaultPressed = false,\n      onPressedChange,\n      onClick,\n      disabled,\n      brutalistShadow = true,\n      children,\n      asChild = false,\n      ...props\n    },\n    ref\n  ) => {\n    // Handle controlled/uncontrolled state\n    const [internalPressed, setInternalPressed] = useState(defaultPressed)\n    const isControlled = controlledPressed !== undefined\n    const isPressed = isControlled ? controlledPressed : internalPressed\n\n    const handleClick = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n      if (disabled) return\n      \n      const newPressed = !isPressed\n      \n      // Update internal state for uncontrolled mode\n      if (!isControlled) {\n        setInternalPressed(newPressed)\n      }\n      \n      // Call event handlers\n      onClick?.(event)\n      onPressedChange?.(newPressed)\n    }, [isControlled, isPressed, onClick, onPressedChange, disabled])\n\n    const Comp = asChild ? 'span' : 'button'\n\n    return (\n      <Comp\n        ref={ref}\n        type={asChild ? undefined : 'button'}\n        role=\"button\"\n        aria-pressed={isPressed}\n        data-state={isPressed ? 'on' : 'off'}\n        className={clsx(\n          styles.toggle,\n          styles[variant],\n          styles[size],\n          {\n            [styles.pressed]: isPressed,\n            [styles.disabled]: disabled,\n            [styles.withShadow]: brutalistShadow && !disabled,\n          },\n          className\n        )}\n        onClick={handleClick}\n        disabled={disabled}\n        {...props}\n      >\n        {children}\n      </Comp>\n    )\n  }\n)\n\nToggle.displayName = 'Toggle'","import React, { forwardRef, useState, useRef, useEffect, ReactNode } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './HoverCard.module.css'\n\n// Context for compound components\nconst HoverCardContext = React.createContext<{\n  open: boolean\n  setOpen: (open: boolean) => void\n  triggerRef: React.RefObject<HTMLDivElement>\n} | null>(null)\n\nconst useHoverCard = () => {\n  const context = React.useContext(HoverCardContext)\n  if (!context) {\n    throw new Error('HoverCard components must be used within a HoverCard')\n  }\n  return context\n}\n\nexport interface HoverCardProps {\n  children: ReactNode\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  openDelay?: number\n  closeDelay?: number\n}\n\nexport const HoverCard: React.FC<HoverCardProps> & {\n  Trigger: typeof HoverCardTrigger\n  Content: typeof HoverCardContent\n} = ({\n  children,\n  defaultOpen = false,\n  open: controlledOpen,\n  onOpenChange,\n  openDelay = 700,\n  closeDelay = 300\n}) => {\n  const [internalOpen, setInternalOpen] = useState(defaultOpen)\n  const isControlled = controlledOpen !== undefined\n  const open = isControlled ? controlledOpen : internalOpen\n  const triggerRef = useRef<HTMLDivElement>(null)\n  const openTimerRef = useRef<NodeJS.Timeout>()\n  const closeTimerRef = useRef<NodeJS.Timeout>()\n\n  const setOpen = (newOpen: boolean) => {\n    // Clear any existing timers\n    if (openTimerRef.current) clearTimeout(openTimerRef.current)\n    if (closeTimerRef.current) clearTimeout(closeTimerRef.current)\n\n    const delay = newOpen ? openDelay : closeDelay\n\n    const timer = setTimeout(() => {\n      if (!isControlled) {\n        setInternalOpen(newOpen)\n      }\n      onOpenChange?.(newOpen)\n    }, delay)\n\n    if (newOpen) {\n      openTimerRef.current = timer\n    } else {\n      closeTimerRef.current = timer\n    }\n  }\n\n  // Cleanup timers on unmount\n  useEffect(() => {\n    return () => {\n      if (openTimerRef.current) clearTimeout(openTimerRef.current)\n      if (closeTimerRef.current) clearTimeout(closeTimerRef.current)\n    }\n  }, [])\n\n  return (\n    <HoverCardContext.Provider value={{ open, setOpen, triggerRef }}>\n      <div className={styles.root}>\n        {children}\n      </div>\n    </HoverCardContext.Provider>\n  )\n}\n\nexport interface HoverCardTriggerProps {\n  children: ReactNode\n  asChild?: boolean\n  className?: string\n}\n\nconst HoverCardTrigger = forwardRef<HTMLDivElement, HoverCardTriggerProps>(\n  ({ children, asChild = false, className }, _ref) => {\n    const { setOpen, triggerRef } = useHoverCard()\n\n    const handleMouseEnter = () => setOpen(true)\n    const handleMouseLeave = () => setOpen(false)\n    const handleFocus = () => setOpen(true)\n    const handleBlur = () => setOpen(false)\n\n    const triggerProps = {\n      ref: triggerRef,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      className: clsx(styles.trigger, className)\n    }\n\n    if (asChild && React.isValidElement(children)) {\n      return React.cloneElement(children as React.ReactElement<HTMLElement>, triggerProps)\n    }\n\n    return (\n      <div {...triggerProps}>\n        {children}\n      </div>\n    )\n  }\n)\n\nHoverCardTrigger.displayName = 'HoverCardTrigger'\n\nexport interface HoverCardContentProps {\n  children: ReactNode\n  className?: string\n  side?: 'top' | 'right' | 'bottom' | 'left'\n  align?: 'start' | 'center' | 'end'\n  sideOffset?: number\n  alignOffset?: number\n  collisionBoundary?: 'viewport' | 'parent' | HTMLElement\n  hideWhenDetached?: boolean\n  brutalistShadow?: boolean\n}\n\nconst HoverCardContent = forwardRef<HTMLDivElement, HoverCardContentProps>(\n  ({\n    children,\n    className,\n    side = 'bottom',\n    align = 'center',\n    sideOffset = 8,\n    alignOffset = 0,\n    collisionBoundary = 'viewport',\n    hideWhenDetached = true, // eslint-disable-line @typescript-eslint/no-unused-vars\n    brutalistShadow = true,\n    ...props\n  }, ref) => {\n    const { open, triggerRef, setOpen } = useHoverCard()\n    const internalRef = useRef<HTMLDivElement>(null)\n    const contentRef = (ref as React.RefObject<HTMLDivElement>) || internalRef\n    const [position, setPosition] = useState({ top: 0, left: 0 })\n    const [actualSide, setActualSide] = useState(side)\n\n    // Handle mouse events on content\n    const handleMouseEnter = () => setOpen(true)\n    const handleMouseLeave = () => setOpen(false)\n\n    // Update position when open or window resizes\n    useEffect(() => {\n      if (!open || !triggerRef.current || !contentRef.current) return\n\n      const updatePosition = () => {\n        const trigger = triggerRef.current\n        const content = contentRef.current\n        if (!trigger || !content) return\n\n        const triggerRect = trigger.getBoundingClientRect()\n        const contentRect = content.getBoundingClientRect()\n        const viewportWidth = window.innerWidth\n        const viewportHeight = window.innerHeight\n\n        let top = 0\n        let left = 0\n        let finalSide = side\n\n        // Calculate initial position based on side\n        switch (side) {\n          case 'top':\n            top = triggerRect.top - contentRect.height - sideOffset\n            left = triggerRect.left + triggerRect.width / 2 - contentRect.width / 2\n            break\n          case 'right':\n            top = triggerRect.top + triggerRect.height / 2 - contentRect.height / 2\n            left = triggerRect.right + sideOffset\n            break\n          case 'bottom':\n            top = triggerRect.bottom + sideOffset\n            left = triggerRect.left + triggerRect.width / 2 - contentRect.width / 2\n            break\n          case 'left':\n            top = triggerRect.top + triggerRect.height / 2 - contentRect.height / 2\n            left = triggerRect.left - contentRect.width - sideOffset\n            break\n        }\n\n        // Apply alignment offset\n        if (side === 'top' || side === 'bottom') {\n          if (align === 'start') {\n            left = triggerRect.left + alignOffset\n          } else if (align === 'end') {\n            left = triggerRect.right - contentRect.width - alignOffset\n          }\n        } else {\n          if (align === 'start') {\n            top = triggerRect.top + alignOffset\n          } else if (align === 'end') {\n            top = triggerRect.bottom - contentRect.height - alignOffset\n          }\n        }\n\n        // Collision detection and adjustment\n        if (collisionBoundary === 'viewport') {\n          // Check if content overflows viewport and flip if needed\n          if (side === 'bottom' && top + contentRect.height > viewportHeight) {\n            top = triggerRect.top - contentRect.height - sideOffset\n            finalSide = 'top'\n          } else if (side === 'top' && top < 0) {\n            top = triggerRect.bottom + sideOffset\n            finalSide = 'bottom'\n          } else if (side === 'right' && left + contentRect.width > viewportWidth) {\n            left = triggerRect.left - contentRect.width - sideOffset\n            finalSide = 'left'\n          } else if (side === 'left' && left < 0) {\n            left = triggerRect.right + sideOffset\n            finalSide = 'right'\n          }\n\n          // Ensure content stays within viewport\n          left = Math.max(8, Math.min(left, viewportWidth - contentRect.width - 8))\n          top = Math.max(8, Math.min(top, viewportHeight - contentRect.height - 8))\n        }\n\n        setPosition({ top, left })\n        setActualSide(finalSide)\n      }\n\n      updatePosition()\n      window.addEventListener('resize', updatePosition)\n      window.addEventListener('scroll', updatePosition, true)\n\n      return () => {\n        window.removeEventListener('resize', updatePosition)\n        window.removeEventListener('scroll', updatePosition, true)\n      }\n    }, [open, side, align, sideOffset, alignOffset, collisionBoundary, triggerRef, contentRef])\n\n    if (!open) return null\n\n    return (\n      <div\n        ref={contentRef}\n        className={clsx(\n          styles.content,\n          styles[actualSide],\n          {\n            [styles.withShadow]: brutalistShadow\n          },\n          className\n        )}\n        style={{\n          position: 'fixed',\n          top: `${position.top}px`,\n          left: `${position.left}px`,\n          zIndex: 50\n        }}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      >\n        <div className={styles.contentInner}>\n          {children}\n        </div>\n        <div className={styles.arrow} data-side={actualSide} />\n      </div>\n    )\n  }\n)\n\nHoverCardContent.displayName = 'HoverCardContent'\n\n// Attach compound components\nHoverCard.Trigger = HoverCardTrigger\nHoverCard.Content = HoverCardContent\n\nexport { HoverCardTrigger, HoverCardContent }","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Typography.module.css'\n\nexport interface TypographyProps extends HTMLAttributes<HTMLElement> {\n  variant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'lead' | 'large' | 'small' | 'muted' | 'blockquote' | 'code' | 'list'\n  size?: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl'\n  weight?: 'normal' | 'medium' | 'semibold' | 'bold' | 'black'\n  align?: 'left' | 'center' | 'right' | 'justify'\n  transform?: 'none' | 'uppercase' | 'lowercase' | 'capitalize'\n  color?: 'default' | 'muted' | 'accent' | 'destructive' | 'warning' | 'success'\n  family?: 'mono' | 'sans' | 'serif'\n  truncate?: boolean\n  children: ReactNode\n  asChild?: boolean\n}\n\nconst variantElementMap = {\n  h1: 'h1',\n  h2: 'h2', \n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  p: 'p',\n  lead: 'p',\n  large: 'p',\n  small: 'p',\n  muted: 'p',\n  blockquote: 'blockquote',\n  code: 'code',\n  list: 'ul'\n} as const\n\nexport const Typography = forwardRef<HTMLElement, TypographyProps>(\n  ({\n    variant = 'p',\n    size,\n    weight,\n    align,\n    transform,\n    color = 'default',\n    family,\n    truncate = false,\n    className,\n    children,\n    asChild = false,\n    ...props\n  }, ref) => {\n    const Component = asChild ? 'span' : variantElementMap[variant] as keyof JSX.IntrinsicElements\n\n    return (\n      <Component\n        ref={ref as React.Ref<HTMLElement>}\n        className={clsx(\n          styles.typography,\n          styles[variant],\n          size && styles[`size-${size}`],\n          weight && styles[`weight-${weight}`],\n          align && styles[`align-${align}`],\n          transform && styles[`transform-${transform}`],\n          color && styles[`color-${color}`],\n          family && styles[`family-${family}`],\n          {\n            [styles.truncate]: truncate\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Component>\n    )\n  }\n)\n\nTypography.displayName = 'Typography'\n\n// Convenience components for common use cases\nexport const TypographyH1 = forwardRef<HTMLHeadingElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"h1\" ref={ref} {...props} />\n)\nTypographyH1.displayName = 'TypographyH1'\n\nexport const TypographyH2 = forwardRef<HTMLHeadingElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"h2\" ref={ref} {...props} />\n)\nTypographyH2.displayName = 'TypographyH2'\n\nexport const TypographyH3 = forwardRef<HTMLHeadingElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"h3\" ref={ref} {...props} />\n)\nTypographyH3.displayName = 'TypographyH3'\n\nexport const TypographyH4 = forwardRef<HTMLHeadingElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"h4\" ref={ref} {...props} />\n)\nTypographyH4.displayName = 'TypographyH4'\n\nexport const TypographyP = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"p\" ref={ref} {...props} />\n)\nTypographyP.displayName = 'TypographyP'\n\nexport const TypographyLead = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"lead\" ref={ref} {...props} />\n)\nTypographyLead.displayName = 'TypographyLead'\n\nexport const TypographyLarge = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"large\" ref={ref} {...props} />\n)\nTypographyLarge.displayName = 'TypographyLarge'\n\nexport const TypographySmall = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"small\" ref={ref} {...props} />\n)\nTypographySmall.displayName = 'TypographySmall'\n\nexport const TypographyMuted = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"muted\" ref={ref} {...props} />\n)\nTypographyMuted.displayName = 'TypographyMuted'\n\nexport const TypographyBlockquote = forwardRef<HTMLQuoteElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"blockquote\" ref={ref} {...props} />\n)\nTypographyBlockquote.displayName = 'TypographyBlockquote'\n\nexport const TypographyCode = forwardRef<HTMLElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"code\" ref={ref} {...props} />\n)\nTypographyCode.displayName = 'TypographyCode'\n\nexport const TypographyList = forwardRef<HTMLUListElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"list\" ref={ref} {...props} />\n)\nTypographyList.displayName = 'TypographyList'","import React, { forwardRef, useState, useRef, useEffect, ReactNode, KeyboardEvent } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Command.module.css'\n\n// Context for compound components\nconst CommandContext = React.createContext<{\n  search: string\n  setSearch: (search: string) => void\n  selectedIndex: number\n  setSelectedIndex: (index: number) => void\n  items: CommandItemData[]\n  setItems: (items: CommandItemData[]) => void\n  onSelect?: (value: string) => void\n  visibleCount: number\n  setVisibleCount: (count: number) => void\n} | null>(null)\n\nconst useCommand = () => {\n  const context = React.useContext(CommandContext)\n  if (!context) {\n    throw new Error('Command components must be used within a Command')\n  }\n  return context\n}\n\ninterface CommandItemData {\n  value: string\n  keywords?: string[]\n  disabled?: boolean\n}\n\nexport interface CommandProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: ReactNode\n  className?: string\n  onSelect?: (value: string) => void\n  defaultValue?: string\n  value?: string\n  onValueChange?: (value: string) => void\n  filter?: (value: string, search: string, keywords?: string[]) => number\n  shouldFilter?: boolean\n  placeholder?: string\n}\n\nexport const Command: React.FC<CommandProps> & {\n  Input: typeof CommandInput\n  List: typeof CommandList\n  Empty: typeof CommandEmpty\n  Group: typeof CommandGroup\n  Item: typeof CommandItem\n  Separator: typeof CommandSeparator\n} = ({\n  children,\n  className,\n  onSelect,\n  defaultValue = '',\n  value: controlledValue,\n  onValueChange,\n  filter,\n  shouldFilter = true, // eslint-disable-line @typescript-eslint/no-unused-vars\n  ...props\n}) => {\n  const [search, setSearch] = useState(defaultValue)\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const [items, setItems] = useState<CommandItemData[]>([])\n  const [visibleCount, setVisibleCount] = useState(0)\n  const isControlled = controlledValue !== undefined\n\n  const currentSearch = isControlled ? controlledValue : search\n\n  const handleSearchChange = (newSearch: string) => {\n    if (!isControlled) {\n      setSearch(newSearch)\n    }\n    onValueChange?.(newSearch)\n    setSelectedIndex(0)\n  }\n\n  // Default filter function\n  const defaultFilter = (value: string, search: string, keywords?: string[]) => {\n    const searchLower = search.toLowerCase()\n    const valueLower = value.toLowerCase()\n    \n    if (valueLower.includes(searchLower)) return 1\n    \n    if (keywords) {\n      for (const keyword of keywords) {\n        if (keyword.toLowerCase().includes(searchLower)) return 1\n      }\n    }\n    \n    return 0\n  }\n\n  const filterFunction = filter || defaultFilter // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  return (\n    <CommandContext.Provider \n      value={{\n        search: currentSearch,\n        setSearch: handleSearchChange,\n        selectedIndex,\n        setSelectedIndex,\n        items,\n        setItems,\n        onSelect,\n        visibleCount,\n        setVisibleCount\n      }}\n    >\n      <div\n        className={clsx(styles.command, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    </CommandContext.Provider>\n  )\n}\n\nexport interface CommandInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string\n}\n\nconst CommandInput = forwardRef<HTMLInputElement, CommandInputProps>(\n  ({ className, ...props }, ref) => {\n    const { search, setSearch, selectedIndex, setSelectedIndex, items, onSelect } = useCommand()\n\n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault()\n          setSelectedIndex(Math.min(selectedIndex + 1, items.length - 1))\n          break\n        case 'ArrowUp':\n          e.preventDefault()\n          setSelectedIndex(Math.max(selectedIndex - 1, 0))\n          break\n        case 'Enter':\n          e.preventDefault()\n          if (items[selectedIndex] && !items[selectedIndex].disabled) {\n            onSelect?.(items[selectedIndex].value)\n          }\n          break\n        case 'Escape':\n          e.preventDefault()\n          setSearch('')\n          break\n      }\n      props.onKeyDown?.(e)\n    }\n\n    return (\n      <div className={styles.inputWrapper}>\n        <input\n          ref={ref}\n          className={clsx(styles.input, className)}\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyDown={handleKeyDown}\n          {...props}\n        />\n      </div>\n    )\n  }\n)\n\nCommandInput.displayName = 'CommandInput'\n\nexport interface CommandListProps {\n  children: ReactNode\n  className?: string\n}\n\nconst CommandList = forwardRef<HTMLDivElement, CommandListProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.list, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCommandList.displayName = 'CommandList'\n\nexport interface CommandEmptyProps {\n  children: ReactNode\n  className?: string\n}\n\nconst CommandEmpty = forwardRef<HTMLDivElement, CommandEmptyProps>(\n  ({ children, className, ...props }, ref) => {\n    const { visibleCount, search } = useCommand()\n    \n    if (visibleCount > 0 || !search) return null\n    \n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.empty, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCommandEmpty.displayName = 'CommandEmpty'\n\nexport interface CommandGroupProps {\n  children: ReactNode\n  heading?: string\n  className?: string\n}\n\nconst CommandGroup = forwardRef<HTMLDivElement, CommandGroupProps>(\n  ({ children, heading, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.group, className)}\n        {...props}\n      >\n        {heading && (\n          <div className={styles.groupHeading}>\n            {heading}\n          </div>\n        )}\n        <div className={styles.groupItems}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n)\n\nCommandGroup.displayName = 'CommandGroup'\n\nexport interface CommandItemProps {\n  children: ReactNode\n  value: string\n  keywords?: string[]\n  disabled?: boolean\n  className?: string\n  onSelect?: (value: string) => void\n}\n\nconst CommandItem = forwardRef<HTMLDivElement, CommandItemProps>(\n  ({ children, value, keywords = [], disabled = false, className, onSelect: onItemSelect, ...props }, ref) => {\n    const { search, selectedIndex, setItems, onSelect, setVisibleCount } = useCommand()\n    const itemIndex = useRef<number>(-1)\n\n    // Register item with command context\n    useEffect(() => {\n      const item: CommandItemData = { value, keywords, disabled }\n      setItems((prev: CommandItemData[]) => {\n        const newItems = [...prev, item]\n        itemIndex.current = newItems.length - 1\n        return newItems\n      })\n\n      return () => {\n        setItems((prev: CommandItemData[]) => prev.filter((item: CommandItemData) => item.value !== value))\n      }\n    }, [value, keywords, disabled, setItems])\n\n    const isSelected = itemIndex.current === selectedIndex\n\n    const handleClick = () => {\n      if (!disabled) {\n        onItemSelect?.(value)\n        onSelect?.(value)\n      }\n    }\n\n    const handleMouseEnter = () => {\n      if (!disabled && itemIndex.current >= 0) {\n        // setSelectedIndex(itemIndex.current)\n      }\n    }\n\n    // Filter logic\n    const shouldShow = React.useMemo(() => {\n      if (!search) return true\n      \n      const searchLower = search.toLowerCase()\n      const valueLower = value.toLowerCase()\n      \n      if (valueLower.includes(searchLower)) return true\n      \n      return keywords.some(keyword => \n        keyword.toLowerCase().includes(searchLower)\n      )\n    }, [search, value, keywords])\n\n    // Update visible count when visibility changes\n    useEffect(() => {\n      if (shouldShow) {\n        setVisibleCount(prev => prev + 1)\n        return () => setVisibleCount(prev => prev - 1)\n      }\n    }, [shouldShow, setVisibleCount])\n\n    if (!shouldShow) return null\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.item,\n          {\n            [styles.itemSelected]: isSelected,\n            [styles.itemDisabled]: disabled\n          },\n          className\n        )}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        role=\"option\"\n        aria-selected={isSelected}\n        aria-disabled={disabled}\n        data-value={value}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCommandItem.displayName = 'CommandItem'\n\nexport interface CommandSeparatorProps {\n  className?: string\n}\n\nconst CommandSeparator = forwardRef<HTMLDivElement, CommandSeparatorProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.separator, className)}\n        role=\"separator\"\n        {...props}\n      />\n    )\n  }\n)\n\nCommandSeparator.displayName = 'CommandSeparator'\n\n// Attach compound components\nCommand.Input = CommandInput\nCommand.List = CommandList\nCommand.Empty = CommandEmpty\nCommand.Group = CommandGroup\nCommand.Item = CommandItem\nCommand.Separator = CommandSeparator\n\nexport { CommandInput, CommandList, CommandEmpty, CommandGroup, CommandItem, CommandSeparator }","import React, { forwardRef, InputHTMLAttributes, useState, useEffect, useRef } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Slider.module.css'\n\nexport interface SliderProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size' | 'type'> {\n  size?: 'sm' | 'md' | 'lg'\n  orientation?: 'horizontal' | 'vertical'\n  showValue?: boolean\n  marks?: number[] | { value: number; label?: string }[]\n  min?: number\n  max?: number\n  step?: number\n  disabled?: boolean\n  className?: string\n  trackClassName?: string\n  thumbClassName?: string\n  valueClassName?: string\n}\n\nexport const Slider = forwardRef<HTMLInputElement, SliderProps>(\n  (\n    {\n      size = 'md',\n      orientation = 'horizontal',\n      showValue = false,\n      marks,\n      min = 0,\n      max = 100,\n      step = 1,\n      disabled = false,\n      value: propValue,\n      defaultValue = min,\n      onChange,\n      className,\n      trackClassName,\n      thumbClassName,\n      valueClassName,\n      ...props\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState<number>(\n      propValue !== undefined ? Number(propValue) : Number(defaultValue)\n    )\n    const internalRef = useRef<HTMLInputElement>(null)\n    const sliderRef = ref || internalRef\n\n    useEffect(() => {\n      if (propValue !== undefined) {\n        setValue(Number(propValue))\n      }\n    }, [propValue])\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(e.target.value)\n      setValue(newValue)\n      onChange?.(e)\n    }\n\n    const percentage = ((value - min) / (max - min)) * 100\n\n    const renderMarks = () => {\n      if (!marks) return null\n\n      const normalizedMarks = marks.map((mark) =>\n        typeof mark === 'number' ? { value: mark } : mark\n      )\n\n      return (\n        <div className={styles.marks}>\n          {normalizedMarks.map((mark) => {\n            const markPercentage = ((mark.value - min) / (max - min)) * 100\n            const markStyle =\n              orientation === 'horizontal'\n                ? { left: `${markPercentage}%` }\n                : { bottom: `${markPercentage}%` }\n\n            return (\n              <div\n                key={mark.value}\n                className={clsx(styles.mark, {\n                  [styles.markActive]: value >= mark.value,\n                })}\n                style={markStyle}\n              >\n                <div className={styles.markTick} />\n                {mark.label && (\n                  <div className={styles.markLabel}>{mark.label}</div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      )\n    }\n\n    const sliderStyle =\n      orientation === 'horizontal'\n        ? {\n            '--slider-percentage': `${percentage}%`,\n          }\n        : {\n            '--slider-percentage': `${percentage}%`,\n            height: '200px',\n          }\n\n    return (\n      <div\n        className={clsx(\n          styles.container,\n          styles[size],\n          styles[orientation],\n          {\n            [styles.disabled]: disabled,\n            [styles.withValue]: showValue,\n          },\n          className\n        )}\n        style={sliderStyle as React.CSSProperties}\n      >\n        <div className={clsx(styles.track, trackClassName)}>\n          <div className={styles.progress} />\n          <input\n            ref={sliderRef}\n            type=\"range\"\n            min={min}\n            max={max}\n            step={step}\n            value={value}\n            disabled={disabled}\n            onChange={handleChange}\n            className={clsx(styles.input)}\n            {...props}\n          />\n          <div className={clsx(styles.thumb, thumbClassName)} />\n          {renderMarks()}\n        </div>\n        {showValue && (\n          <div className={clsx(styles.value, valueClassName)}>\n            {value}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nSlider.displayName = 'Slider'","import React, { useState, forwardRef, ImgHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Avatar.module.css'\n\nexport interface AvatarProps extends Omit<ImgHTMLAttributes<HTMLImageElement>, 'size' | 'children'> {\n  /** Image source URL */\n  src?: string\n  /** Alt text for the image */\n  alt?: string\n  /** Initials to display when no image */\n  initials?: string\n  /** Icon to display as fallback */\n  icon?: React.ReactNode\n  /** Avatar size */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  /** Status indicator */\n  status?: 'online' | 'offline' | 'busy' | 'away'\n  /** Additional CSS classes */\n  className?: string\n  /** Custom click handler */\n  onClick?: () => void\n  /** Whether the avatar is clickable */\n  clickable?: boolean\n}\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>(\n  (\n    {\n      src,\n      alt,\n      initials,\n      icon,\n      size = 'md',\n      status,\n      className,\n      onClick,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) => {\n    const [imageError, setImageError] = useState(false)\n    const [imageLoaded, setImageLoaded] = useState(false)\n\n    const handleImageError = () => {\n      setImageError(true)\n    }\n\n    const handleImageLoad = () => {\n      setImageLoaded(true)\n      setImageError(false)\n    }\n\n    const hasImage = src && !imageError\n    const hasInitials = initials && initials.length > 0\n    const hasIcon = icon\n\n    // Determine what to display based on available data and fallback order\n    const showImage = hasImage\n    const showInitials = !hasImage && hasInitials\n    const showIcon = !hasImage && !hasInitials && hasIcon\n\n    // Get initials (first 2 characters max)\n    const displayInitials = initials ? initials.slice(0, 2).toUpperCase() : ''\n\n    // Default icon if no image, initials, or custom icon\n    const defaultIcon = (\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        className={styles.defaultIcon}\n      >\n        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n      </svg>\n    )\n\n    const isClickable = clickable || !!onClick\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.container,\n          styles[size],\n          {\n            [styles.clickable]: isClickable,\n            [styles.hasStatus]: !!status,\n          },\n          className\n        )}\n        onClick={isClickable ? onClick : undefined}\n        role={isClickable ? 'button' : undefined}\n        tabIndex={isClickable ? 0 : undefined}\n        onKeyDown={\n          isClickable\n            ? (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault()\n                  onClick?.()\n                }\n              }\n            : undefined\n        }\n        aria-label={alt || `Avatar${initials ? ` for ${initials}` : ''}`}\n      >\n        <div className={styles.avatar}>\n          {showImage && (\n            <img\n              src={src}\n              alt={alt}\n              className={clsx(styles.image, {\n                [styles.loaded]: imageLoaded,\n              })}\n              onError={handleImageError}\n              onLoad={handleImageLoad}\n              {...props}\n            />\n          )}\n          \n          {showInitials && (\n            <span className={styles.initials} aria-label={`Initials: ${displayInitials}`}>\n              {displayInitials}\n            </span>\n          )}\n          \n          {showIcon && (\n            <span className={styles.iconWrapper} aria-label=\"Avatar icon\">\n              {icon}\n            </span>\n          )}\n          \n          {!showImage && !showInitials && !showIcon && (\n            <span className={styles.iconWrapper} aria-label=\"Default avatar\">\n              {defaultIcon}\n            </span>\n          )}\n        </div>\n        \n        {status && (\n          <div\n            className={clsx(styles.status, styles[status])}\n            aria-label={`Status: ${status}`}\n            role=\"img\"\n          />\n        )}\n      </div>\n    )\n  }\n)\n\nAvatar.displayName = 'Avatar'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Badge.module.css'\n\nexport interface BadgeProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Badge content */\n  children?: React.ReactNode\n  /** Badge variant */\n  variant?: 'solid' | 'outline' | 'dot' | 'secondary'\n  /** Badge color */\n  color?: 'accent' | 'success' | 'warning' | 'error' | 'info' | 'neutral'\n  /** Badge size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the badge is dismissible */\n  dismissible?: boolean\n  /** Click handler for dismissible badges */\n  onDismiss?: () => void\n  /** Additional CSS classes */\n  className?: string\n  /** Custom click handler */\n  onClick?: () => void\n  /** Whether the badge is clickable */\n  clickable?: boolean\n}\n\nexport const Badge = forwardRef<HTMLSpanElement, BadgeProps>(\n  (\n    {\n      children,\n      variant = 'solid',\n      color = 'accent',\n      size = 'md',\n      dismissible = false,\n      onDismiss,\n      className,\n      onClick,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) => {\n    const isDot = variant === 'dot'\n    const isClickable = clickable || !!onClick\n    const isDismissible = dismissible && !!onDismiss\n\n    const handleDismiss = (e: React.MouseEvent) => {\n      e.stopPropagation()\n      onDismiss?.()\n    }\n\n    const handleClick = () => {\n      if (isClickable) {\n        onClick?.()\n      }\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (isClickable && (e.key === 'Enter' || e.key === ' ')) {\n        e.preventDefault()\n        onClick?.()\n      }\n    }\n\n    // For dot variant, don't render children\n    const content = isDot ? null : children\n\n    // Dismiss icon\n    const dismissIcon = (\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        className={styles.dismissIcon}\n        aria-hidden=\"true\"\n      >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n      </svg>\n    )\n\n    return (\n      <span\n        ref={ref}\n        className={clsx(\n          styles.badge,\n          styles[variant],\n          styles[color],\n          styles[size],\n          {\n            [styles.clickable]: isClickable,\n            [styles.dismissible]: isDismissible,\n            [styles.dot]: isDot,\n          },\n          className\n        )}\n        onClick={isClickable ? handleClick : undefined}\n        onKeyDown={isClickable ? handleKeyDown : undefined}\n        role={isClickable ? 'button' : isDot ? 'status' : undefined}\n        tabIndex={isClickable ? 0 : undefined}\n        aria-label={\n          isDot \n            ? `${color} status indicator` \n            : typeof children === 'string' \n              ? children \n              : undefined\n        }\n        {...props}\n      >\n        {content}\n        \n        {isDismissible && (\n          <button\n            type=\"button\"\n            className={styles.dismissButton}\n            onClick={handleDismiss}\n            aria-label=\"Dismiss badge\"\n            tabIndex={-1}\n          >\n            {dismissIcon}\n          </button>\n        )}\n      </span>\n    )\n  }\n)\n\nBadge.displayName = 'Badge'","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Card.module.css'\n\nexport interface CardProps extends HTMLAttributes<HTMLDivElement> {\n  /** Visual variant of the card */\n  variant?: 'elevated' | 'flat' | 'outline'\n  /** Padding options */\n  padding?: 'none' | 'sm' | 'md' | 'lg'\n  /** Whether the card is clickable */\n  clickable?: boolean\n  /** Whether to show hover effects */\n  hover?: boolean\n}\n\nexport interface CardHeaderProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface CardBodyProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface CardFooterProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst Card = forwardRef<HTMLDivElement, CardProps>(\n  (\n    {\n      children,\n      className,\n      variant = 'elevated',\n      padding = 'md',\n      clickable = false,\n      hover = true,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.card,\n          styles[variant],\n          styles[`padding-${padding}`],\n          {\n            [styles.clickable]: clickable,\n            [styles.hover]: hover && !clickable,\n          },\n          className\n        )}\n        role={clickable ? 'button' : undefined}\n        tabIndex={clickable ? 0 : undefined}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardHeader = forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.header, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardBody = forwardRef<HTMLDivElement, CardBodyProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.body, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardFooter = forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.footer, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCard.displayName = 'Card'\nCardHeader.displayName = 'Card.Header'\nCardBody.displayName = 'Card.Body'\nCardFooter.displayName = 'Card.Footer'\n\n// Compound component\nconst CardComponent = Card as typeof Card & {\n  Header: typeof CardHeader\n  Body: typeof CardBody\n  Footer: typeof CardFooter\n}\n\nCardComponent.Header = CardHeader\nCardComponent.Body = CardBody\nCardComponent.Footer = CardFooter\n\nexport { CardComponent as Card }","import { forwardRef, HTMLAttributes, useState } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Alert.module.css'\n\nexport interface AlertProps extends HTMLAttributes<HTMLDivElement> {\n  /** Type of alert */\n  type?: 'info' | 'success' | 'warning' | 'error'\n  /** Visual variant */\n  variant?: 'filled' | 'outline'\n  /** Size of the alert */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the alert can be dismissed */\n  dismissible?: boolean\n  /** Callback when alert is dismissed */\n  onDismiss?: () => void\n}\n\nexport interface AlertIconProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface AlertContentProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface AlertTitleProps extends HTMLAttributes<HTMLHeadingElement> {}\nexport interface AlertDescriptionProps extends HTMLAttributes<HTMLParagraphElement> {}\nexport interface AlertActionsProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(\n  (\n    {\n      children,\n      className,\n      type = 'info',\n      variant = 'filled',\n      size = 'md',\n      dismissible = false,\n      onDismiss,\n      ...props\n    },\n    ref\n  ) => {\n    const [dismissed, setDismissed] = useState(false)\n    const [isExiting, setIsExiting] = useState(false)\n\n    const handleDismiss = () => {\n      setIsExiting(true)\n      // Wait for animation to complete before removing from DOM\n      setTimeout(() => {\n        setDismissed(true)\n        onDismiss?.()\n      }, 300) // Match animation duration\n    }\n\n    if (dismissed) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.alert,\n          styles[type],\n          styles[variant],\n          styles[size],\n          {\n            [styles.dismissible]: dismissible,\n            [styles.exiting]: isExiting,\n          },\n          className\n        )}\n        role=\"alert\"\n        aria-live=\"polite\"\n        {...props}\n      >\n        {children}\n        {dismissible && (\n          <button\n            className={styles.dismissButton}\n            onClick={handleDismiss}\n            aria-label=\"Dismiss alert\"\n            type=\"button\"\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M12 4L4 12M4 4L12 12\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n              />\n            </svg>\n          </button>\n        )}\n      </div>\n    )\n  }\n)\n\nconst AlertIcon = forwardRef<HTMLDivElement, AlertIconProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.icon, className)}\n        {...props}\n      >\n        {children || <DefaultIcon />}\n      </div>\n    )\n  }\n)\n\nconst AlertContent = forwardRef<HTMLDivElement, AlertContentProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.content, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst AlertTitle = forwardRef<HTMLHeadingElement, AlertTitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <h4\n        ref={ref}\n        className={clsx(styles.title, className)}\n        {...props}\n      >\n        {children}\n      </h4>\n    )\n  }\n)\n\nconst AlertDescription = forwardRef<HTMLParagraphElement, AlertDescriptionProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={clsx(styles.description, className)}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\nconst AlertActions = forwardRef<HTMLDivElement, AlertActionsProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.actions, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Default icon component\nconst DefaultIcon = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle\n      cx=\"10\"\n      cy=\"10\"\n      r=\"8\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M10 6V10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n    />\n    <circle\n      cx=\"10\"\n      cy=\"14\"\n      r=\"1\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nAlert.displayName = 'Alert'\nAlertIcon.displayName = 'Alert.Icon'\nAlertContent.displayName = 'Alert.Content'\nAlertTitle.displayName = 'Alert.Title'\nAlertDescription.displayName = 'Alert.Description'\nAlertActions.displayName = 'Alert.Actions'\n\n// Compound component\nconst AlertComponent = Alert as typeof Alert & {\n  Icon: typeof AlertIcon\n  Content: typeof AlertContent\n  Title: typeof AlertTitle\n  Description: typeof AlertDescription\n  Actions: typeof AlertActions\n}\n\nAlertComponent.Icon = AlertIcon\nAlertComponent.Content = AlertContent\nAlertComponent.Title = AlertTitle\nAlertComponent.Description = AlertDescription\nAlertComponent.Actions = AlertActions\n\nexport { AlertComponent as Alert }","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './AlertStack.module.css'\n\nexport interface AlertStackProps extends HTMLAttributes<HTMLDivElement> {\n  /** Direction of the stack */\n  direction?: 'vertical' | 'horizontal'\n  /** Gap between alerts */\n  gap?: 'sm' | 'md' | 'lg'\n}\n\nexport const AlertStack = forwardRef<HTMLDivElement, AlertStackProps>(\n  (\n    {\n      children,\n      className,\n      direction = 'vertical',\n      gap = 'md',\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.stack,\n          styles[direction],\n          styles[`gap-${gap}`],\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nAlertStack.displayName = 'AlertStack'","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Progress.module.css'\n\nexport interface ProgressProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  /** Progress value (0-max for determinate, undefined for indeterminate) */\n  value?: number\n  /** Maximum value */\n  max?: number\n  /** Progress type */\n  type?: 'linear' | 'circular'\n  /** Progress variant */\n  variant?: 'default' | 'striped' | 'animated'\n  /** Progress size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether to show the value label */\n  showLabel?: boolean\n  /** Custom label text (overrides default percentage) */\n  label?: string\n  /** Whether progress is indeterminate */\n  indeterminate?: boolean\n  /** Progress bar color */\n  color?: 'accent' | 'success' | 'warning' | 'error' | 'info'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  (\n    {\n      value,\n      max = 100,\n      type = 'linear',\n      variant = 'default',\n      size = 'md',\n      showLabel = false,\n      label,\n      indeterminate = false,\n      color = 'accent',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Calculate progress percentage\n    const progressValue = indeterminate ? undefined : Math.min(Math.max((value ?? 0) / max * 100, 0), 100)\n    const isCircular = type === 'circular'\n    \n    // Calculate label text\n    const labelText = label || (progressValue !== undefined ? `${Math.round(progressValue)}%` : '')\n    \n    // Squared circular progress calculations\n    const boxSize = isCircular ? (size === 'sm' ? 40 : size === 'lg' ? 80 : 60) : 0\n    const pathLength = isCircular ? boxSize * 4 - 16 : 0 // Perimeter minus corners\n    const dashOffset = isCircular && progressValue !== undefined \n      ? pathLength - (progressValue / 100) * pathLength \n      : 0\n\n    const progressBarStyles = {\n      ...(type === 'linear' && progressValue !== undefined && {\n        width: `${progressValue}%`,\n      }),\n      ...(isCircular && progressValue !== undefined && {\n        strokeDasharray: pathLength,\n        strokeDashoffset: dashOffset,\n      }),\n    }\n\n    const commonClasses = clsx(\n      styles.progress,\n      styles[type],\n      styles[variant],\n      styles[size],\n      styles[color],\n      {\n        [styles.indeterminate]: indeterminate,\n        [styles.withLabel]: showLabel,\n      },\n      className\n    )\n\n    // Accessibility props\n    const progressRole = 'progressbar'\n    const ariaValueNow = indeterminate ? undefined : value ?? 0\n    const ariaValueMin = 0\n    const ariaValueMax = max\n    const ariaLabel = label || (indeterminate ? 'Loading' : `${Math.round(progressValue ?? 0)} percent complete`)\n\n    if (isCircular) {\n      const strokeWidth = size === 'sm' ? 3 : size === 'lg' ? 6 : 4\n      const padding = strokeWidth + 2\n      const svgSize = boxSize + padding * 2\n      const cornerSize = 4\n\n      return (\n        <div\n          ref={ref}\n          className={commonClasses}\n          role={progressRole}\n          aria-valuenow={ariaValueNow}\n          aria-valuemin={ariaValueMin}\n          aria-valuemax={ariaValueMax}\n          aria-label={ariaLabel}\n          {...props}\n        >\n          <div className={styles.circularContainer}>\n            <svg\n              className={styles.circularSvg}\n              width={svgSize}\n              height={svgSize}\n              viewBox={`0 0 ${svgSize} ${svgSize}`}\n            >\n              {/* Background square track */}\n              <rect\n                className={styles.circularTrack}\n                x={padding}\n                y={padding}\n                width={boxSize}\n                height={boxSize}\n                rx={cornerSize}\n                ry={cornerSize}\n                fill=\"none\"\n                strokeWidth={strokeWidth}\n              />\n              {/* Progress square */}\n              <rect\n                className={styles.circularBar}\n                x={padding}\n                y={padding}\n                width={boxSize}\n                height={boxSize}\n                rx={cornerSize}\n                ry={cornerSize}\n                fill=\"none\"\n                strokeWidth={strokeWidth}\n                style={progressBarStyles}\n                strokeLinecap=\"square\"\n                transform={`rotate(-90 ${svgSize / 2} ${svgSize / 2})`}\n              />\n            </svg>\n            {showLabel && (\n              <div className={styles.circularLabel}>\n                {labelText}\n              </div>\n            )}\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={commonClasses}\n        role={progressRole}\n        aria-valuenow={ariaValueNow}\n        aria-valuemin={ariaValueMin}\n        aria-valuemax={ariaValueMax}\n        aria-label={ariaLabel}\n        {...props}\n      >\n        <div className={styles.track}>\n          <div\n            className={styles.bar}\n            style={progressBarStyles}\n            aria-hidden=\"true\"\n          />\n        </div>\n        {showLabel && (\n          <div className={styles.label}>\n            {labelText}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nProgress.displayName = 'Progress'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Skeleton.module.css'\n\nexport interface SkeletonProps extends HTMLAttributes<HTMLDivElement> {\n  /** Shape of the skeleton */\n  shape?: 'text' | 'circular' | 'rectangular'\n  /** Animation type */\n  animation?: 'pulse' | 'wave' | 'none'\n  /** Width of the skeleton (for rectangular and circular) */\n  width?: number | string\n  /** Height of the skeleton (for rectangular and circular) */\n  height?: number | string\n  /** Number of text lines (only for text shape) */\n  lines?: 1 | 2 | 3 | 4 | 5\n  /** Variant style */\n  variant?: 'default' | 'rounded'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Skeleton = forwardRef<HTMLDivElement, SkeletonProps>(\n  (\n    {\n      shape = 'text',\n      animation = 'pulse',\n      width,\n      height,\n      lines = 1,\n      variant = 'default',\n      className,\n      style,\n      ...props\n    },\n    ref\n  ) => {\n    const isText = shape === 'text'\n    const isCircular = shape === 'circular'\n\n    // Generate styles for width and height\n    const dimensionStyles: React.CSSProperties = {\n      ...style,\n      ...(width && { width: typeof width === 'number' ? `${width}px` : width }),\n      ...(height && { height: typeof height === 'number' ? `${height}px` : height }),\n    }\n\n    // For circular, use width as diameter if height not specified\n    if (isCircular && width && !height) {\n      dimensionStyles.height = dimensionStyles.width\n    }\n\n    const baseClasses = clsx(\n      styles.skeleton,\n      styles[shape],\n      styles[animation],\n      styles[variant],\n      className\n    )\n\n    // For text skeleton with multiple lines\n    if (isText && lines > 1) {\n      const textLines = Array.from({ length: lines }, (_, index) => {\n        const isLastLine = index === lines - 1\n        const lineWidth = isLastLine ? '75%' : '100%'\n        \n        return (\n          <div\n            key={index}\n            className={clsx(styles.skeleton, styles.text, styles[animation], styles[variant])}\n            style={{ \n              width: lineWidth,\n              marginBottom: index < lines - 1 ? 'var(--brutal-space-2)' : 0 \n            }}\n            aria-hidden=\"true\"\n          />\n        )\n      })\n\n      return (\n        <div\n          ref={ref}\n          className={styles.textContainer}\n          role=\"status\"\n          aria-label=\"Loading content\"\n          {...props}\n        >\n          {textLines}\n        </div>\n      )\n    }\n\n    // Single skeleton element\n    return (\n      <div\n        ref={ref}\n        className={baseClasses}\n        style={dimensionStyles}\n        role=\"status\"\n        aria-label=\"Loading content\"\n        aria-hidden=\"true\"\n        {...props}\n      />\n    )\n  }\n)\n\nSkeleton.displayName = 'Skeleton'","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Tooltip.module.css'\n\nexport type TooltipPosition = 'top' | 'bottom' | 'left' | 'right' | 'auto'\nexport type TooltipTrigger = 'hover' | 'click' | 'focus' | 'manual'\n\nexport interface TooltipProps {\n  /** The content to display inside the tooltip */\n  content: React.ReactNode\n  /** The element that triggers the tooltip */\n  children: React.ReactElement\n  /** Position of the tooltip relative to the trigger */\n  position?: TooltipPosition\n  /** How the tooltip is triggered */\n  trigger?: TooltipTrigger\n  /** Delay before showing tooltip (ms) */\n  showDelay?: number\n  /** Delay before hiding tooltip (ms) */\n  hideDelay?: number\n  /** Whether the tooltip is currently visible (for manual trigger) */\n  visible?: boolean\n  /** Callback when visibility changes (for manual trigger) */\n  onVisibilityChange?: (visible: boolean) => void\n  /** Whether to show an arrow pointing to the trigger */\n  showArrow?: boolean\n  /** Additional CSS classes */\n  className?: string\n  /** Whether the tooltip is disabled */\n  disabled?: boolean\n  /** Maximum width of the tooltip */\n  maxWidth?: number\n}\n\nexport const Tooltip: React.FC<TooltipProps> = ({\n  content,\n  children,\n  position = 'top',\n  trigger = 'hover',\n  showDelay = 0,\n  hideDelay = 0,\n  visible: controlledVisible,\n  onVisibilityChange,\n  showArrow = true,\n  className,\n  disabled = false,\n  maxWidth = 300,\n}) => {\n  const [visible, setVisible] = useState(false)\n  const [actualPosition, setActualPosition] = useState<TooltipPosition>(position)\n  const [coords, setCoords] = useState({ x: 0, y: 0 })\n  const triggerRef = useRef<HTMLElement>(null)\n  const tooltipRef = useRef<HTMLDivElement>(null)\n  const showTimeoutRef = useRef<NodeJS.Timeout>()\n  const hideTimeoutRef = useRef<NodeJS.Timeout>()\n\n  const isVisible = controlledVisible !== undefined ? controlledVisible : visible\n\n  // Calculate position and coordinates\n  const calculatePosition = useCallback(() => {\n    if (!triggerRef.current || !tooltipRef.current) return\n\n    const triggerRect = triggerRef.current.getBoundingClientRect()\n    const tooltipRect = tooltipRef.current.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    const scrollX = window.scrollX\n    const scrollY = window.scrollY\n\n    let finalPosition = position\n    let x = 0\n    let y = 0\n\n    // Auto positioning logic\n    if (position === 'auto') {\n      const spaceTop = triggerRect.top\n      const spaceBottom = viewportHeight - triggerRect.bottom\n      const spaceLeft = triggerRect.left\n      const spaceRight = viewportWidth - triggerRect.right\n\n      if (spaceTop >= tooltipRect.height + 10) {\n        finalPosition = 'top'\n      } else if (spaceBottom >= tooltipRect.height + 10) {\n        finalPosition = 'bottom'\n      } else if (spaceRight >= tooltipRect.width + 10) {\n        finalPosition = 'right'\n      } else if (spaceLeft >= tooltipRect.width + 10) {\n        finalPosition = 'left'\n      } else {\n        finalPosition = 'bottom' // fallback\n      }\n    }\n\n    // Calculate coordinates based on final position\n    switch (finalPosition) {\n      case 'top':\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2\n        y = triggerRect.top - tooltipRect.height - 8\n        break\n      case 'bottom':\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2\n        y = triggerRect.bottom + 8\n        break\n      case 'left':\n        x = triggerRect.left - tooltipRect.width - 8\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2\n        break\n      case 'right':\n        x = triggerRect.right + 8\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2\n        break\n    }\n\n    // Adjust for viewport boundaries\n    x = Math.max(8, Math.min(x, viewportWidth - tooltipRect.width - 8))\n    y = Math.max(8, Math.min(y, viewportHeight - tooltipRect.height - 8))\n\n    setActualPosition(finalPosition)\n    setCoords({\n      x: x + scrollX,\n      y: y + scrollY,\n    })\n  }, [position])\n\n  // Show tooltip\n  const showTooltip = useCallback(() => {\n    if (disabled) return\n    \n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current)\n      hideTimeoutRef.current = undefined\n    }\n\n    if (showDelay > 0) {\n      showTimeoutRef.current = setTimeout(() => {\n        if (controlledVisible === undefined) {\n          setVisible(true)\n        }\n        onVisibilityChange?.(true)\n      }, showDelay)\n    } else {\n      if (controlledVisible === undefined) {\n        setVisible(true)\n      }\n      onVisibilityChange?.(true)\n    }\n  }, [disabled, showDelay, controlledVisible, onVisibilityChange])\n\n  // Hide tooltip\n  const hideTooltip = useCallback(() => {\n    if (showTimeoutRef.current) {\n      clearTimeout(showTimeoutRef.current)\n      showTimeoutRef.current = undefined\n    }\n\n    if (hideDelay > 0) {\n      hideTimeoutRef.current = setTimeout(() => {\n        if (controlledVisible === undefined) {\n          setVisible(false)\n        }\n        onVisibilityChange?.(false)\n      }, hideDelay)\n    } else {\n      if (controlledVisible === undefined) {\n        setVisible(false)\n      }\n      onVisibilityChange?.(false)\n    }\n  }, [hideDelay, controlledVisible, onVisibilityChange])\n\n  // Handle keyboard events\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Escape' && isVisible) {\n      hideTooltip()\n    }\n  }, [isVisible, hideTooltip])\n\n  // Effect to handle position calculation\n  useEffect(() => {\n    if (isVisible && triggerRef.current) {\n      calculatePosition()\n      \n      const handleResize = () => calculatePosition()\n      const handleScroll = () => calculatePosition()\n      \n      window.addEventListener('resize', handleResize)\n      window.addEventListener('scroll', handleScroll)\n      document.addEventListener('keydown', handleKeyDown)\n      \n      return () => {\n        window.removeEventListener('resize', handleResize)\n        window.removeEventListener('scroll', handleScroll)\n        document.removeEventListener('keydown', handleKeyDown)\n      }\n    }\n  }, [isVisible, calculatePosition, handleKeyDown])\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (showTimeoutRef.current) {\n        clearTimeout(showTimeoutRef.current)\n      }\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current)\n      }\n    }\n  }, [])\n\n  // Create trigger event handlers\n  const triggerProps: Record<string, (() => void) | ((e: React.MouseEvent) => void)> = {}\n  \n  if (trigger === 'hover') {\n    triggerProps.onMouseEnter = showTooltip\n    triggerProps.onMouseLeave = hideTooltip\n  } else if (trigger === 'click') {\n    triggerProps.onClick = (e: React.MouseEvent) => {\n      e.preventDefault()\n      if (isVisible) {\n        hideTooltip()\n      } else {\n        showTooltip()\n      }\n    }\n  } else if (trigger === 'focus') {\n    triggerProps.onFocus = showTooltip\n    triggerProps.onBlur = hideTooltip\n  }\n\n  // Clone trigger element with event handlers\n  const triggerElement = React.cloneElement(children, {\n    ...triggerProps,\n    ref: (el: HTMLElement) => {\n      if (triggerRef) {\n        (triggerRef as React.MutableRefObject<HTMLElement | null>).current = el\n      }\n      const childRef = (children as React.ReactElement & { ref?: React.Ref<HTMLElement> }).ref\n      if (typeof childRef === 'function') {\n        childRef(el)\n      } else if (childRef && typeof childRef === 'object') {\n        (childRef as React.MutableRefObject<HTMLElement | null>).current = el\n      }\n    },\n    'aria-describedby': isVisible ? 'tooltip' : undefined,\n  })\n\n  // Render tooltip portal\n  const tooltipPortal = isVisible ? createPortal(\n    <div\n      ref={tooltipRef}\n      className={clsx(\n        styles.tooltip,\n        styles[actualPosition],\n        {\n          [styles.withArrow]: showArrow,\n        },\n        className\n      )}\n      style={{\n        position: 'absolute',\n        left: coords.x,\n        top: coords.y,\n        maxWidth,\n        zIndex: 'var(--brutal-z-tooltip)',\n      }}\n      role=\"tooltip\"\n      id=\"tooltip\"\n      onMouseEnter={trigger === 'hover' ? showTooltip : undefined}\n      onMouseLeave={trigger === 'hover' ? hideTooltip : undefined}\n    >\n      {showArrow && <div className={styles.arrow} />}\n      <div className={styles.content}>\n        {content}\n      </div>\n    </div>,\n    document.body\n  ) : null\n\n  return (\n    <>\n      {triggerElement}\n      {tooltipPortal}\n    </>\n  )\n}\n\nTooltip.displayName = 'Tooltip'","import React, { useState, useRef, useEffect, useCallback, useContext, createContext } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Popover.module.css'\n\nexport type PopoverPosition = \n  | 'top' | 'top-start' | 'top-end'\n  | 'bottom' | 'bottom-start' | 'bottom-end'\n  | 'left' | 'left-start' | 'left-end'\n  | 'right' | 'right-start' | 'right-end'\n  | 'auto'\n\nexport type PopoverTrigger = 'click' | 'focus' | 'manual'\n\nexport interface PopoverProps {\n  /** The element that triggers the popover */\n  children: React.ReactElement\n  /** The content to display inside the popover (when using simple mode) */\n  content?: React.ReactNode\n  /** Position of the popover relative to the trigger */\n  position?: PopoverPosition\n  /** How the popover is triggered */\n  trigger?: PopoverTrigger\n  /** Whether the popover is currently visible (for manual trigger) */\n  open?: boolean\n  /** Callback when visibility changes */\n  onOpenChange?: (open: boolean) => void\n  /** Whether to close when clicking outside */\n  closeOnClickOutside?: boolean\n  /** Whether to close when pressing escape */\n  closeOnEscape?: boolean\n  /** Whether to show an arrow pointing to the trigger */\n  showArrow?: boolean\n  /** Additional CSS classes */\n  className?: string\n  /** Whether the popover is disabled */\n  disabled?: boolean\n  /** Maximum width of the popover */\n  maxWidth?: number\n  /** Whether to manage focus automatically */\n  autoFocus?: boolean\n  /** Initial focus element selector */\n  initialFocus?: string\n}\n\ninterface PopoverContextValue {\n  close: () => void\n}\n\nconst PopoverContext = createContext<PopoverContextValue | null>(null)\n\nexport const Popover: React.FC<PopoverProps> & {\n  Content: typeof PopoverContent\n  Header: typeof PopoverHeader\n  Body: typeof PopoverBody\n  Footer: typeof PopoverFooter\n} = ({\n  children,\n  content,\n  position = 'bottom',\n  trigger = 'click',\n  open: controlledOpen,\n  onOpenChange,\n  closeOnClickOutside = true,\n  closeOnEscape = true,\n  showArrow = true,\n  className,\n  disabled = false,\n  maxWidth = 400,\n  autoFocus = true,\n  initialFocus,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [actualPosition, setActualPosition] = useState<PopoverPosition>(position)\n  const [coords, setCoords] = useState({ x: 0, y: 0 })\n  const triggerRef = useRef<HTMLElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n  const previousActiveElementRef = useRef<HTMLElement | null>(null)\n\n  const isOpen = controlledOpen !== undefined ? controlledOpen : open\n\n  // Calculate position and coordinates\n  const calculatePosition = useCallback(() => {\n    if (!triggerRef.current || !popoverRef.current) return\n\n    const triggerRect = triggerRef.current.getBoundingClientRect()\n    const popoverRect = popoverRef.current.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    const scrollX = window.scrollX\n    const scrollY = window.scrollY\n\n    let finalPosition = position\n    let x = 0\n    let y = 0\n\n    // Auto positioning logic\n    if (position === 'auto') {\n      const spaceTop = triggerRect.top\n      const spaceBottom = viewportHeight - triggerRect.bottom\n      const spaceLeft = triggerRect.left\n      const spaceRight = viewportWidth - triggerRect.right\n\n      if (spaceBottom >= popoverRect.height + 10) {\n        finalPosition = 'bottom'\n      } else if (spaceTop >= popoverRect.height + 10) {\n        finalPosition = 'top'\n      } else if (spaceRight >= popoverRect.width + 10) {\n        finalPosition = 'right'\n      } else if (spaceLeft >= popoverRect.width + 10) {\n        finalPosition = 'left'\n      } else {\n        finalPosition = 'bottom'\n      }\n    }\n\n    // Calculate coordinates based on final position\n    switch (finalPosition.split('-')[0]) {\n      case 'top':\n        y = triggerRect.top - popoverRect.height - 8\n        break\n      case 'bottom':\n        y = triggerRect.bottom + 8\n        break\n      case 'left':\n        x = triggerRect.left - popoverRect.width - 8\n        break\n      case 'right':\n        x = triggerRect.right + 8\n        break\n    }\n\n    // Handle alignment variants (start, end)\n    if (finalPosition.includes('top') || finalPosition.includes('bottom')) {\n      if (finalPosition.includes('start')) {\n        x = triggerRect.left\n      } else if (finalPosition.includes('end')) {\n        x = triggerRect.right - popoverRect.width\n      } else {\n        x = triggerRect.left + triggerRect.width / 2 - popoverRect.width / 2\n      }\n    } else if (finalPosition.includes('left') || finalPosition.includes('right')) {\n      if (finalPosition.includes('start')) {\n        y = triggerRect.top\n      } else if (finalPosition.includes('end')) {\n        y = triggerRect.bottom - popoverRect.height\n      } else {\n        y = triggerRect.top + triggerRect.height / 2 - popoverRect.height / 2\n      }\n    }\n\n    // Adjust for viewport boundaries\n    x = Math.max(8, Math.min(x, viewportWidth - popoverRect.width - 8))\n    y = Math.max(8, Math.min(y, viewportHeight - popoverRect.height - 8))\n\n    setActualPosition(finalPosition)\n    setCoords({\n      x: x + scrollX,\n      y: y + scrollY,\n    })\n  }, [position])\n\n  // Open popover\n  const openPopover = useCallback(() => {\n    if (disabled) return\n    \n    previousActiveElementRef.current = document.activeElement as HTMLElement\n    \n    if (controlledOpen === undefined) {\n      setOpen(true)\n    }\n    onOpenChange?.(true)\n  }, [disabled, controlledOpen, onOpenChange])\n\n  // Close popover\n  const closePopover = useCallback(() => {\n    if (controlledOpen === undefined) {\n      setOpen(false)\n    }\n    onOpenChange?.(false)\n    \n    // Restore focus to trigger element without scrolling\n    if (previousActiveElementRef.current) {\n      previousActiveElementRef.current.focus({ preventScroll: true })\n    }\n  }, [controlledOpen, onOpenChange])\n\n  // Handle click outside\n  const handleClickOutside = useCallback((event: MouseEvent) => {\n    if (!closeOnClickOutside || !isOpen) return\n    \n    const target = event.target as Node\n    if (\n      popoverRef.current &&\n      triggerRef.current &&\n      !popoverRef.current.contains(target) &&\n      !triggerRef.current.contains(target)\n    ) {\n      closePopover()\n    }\n  }, [closeOnClickOutside, isOpen, closePopover])\n\n  // Handle keyboard events\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Escape' && closeOnEscape && isOpen) {\n      closePopover()\n    }\n  }, [closeOnEscape, isOpen, closePopover])\n\n  // Handle focus management\n  const handleFocusManagement = useCallback(() => {\n    if (!autoFocus || !isOpen || !popoverRef.current) return\n\n    const focusableElements = popoverRef.current.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    )\n\n    if (initialFocus) {\n      const initialElement = popoverRef.current.querySelector(initialFocus) as HTMLElement\n      if (initialElement) {\n        initialElement.focus({ preventScroll: true })\n        return\n      }\n    }\n\n    if (focusableElements.length > 0) {\n      (focusableElements[0] as HTMLElement).focus({ preventScroll: true })\n    } else {\n      popoverRef.current.focus({ preventScroll: true })\n    }\n  }, [autoFocus, isOpen, initialFocus])\n\n  // Handle focus trap\n  const handleFocusTrap = useCallback((event: KeyboardEvent) => {\n    if (!isOpen || !popoverRef.current || event.key !== 'Tab') return\n\n    const focusableElements = popoverRef.current.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    )\n\n    if (focusableElements.length === 0) return\n\n    const firstElement = focusableElements[0] as HTMLElement\n    const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement\n\n    if (event.shiftKey) {\n      if (document.activeElement === firstElement) {\n        lastElement.focus({ preventScroll: true })\n        event.preventDefault()\n      }\n    } else {\n      if (document.activeElement === lastElement) {\n        firstElement.focus({ preventScroll: true })\n        event.preventDefault()\n      }\n    }\n  }, [isOpen])\n\n  // Effects\n  useEffect(() => {\n    if (isOpen) {\n      calculatePosition()\n      handleFocusManagement()\n      \n      const handleResize = () => calculatePosition()\n      const handleScroll = () => calculatePosition()\n      \n      window.addEventListener('resize', handleResize)\n      window.addEventListener('scroll', handleScroll)\n      document.addEventListener('mousedown', handleClickOutside)\n      document.addEventListener('keydown', handleKeyDown)\n      document.addEventListener('keydown', handleFocusTrap)\n      \n      return () => {\n        window.removeEventListener('resize', handleResize)\n        window.removeEventListener('scroll', handleScroll)\n        document.removeEventListener('mousedown', handleClickOutside)\n        document.removeEventListener('keydown', handleKeyDown)\n        document.removeEventListener('keydown', handleFocusTrap)\n      }\n    }\n  }, [isOpen, calculatePosition, handleFocusManagement, handleClickOutside, handleKeyDown, handleFocusTrap])\n\n  // Create trigger event handlers\n  const triggerProps: Record<string, (() => void) | ((e: React.MouseEvent) => void) | ((e: React.FocusEvent) => void)> = {}\n  \n  if (trigger === 'click') {\n    triggerProps.onClick = (e: React.MouseEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      if (isOpen) {\n        closePopover()\n      } else {\n        openPopover()\n      }\n    }\n  } else if (trigger === 'focus') {\n    triggerProps.onFocus = openPopover\n    triggerProps.onBlur = (_e: React.FocusEvent) => {\n      // Don't close if focus moved to popover\n      setTimeout(() => {\n        if (popoverRef.current && popoverRef.current.contains(document.activeElement)) {\n          return\n        }\n        closePopover()\n      }, 0)\n    }\n  }\n\n  // Clone trigger element with event handlers\n  const triggerElement = React.cloneElement(children, {\n    ...triggerProps,\n    ref: (el: HTMLElement | null) => {\n      if (el) {\n        triggerRef.current = el\n      }\n    },\n    'aria-expanded': isOpen,\n    'aria-haspopup': 'dialog',\n  })\n\n  // Context value\n  const contextValue: PopoverContextValue = {\n    close: closePopover,\n  }\n\n  // Render popover portal\n  const popoverPortal = isOpen ? createPortal(\n    <PopoverContext.Provider value={contextValue}>\n      <div\n        ref={popoverRef}\n        className={clsx(\n          styles.popover,\n          styles[actualPosition.split('-')[0]],\n          {\n            [styles.withArrow]: showArrow,\n          },\n          className\n        )}\n        style={{\n          position: 'absolute',\n          left: coords.x,\n          top: coords.y,\n          maxWidth,\n          zIndex: 'var(--brutal-z-popover)',\n        }}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabIndex={-1}\n      >\n        {showArrow && <div className={styles.arrow} />}\n        <div className={styles.content}>\n          {content || children.props.children}\n        </div>\n      </div>\n    </PopoverContext.Provider>,\n    document.body\n  ) : null\n\n  return (\n    <>\n      {triggerElement}\n      {popoverPortal}\n    </>\n  )\n}\n\n// Subcomponents\nexport const PopoverContent: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={clsx(styles.contentWrapper, className)}>\n      {children}\n    </div>\n  )\n}\n\nexport const PopoverHeader: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={clsx(styles.header, className)}>\n      {children}\n    </div>\n  )\n}\n\nexport const PopoverBody: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={clsx(styles.body, className)}>\n      {children}\n    </div>\n  )\n}\n\nexport const PopoverFooter: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={clsx(styles.footer, className)}>\n      {children}\n    </div>\n  )\n}\n\n// Hook to access popover context\nexport const usePopover = () => {\n  const context = useContext(PopoverContext)\n  if (!context) {\n    throw new Error('usePopover must be used within a Popover component')\n  }\n  return context\n}\n\n// Assign subcomponents\nPopover.Content = PopoverContent\nPopover.Header = PopoverHeader\nPopover.Body = PopoverBody\nPopover.Footer = PopoverFooter\n\nPopover.displayName = 'Popover'\nPopoverContent.displayName = 'PopoverContent'\nPopoverHeader.displayName = 'PopoverHeader'\nPopoverBody.displayName = 'PopoverBody'\nPopoverFooter.displayName = 'PopoverFooter'","import React from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Separator.module.css'\n\nexport interface SeparatorProps {\n  /** Orientation of the separator */\n  orientation?: 'horizontal' | 'vertical'\n  /** Thickness variant */\n  thickness?: 'thin' | 'medium' | 'thick'\n  /** Style variant */\n  variant?: 'solid' | 'dashed' | 'dotted' | 'double'\n  /** Custom CSS class */\n  className?: string\n  /** Additional CSS properties */\n  style?: React.CSSProperties\n  /** Decorative element in the middle (horizontal only) */\n  label?: string | React.ReactNode\n  /** Position of the label */\n  labelPosition?: 'start' | 'center' | 'end'\n  /** ARIA label for accessibility */\n  ariaLabel?: string\n}\n\nexport const Separator: React.FC<SeparatorProps> = ({\n  orientation = 'horizontal',\n  thickness = 'medium',\n  variant = 'solid',\n  className,\n  style,\n  label,\n  labelPosition = 'center',\n  ariaLabel = 'Separator',\n}) => {\n  const isHorizontal = orientation === 'horizontal'\n  \n  return (\n    <div\n      className={clsx(\n        styles.separator,\n        styles[orientation],\n        styles[thickness],\n        styles[variant],\n        {\n          [styles.withLabel]: label && isHorizontal,\n          [styles[`label-${labelPosition}`]]: label && isHorizontal,\n        },\n        className\n      )}\n      style={style}\n      role=\"separator\"\n      aria-orientation={orientation}\n      aria-label={ariaLabel}\n    >\n      {label && isHorizontal && (\n        <>\n          <div className={styles.line} />\n          <div className={styles.label}>\n            {typeof label === 'string' ? <span>{label}</span> : label}\n          </div>\n          <div className={styles.line} />\n        </>\n      )}\n    </div>\n  )\n}\n\nSeparator.displayName = 'Separator'\n\nexport default Separator","import { BrutalistTheme } from './types'\n\nexport const CLASSIC_THEME: BrutalistTheme = {\n  id: 'classic',\n  name: 'Classic Brutalist',\n  description: 'The original black, white, and red brutalist aesthetic',\n  colors: {\n    black: '#000000',\n    white: '#FFFFFF',\n    accent: '#FF0000',\n    accentDark: '#CC0000',\n    gray50: '#FAFAFA',\n    gray100: '#F5F5F5',\n    gray200: '#E5E5E5',\n    gray300: '#D4D4D4',\n    gray400: '#A3A3A3',\n    gray500: '#737373',\n    gray700: '#404040',\n    gray900: '#171717',\n    warning: '#FFC107',\n    success: '#22C55E',\n    error: '#FF0000',\n    info: '#0000FF',\n  }\n}\n\nexport const NEON_THEME: BrutalistTheme = {\n  id: 'neon',\n  name: 'Neon Cyber',\n  description: 'Electric cyberpunk brutalism with neon highlights',\n  colors: {\n    black: '#0A0A0A',\n    white: '#F0F0F0',\n    accent: '#00FF88',\n    accentDark: '#00CC6A',\n    gray50: '#F8F8F8',\n    gray100: '#E8E8E8',\n    gray200: '#D8D8D8',\n    gray300: '#C8C8C8',\n    gray400: '#888888',\n    gray500: '#555555',\n    gray700: '#333333',\n    gray900: '#111111',\n    warning: '#FFAA00',\n    success: '#00FF88',\n    error: '#FF0044',\n    info: '#00AAFF',\n  }\n}\n\nexport const PASTEL_THEME: BrutalistTheme = {\n  id: 'pastel',\n  name: 'Soft Brutalism',\n  description: 'Gentle pastel colors with brutalist structure',\n  colors: {\n    black: '#2D2D2D',\n    white: '#FFFBF7',\n    accent: '#FF6B9D',\n    accentDark: '#E85A8A',\n    gray50: '#FDF9F5',\n    gray100: '#F7F0E8',\n    gray200: '#F0E6DB',\n    gray300: '#E8DCCE',\n    gray400: '#C4B5A0',\n    gray500: '#9A8B7A',\n    gray700: '#5D4E42',\n    gray900: '#2D2D2D',\n    warning: '#FFB347',\n    success: '#77DD77',\n    error: '#FF6B9D',\n    info: '#87CEEB',\n  }\n}\n\nexport const DARK_THEME: BrutalistTheme = {\n  id: 'dark',\n  name: 'Dark Brutalism',\n  description: 'Dark mode brutalism with bright accents',\n  colors: {\n    black: '#FFFFFF',\n    white: '#0F0F0F',\n    accent: '#FF4444',\n    accentDark: '#DD2222',\n    gray50: '#1A1A1A',\n    gray100: '#242424',\n    gray200: '#2E2E2E',\n    gray300: '#383838',\n    gray400: '#666666',\n    gray500: '#999999',\n    gray700: '#CCCCCC',\n    gray900: '#F0F0F0',\n    warning: '#FFB000',\n    success: '#00DD55',\n    error: '#FF4444',\n    info: '#4488FF',\n  }\n}\n\nexport const RETRO_THEME: BrutalistTheme = {\n  id: 'retro',\n  name: 'Retro Future',\n  description: '80s-inspired brutalism with vintage computing vibes',\n  colors: {\n    black: '#1A0D1A',\n    white: '#F5F5DC',\n    accent: '#FF00FF',\n    accentDark: '#CC00CC',\n    gray50: '#F0F0E6',\n    gray100: '#E6E6DC',\n    gray200: '#DCDCD2',\n    gray300: '#C8C8BE',\n    gray400: '#A0A096',\n    gray500: '#78786E',\n    gray700: '#464640',\n    gray900: '#2D2D27',\n    warning: '#FFAA00',\n    success: '#00FF00',\n    error: '#FF00FF',\n    info: '#00FFFF',\n  }\n}\n\nexport const NATURE_THEME: BrutalistTheme = {\n  id: 'nature',\n  name: 'Earth Brutalism',\n  description: 'Natural earth tones with brutalist structure',\n  colors: {\n    black: '#2F2F23',\n    white: '#F7F5F0',\n    accent: '#8B4513',\n    accentDark: '#6B3410',\n    gray50: '#F5F3EE',\n    gray100: '#EBE7DD',\n    gray200: '#E1DBCC',\n    gray300: '#D7CFBB',\n    gray400: '#B8A990',\n    gray500: '#998365',\n    gray700: '#5C5140',\n    gray900: '#3A3328',\n    warning: '#DAA520',\n    success: '#228B22',\n    error: '#A0522D',\n    info: '#4682B4',\n  }\n}\n\nexport const OCEAN_THEME: BrutalistTheme = {\n  id: 'ocean',\n  name: 'Ocean Brutalism',\n  description: 'Deep blue ocean-inspired color palette',\n  colors: {\n    black: '#0F1419',\n    white: '#F0F8FF',\n    accent: '#1E90FF',\n    accentDark: '#1874CD',\n    gray50: '#F8FBFF',\n    gray100: '#E6F2FF',\n    gray200: '#D4E9FF',\n    gray300: '#C2E0FF',\n    gray400: '#85C1F5',\n    gray500: '#4A90E2',\n    gray700: '#2E5984',\n    gray900: '#1A3A5C',\n    warning: '#FF8C00',\n    success: '#00CED1',\n    error: '#DC143C',\n    info: '#1E90FF',\n  }\n}\n\nexport const MONOCHROME_THEME: BrutalistTheme = {\n  id: 'monochrome',\n  name: 'Pure Monochrome',\n  description: 'Strict black and white with minimal color',\n  colors: {\n    black: '#000000',\n    white: '#FFFFFF',\n    accent: '#000000',\n    accentDark: '#333333',\n    gray50: '#FAFAFA',\n    gray100: '#F0F0F0',\n    gray200: '#E0E0E0',\n    gray300: '#D0D0D0',\n    gray400: '#A0A0A0',\n    gray500: '#707070',\n    gray700: '#404040',\n    gray900: '#101010',\n    warning: '#666666',\n    success: '#444444',\n    error: '#000000',\n    info: '#888888',\n  }\n}\n\n// Collection of all available themes\nexport const AVAILABLE_THEMES: BrutalistTheme[] = [\n  CLASSIC_THEME,\n  NEON_THEME,\n  PASTEL_THEME,\n  DARK_THEME,\n  RETRO_THEME,\n  NATURE_THEME,\n  OCEAN_THEME,\n  MONOCHROME_THEME,\n]\n\n// Default theme\nexport const DEFAULT_THEME = CLASSIC_THEME\n\n// Helper to get theme by ID\nexport const getThemeById = (id: string): BrutalistTheme | undefined => {\n  return AVAILABLE_THEMES.find(theme => theme.id === id)\n}","export interface BrutalistTheme {\n  id: string\n  name: string\n  description: string\n  colors: {\n    // Primary colors\n    black: string\n    white: string\n    accent: string\n    accentDark: string\n    \n    // Gray scale\n    gray50: string\n    gray100: string\n    gray200: string\n    gray300: string\n    gray400: string\n    gray500: string\n    gray700: string\n    gray900: string\n    \n    // Status colors\n    warning: string\n    success: string\n    error: string\n    info: string\n  }\n}\n\nexport interface ThemeContextValue {\n  currentTheme: BrutalistTheme\n  setTheme: (theme: BrutalistTheme) => void\n  availableThemes: BrutalistTheme[]\n  randomizeTheme: () => void\n  resetToDefault: () => void\n}\n\nexport type ThemeColors = BrutalistTheme['colors']\n\n// CSS custom properties mapping\nexport const CSS_VARIABLES_MAP = {\n  black: '--brutal-black',\n  white: '--brutal-white',\n  accent: '--brutal-accent',\n  accentDark: '--brutal-accent-dark',\n  gray50: '--brutal-gray-50',\n  gray100: '--brutal-gray-100',\n  gray200: '--brutal-gray-200',\n  gray300: '--brutal-gray-300',\n  gray400: '--brutal-gray-400',\n  gray500: '--brutal-gray-500',\n  gray700: '--brutal-gray-700',\n  gray900: '--brutal-gray-900',\n  warning: '--brutal-warning',\n  success: '--brutal-success',\n  error: '--brutal-error',\n  info: '--brutal-info',\n} as const\n\nexport type CSSVariableKey = keyof typeof CSS_VARIABLES_MAP","import { BrutalistTheme, ThemeColors, CSS_VARIABLES_MAP, CSSVariableKey } from './types'\nimport { AVAILABLE_THEMES, DEFAULT_THEME } from './themes'\n\n/**\n * Applies a theme by setting CSS custom properties on the document root\n */\nexport const applyTheme = (theme: BrutalistTheme): void => {\n  const root = document.documentElement\n  \n  Object.entries(theme.colors).forEach(([colorKey, colorValue]) => {\n    const cssVariable = CSS_VARIABLES_MAP[colorKey as CSSVariableKey]\n    if (cssVariable) {\n      root.style.setProperty(cssVariable, colorValue)\n    }\n  })\n}\n\n/**\n * Generates a random theme by mixing colors from existing themes\n */\nexport const generateRandomTheme = (): BrutalistTheme => {\n  const randomId = `random-${Date.now()}`\n  \n  // Get random colors from different themes\n  const randomColors: ThemeColors = {\n    black: getRandomColorFromThemes('black'),\n    white: getRandomColorFromThemes('white'),\n    accent: getRandomColorFromThemes('accent'),\n    accentDark: getRandomColorFromThemes('accentDark'),\n    gray50: getRandomColorFromThemes('gray50'),\n    gray100: getRandomColorFromThemes('gray100'),\n    gray200: getRandomColorFromThemes('gray200'),\n    gray300: getRandomColorFromThemes('gray300'),\n    gray400: getRandomColorFromThemes('gray400'),\n    gray500: getRandomColorFromThemes('gray500'),\n    gray700: getRandomColorFromThemes('gray700'),\n    gray900: getRandomColorFromThemes('gray900'),\n    warning: getRandomColorFromThemes('warning'),\n    success: getRandomColorFromThemes('success'),\n    error: getRandomColorFromThemes('error'),\n    info: getRandomColorFromThemes('info'),\n  }\n\n  return {\n    id: randomId,\n    name: 'Random Theme',\n    description: 'Randomly generated color combination',\n    colors: randomColors\n  }\n}\n\n/**\n * Gets a random color value for a specific color key from all available themes\n */\nconst getRandomColorFromThemes = (colorKey: keyof ThemeColors): string => {\n  const randomTheme = AVAILABLE_THEMES[Math.floor(Math.random() * AVAILABLE_THEMES.length)]\n  return randomTheme.colors[colorKey]\n}\n\n/**\n * Generates CSS custom properties string for a theme\n */\nexport const generateThemeCSS = (theme: BrutalistTheme): string => {\n  const cssLines = Object.entries(theme.colors).map(([colorKey, colorValue]) => {\n    const cssVariable = CSS_VARIABLES_MAP[colorKey as CSSVariableKey]\n    return `  ${cssVariable}: ${colorValue};`\n  })\n  \n  return `:root {\\n${cssLines.join('\\n')}\\n}`\n}\n\n/**\n * Generates JavaScript object for theme colors\n */\nexport const generateThemeJS = (theme: BrutalistTheme): string => {\n  const jsObject = JSON.stringify(theme.colors, null, 2)\n  return `const theme = ${jsObject}`\n}\n\n/**\n * Creates a copy-ready CSS variables snippet\n */\nexport const generateCSSVariablesCode = (theme: BrutalistTheme): string => {\n  return `/* ${theme.name} Theme */\\n${generateThemeCSS(theme)}`\n}\n\n/**\n * Creates a copy-ready React theme provider code\n */\nexport const generateReactThemeCode = (theme: BrutalistTheme): string => {\n  return `import { ThemeProvider } from '@brutalist-ui/components'\n\nconst ${theme.id}Theme = ${JSON.stringify(theme, null, 2)}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={${theme.id}Theme}>\n      {/* Your components */}\n    </ThemeProvider>\n  )\n}`\n}\n\n/**\n * Generates separate theme definition file\n */\nexport const generateThemeFile = (theme: BrutalistTheme): string => {\n  return `import { BrutalistTheme } from '@brutalist-ui/components'\n\nexport const ${theme.id}Theme: BrutalistTheme = ${JSON.stringify(theme, null, 2)}\n\nexport default ${theme.id}Theme`\n}\n\n/**\n * Generates App.tsx with theme provider\n */\nexport const generateAppFile = (theme: BrutalistTheme, componentName?: string): string => {\n  const componentImport = componentName ? `import ${componentName} from './components/${componentName}'` : \"import YourComponent from './components/YourComponent'\"\n  const componentUsage = componentName ? `<${componentName} />` : '<YourComponent />'\n  \n  return `import React from 'react'\nimport { ThemeProvider } from '@brutalist-ui/components'\nimport { ${theme.id}Theme } from './theme'\n${componentImport}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={${theme.id}Theme}>\n      <div className=\"app\">\n        ${componentUsage}\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App`\n}\n\n/**\n * Generates multi-file code examples\n */\nexport const generateMultiFileCode = (theme: BrutalistTheme, componentCode?: string, componentName?: string): {\n  'theme.ts': string\n  'App.tsx': string\n  'component.tsx': string\n} => {\n  return {\n    'theme.ts': generateThemeFile(theme),\n    'App.tsx': generateAppFile(theme, componentName),\n    'component.tsx': componentCode || '// Your component code goes here'\n  }\n}\n\n/**\n * Saves theme to localStorage\n */\nexport const saveThemeToStorage = (theme: BrutalistTheme): void => {\n  try {\n    localStorage.setItem('brutalist-theme', JSON.stringify(theme))\n  } catch (error) {\n    console.warn('Failed to save theme to localStorage:', error)\n  }\n}\n\n/**\n * Loads theme from localStorage\n */\nexport const loadThemeFromStorage = (): BrutalistTheme | null => {\n  try {\n    const savedTheme = localStorage.getItem('brutalist-theme')\n    if (savedTheme) {\n      return JSON.parse(savedTheme)\n    }\n  } catch (error) {\n    console.warn('Failed to load theme from localStorage:', error)\n  }\n  return null\n}\n\n/**\n * Validates if a theme object has all required properties\n */\nexport const isValidTheme = (theme: unknown): theme is BrutalistTheme => {\n  if (!theme || typeof theme !== 'object') return false\n  \n  const themeObj = theme as Record<string, unknown>\n  \n  const requiredProps = ['id', 'name', 'description', 'colors']\n  const hasRequiredProps = requiredProps.every(prop => prop in themeObj)\n  \n  if (!hasRequiredProps) return false\n  \n  // Check if colors object exists and has all required color properties\n  if (!themeObj.colors || typeof themeObj.colors !== 'object') return false\n  \n  const requiredColors = Object.keys(CSS_VARIABLES_MAP)\n  const hasRequiredColors = requiredColors.every(color => color in (themeObj.colors as Record<string, unknown>))\n  \n  return hasRequiredColors\n}\n\n/**\n * Gets the current theme from CSS custom properties\n */\nexport const getCurrentThemeFromDOM = (): Partial<ThemeColors> => {\n  const root = document.documentElement\n  const computedStyle = getComputedStyle(root)\n  \n  const currentColors: Partial<ThemeColors> = {}\n  \n  Object.entries(CSS_VARIABLES_MAP).forEach(([colorKey, cssVariable]) => {\n    const value = computedStyle.getPropertyValue(cssVariable).trim()\n    if (value) {\n      currentColors[colorKey as keyof ThemeColors] = value\n    }\n  })\n  \n  return currentColors\n}\n\n/**\n * Resets theme to default\n */\nexport const resetToDefaultTheme = (): void => {\n  applyTheme(DEFAULT_THEME)\n  localStorage.removeItem('brutalist-theme')\n}","import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react'\nimport { BrutalistTheme, ThemeContextValue } from './types'\nimport { \n  DEFAULT_THEME, \n  AVAILABLE_THEMES,\n  getThemeById \n} from './themes'\nimport { \n  applyTheme, \n  generateRandomTheme, \n  saveThemeToStorage, \n  loadThemeFromStorage, \n  resetToDefaultTheme,\n  isValidTheme \n} from './utils'\n\n// Create the theme context\nconst ThemeContext = createContext<ThemeContextValue | undefined>(undefined)\n\n// Theme provider props\nexport interface ThemeProviderProps {\n  children: ReactNode\n  /** Initial theme to use. If not provided, will try to load from localStorage or use default */\n  initialTheme?: BrutalistTheme\n  /** Whether to persist theme changes to localStorage */\n  enablePersistence?: boolean\n}\n\n/**\n * ThemeProvider component that manages theme state and provides theme functionality\n */\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\n  children,\n  initialTheme,\n  enablePersistence = true,\n}) => {\n  // Initialize theme state\n  const [currentTheme, setCurrentTheme] = useState<BrutalistTheme>(() => {\n    // Priority: initialTheme > localStorage > default\n    if (initialTheme && isValidTheme(initialTheme)) {\n      return initialTheme\n    }\n    \n    if (enablePersistence) {\n      const savedTheme = loadThemeFromStorage()\n      if (savedTheme && isValidTheme(savedTheme)) {\n        return savedTheme\n      }\n    }\n    \n    return DEFAULT_THEME\n  })\n\n  // Apply theme when currentTheme changes\n  useEffect(() => {\n    applyTheme(currentTheme)\n    \n    if (enablePersistence) {\n      saveThemeToStorage(currentTheme)\n    }\n  }, [currentTheme, enablePersistence])\n\n  // Theme management functions\n  const setTheme = (theme: BrutalistTheme) => {\n    if (isValidTheme(theme)) {\n      setCurrentTheme(theme)\n    } else {\n      console.warn('Invalid theme provided to setTheme:', theme)\n    }\n  }\n\n  const randomizeTheme = () => {\n    const randomTheme = generateRandomTheme()\n    setCurrentTheme(randomTheme)\n  }\n\n  const resetToDefault = () => {\n    setCurrentTheme(DEFAULT_THEME)\n    if (enablePersistence) {\n      resetToDefaultTheme()\n    }\n  }\n\n  // Context value\n  const contextValue: ThemeContextValue = {\n    currentTheme,\n    setTheme,\n    availableThemes: AVAILABLE_THEMES,\n    randomizeTheme,\n    resetToDefault,\n  }\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\n/**\n * Hook to consume theme context\n * @returns ThemeContextValue\n * @throws Error if used outside of ThemeProvider\n */\nexport const useTheme = (): ThemeContextValue => {\n  const context = useContext(ThemeContext)\n  \n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  \n  return context\n}\n\n/**\n * Hook to get current theme colors\n * @returns Current theme colors\n */\nexport const useThemeColors = () => {\n  const { currentTheme } = useTheme()\n  return currentTheme.colors\n}\n\n/**\n * Hook to check if a specific theme is currently active\n * @param themeId - Theme ID to check\n * @returns boolean indicating if theme is active\n */\nexport const useIsThemeActive = (themeId: string): boolean => {\n  const { currentTheme } = useTheme()\n  return currentTheme.id === themeId\n}\n\n/**\n * Hook to switch to a theme by ID\n * @returns Function to switch theme by ID\n */\nexport const useThemeSwitcher = () => {\n  const { setTheme } = useTheme()\n  \n  return (themeId: string) => {\n    const theme = getThemeById(themeId)\n    if (theme) {\n      setTheme(theme)\n    } else {\n      console.warn(`Theme with ID \"${themeId}\" not found`)\n    }\n  }\n}","import React, { useState } from 'react'\nimport { clsx } from 'clsx'\nimport { useTheme } from './ThemeContext'\nimport { BrutalistTheme } from './types'\nimport { generateCSSVariablesCode, generateReactThemeCode } from './utils'\nimport styles from './ThemePicker.module.css'\n\nexport interface ThemePickerProps {\n  /** Compact mode for smaller spaces */\n  variant?: 'default' | 'compact'\n  /** Show shadow */\n  brutalistShadow?: boolean\n  /** Show code examples */\n  showCode?: boolean\n  /** Custom className */\n  className?: string\n  /** Callback when theme changes */\n  onThemeChange?: (theme: BrutalistTheme) => void\n}\n\nexport const ThemePicker: React.FC<ThemePickerProps> = ({\n  variant = 'default',\n  brutalistShadow = true,\n  showCode = true,\n  className,\n  onThemeChange,\n}) => {\n  const { currentTheme, setTheme, availableThemes, randomizeTheme, resetToDefault } = useTheme()\n  const [showCodeSection, setShowCodeSection] = useState(false)\n  const [codeType, setCodeType] = useState<'css' | 'react'>('css')\n  const [copyFeedback, setCopyFeedback] = useState('')\n\n  const handleThemeSelect = (theme: BrutalistTheme) => {\n    setTheme(theme)\n    onThemeChange?.(theme)\n  }\n\n  const handleRandomize = () => {\n    randomizeTheme()\n    onThemeChange?.(currentTheme)\n  }\n\n  const handleReset = () => {\n    resetToDefault()\n    onThemeChange?.(currentTheme)\n  }\n\n  const copyToClipboard = async (text: string, type: string) => {\n    try {\n      await navigator.clipboard.writeText(text)\n      setCopyFeedback(`${type} copied!`)\n      setTimeout(() => setCopyFeedback(''), 2000)\n    } catch (error) {\n      console.error('Failed to copy to clipboard:', error)\n      setCopyFeedback('Copy failed')\n      setTimeout(() => setCopyFeedback(''), 2000)\n    }\n  }\n\n  const generateCode = () => {\n    return codeType === 'css' \n      ? generateCSSVariablesCode(currentTheme)\n      : generateReactThemeCode(currentTheme)\n  }\n\n  // Get key colors for theme preview\n  const getPreviewColors = (theme: BrutalistTheme) => [\n    theme.colors.black,\n    theme.colors.white,\n    theme.colors.accent,\n    theme.colors.gray500,\n  ]\n\n  return (\n    <div \n      className={clsx(\n        styles.container,\n        {\n          [styles.compact]: variant === 'compact',\n          [styles.withShadow]: brutalistShadow,\n        },\n        className\n      )}\n    >\n      {/* Header */}\n      <div className={styles.header}>\n        <h3 className={styles.title}>Theme Picker</h3>\n        <div className={styles.actions}>\n          <button \n            className={styles.actionButton}\n            onClick={handleRandomize}\n            title=\"Generate random theme\"\n          >\n            ðŸŽ² Random\n          </button>\n          <button \n            className={styles.actionButton}\n            onClick={handleReset}\n            title=\"Reset to default theme\"\n          >\n            ðŸ”„ Reset\n          </button>\n        </div>\n      </div>\n\n      {/* Current Theme Info */}\n      <div className={styles.currentTheme}>\n        <h4 className={styles.currentThemeTitle}>Current Theme</h4>\n        <div className={styles.currentThemeInfo}>\n          <span className={styles.currentThemeName}>{currentTheme.name}</span>\n          <button\n            className={styles.copyButton}\n            onClick={() => copyToClipboard(JSON.stringify(currentTheme, null, 2), 'Theme')}\n          >\n            {copyFeedback || 'Copy Theme'}\n          </button>\n        </div>\n        \n        {/* Color Palette */}\n        <div className={styles.colorPalette}>\n          {Object.entries(currentTheme.colors).map(([colorName, colorValue]) => (\n            <div\n              key={colorName}\n              className={styles.paletteColor}\n              style={{ backgroundColor: colorValue }}\n              title={`${colorName}: ${colorValue}`}\n              onClick={() => copyToClipboard(colorValue, colorName)}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Theme Grid */}\n      <div className={styles.themeGrid}>\n        {availableThemes.map((theme) => (\n          <div\n            key={theme.id}\n            className={clsx(styles.themeCard, {\n              [styles.active]: currentTheme.id === theme.id,\n            })}\n            onClick={() => handleThemeSelect(theme)}\n          >\n            {/* Color Preview */}\n            <div className={styles.colorPreview}>\n              {getPreviewColors(theme).map((color, index) => (\n                <div\n                  key={index}\n                  className={styles.colorSwatch}\n                  style={{ backgroundColor: color }}\n                />\n              ))}\n            </div>\n            \n            {/* Theme Info */}\n            <div className={styles.themeInfo}>\n              <h4 className={styles.themeName}>{theme.name}</h4>\n              {variant !== 'compact' && (\n                <p className={styles.themeDescription}>{theme.description}</p>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Code Section */}\n      {showCode && (\n        <div className={styles.codeSection}>\n          <button\n            className={styles.codeToggle}\n            onClick={() => setShowCodeSection(!showCodeSection)}\n          >\n            {showCodeSection ? 'ðŸ”» Hide Code' : 'ðŸ”º Show Code'}\n          </button>\n          \n          {showCodeSection && (\n            <>\n              {/* Code Type Selector */}\n              <div className={styles.actions} style={{ marginBottom: 'var(--brutal-space-3)' }}>\n                <button\n                  className={clsx(styles.actionButton, {\n                    [styles.active]: codeType === 'css'\n                  })}\n                  onClick={() => setCodeType('css')}\n                >\n                  CSS\n                </button>\n                <button\n                  className={clsx(styles.actionButton, {\n                    [styles.active]: codeType === 'react'\n                  })}\n                  onClick={() => setCodeType('react')}\n                >\n                  React\n                </button>\n              </div>\n\n              {/* Code Block */}\n              <div className={styles.codeBlock}>\n                <button\n                  className={styles.codeCopyButton}\n                  onClick={() => copyToClipboard(generateCode(), codeType.toUpperCase())}\n                >\n                  {copyFeedback || 'Copy'}\n                </button>\n                <pre>{generateCode()}</pre>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}","import { forwardRef, HTMLAttributes, ThHTMLAttributes, TdHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Table.module.css'\n\nexport interface TableProps extends HTMLAttributes<HTMLTableElement> {\n  /** Table variant */\n  variant?: 'default' | 'striped' | 'bordered'\n  /** Table size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the table is hoverable */\n  hoverable?: boolean\n  /** Whether the table should be full width */\n  fullWidth?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableHeadProps extends HTMLAttributes<HTMLTableSectionElement> {\n  /** Whether the header is sticky */\n  sticky?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableHeaderProps extends ThHTMLAttributes<HTMLTableCellElement> {\n  /** Alignment of the header */\n  align?: 'left' | 'center' | 'right'\n  /** Whether the column is sortable */\n  sortable?: boolean\n  /** Sort direction if sortable */\n  sortDirection?: 'asc' | 'desc' | 'none'\n  /** Callback when sort is clicked */\n  onSort?: () => void\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableCellProps extends TdHTMLAttributes<HTMLTableCellElement> {\n  /** Alignment of the cell */\n  align?: 'left' | 'center' | 'right'\n  /** Whether the cell contains numeric data */\n  numeric?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Table = forwardRef<HTMLTableElement, TableProps>(\n  (\n    {\n      variant = 'default',\n      size = 'md',\n      hoverable = false,\n      fullWidth = true,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div className={clsx(styles.tableWrapper, { [styles.fullWidth]: fullWidth })}>\n        <table\n          ref={ref}\n          className={clsx(\n            styles.table,\n            styles[variant],\n            styles[size],\n            {\n              [styles.hoverable]: hoverable,\n              [styles.fullWidth]: fullWidth,\n            },\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </table>\n      </div>\n    )\n  }\n)\n\nexport const TableHead = forwardRef<HTMLTableSectionElement, TableHeadProps>(\n  ({ sticky = false, className, children, ...props }, ref) => {\n    return (\n      <thead\n        ref={ref}\n        className={clsx(\n          styles.thead,\n          {\n            [styles.sticky]: sticky,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </thead>\n    )\n  }\n)\n\nexport const TableBody = forwardRef<HTMLTableSectionElement, HTMLAttributes<HTMLTableSectionElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <tbody ref={ref} className={clsx(styles.tbody, className)} {...props}>\n        {children}\n      </tbody>\n    )\n  }\n)\n\nexport const TableRow = forwardRef<HTMLTableRowElement, HTMLAttributes<HTMLTableRowElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <tr ref={ref} className={clsx(styles.tr, className)} {...props}>\n        {children}\n      </tr>\n    )\n  }\n)\n\nexport const TableHeader = forwardRef<HTMLTableCellElement, TableHeaderProps>(\n  (\n    {\n      align = 'left',\n      sortable = false,\n      sortDirection = 'none',\n      onSort,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const handleClick = () => {\n      if (sortable && onSort) {\n        onSort()\n      }\n    }\n\n    return (\n      <th\n        ref={ref}\n        className={clsx(\n          styles.th,\n          styles[`align-${align}`],\n          {\n            [styles.sortable]: sortable,\n            [styles.sorted]: sortDirection !== 'none',\n          },\n          className\n        )}\n        onClick={handleClick}\n        role={sortable ? 'button' : undefined}\n        tabIndex={sortable ? 0 : undefined}\n        aria-sort={\n          sortDirection === 'asc'\n            ? 'ascending'\n            : sortDirection === 'desc'\n            ? 'descending'\n            : 'none'\n        }\n        {...props}\n      >\n        <div className={styles.thContent}>\n          {children}\n          {sortable && (\n            <span className={clsx(styles.sortIcon, styles[`sort-${sortDirection}`])}>\n              {sortDirection === 'asc' && 'â†‘'}\n              {sortDirection === 'desc' && 'â†“'}\n              {sortDirection === 'none' && 'â†•'}\n            </span>\n          )}\n        </div>\n      </th>\n    )\n  }\n)\n\nexport const TableCell = forwardRef<HTMLTableCellElement, TableCellProps>(\n  ({ align = 'left', numeric = false, className, children, ...props }, ref) => {\n    return (\n      <td\n        ref={ref}\n        className={clsx(\n          styles.td,\n          styles[`align-${align}`],\n          {\n            [styles.numeric]: numeric,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </td>\n    )\n  }\n)\n\n// Export compound components\nTable.displayName = 'Table'\nTableHead.displayName = 'TableHead'\nTableBody.displayName = 'TableBody'\nTableRow.displayName = 'TableRow'\nTableHeader.displayName = 'TableHeader'\nTableCell.displayName = 'TableCell'\n\n// Attach subcomponents\nconst TableNamespace = Object.assign(Table, {\n  Head: TableHead,\n  Body: TableBody,\n  Row: TableRow,\n  Header: TableHeader,\n  Cell: TableCell,\n})\n\nexport default TableNamespace","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Spinner.module.css'\n\nexport interface SpinnerProps extends Omit<HTMLAttributes<HTMLDivElement>, 'children'> {\n  /** Size of the spinner */\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  /** Color variant */\n  color?: 'default' | 'accent' | 'success' | 'warning' | 'error' | 'info'\n  /** Animation variant */\n  variant?: 'dots' | 'bars' | 'square' | 'glitch'\n  /** Speed of animation */\n  speed?: 'slow' | 'normal' | 'fast'\n  /** Label for accessibility */\n  label?: string\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>(\n  (\n    {\n      size = 'md',\n      color = 'default',\n      variant = 'dots',\n      speed = 'normal',\n      label = 'Loading',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const renderSpinner = () => {\n      switch (variant) {\n        case 'dots':\n          return (\n            <>\n              <span className={styles.dot} />\n              <span className={styles.dot} />\n              <span className={styles.dot} />\n            </>\n          )\n        case 'bars':\n          return (\n            <>\n              <span className={styles.bar} />\n              <span className={styles.bar} />\n              <span className={styles.bar} />\n              <span className={styles.bar} />\n            </>\n          )\n        case 'square':\n          return <span className={styles.square} />\n        case 'glitch':\n          return (\n            <>\n              <span className={styles.glitchSquare} />\n              <span className={styles.glitchSquare} />\n              <span className={styles.glitchSquare} />\n            </>\n          )\n        default:\n          return null\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.spinner,\n          styles[size],\n          styles[color],\n          styles[variant],\n          styles[`speed-${speed}`],\n          className\n        )}\n        role=\"status\"\n        aria-label={label}\n        {...props}\n      >\n        {renderSpinner()}\n        <span className={styles.srOnly}>{label}</span>\n      </div>\n    )\n  }\n)\n\nSpinner.displayName = 'Spinner'","import React, { useState, useEffect, createContext, useContext, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Toast.module.css'\n\nexport type ToastType = 'info' | 'success' | 'warning' | 'error'\nexport type ToastPosition = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right'\n\nexport interface ToastData {\n  id: string\n  type: ToastType\n  title?: string\n  message: string\n  duration?: number\n  dismissible?: boolean\n  action?: {\n    label: string\n    onClick: () => void\n  }\n}\n\ninterface ToastContextValue {\n  toasts: ToastData[]\n  showToast: (toast: Omit<ToastData, 'id'>) => string\n  hideToast: (id: string) => void\n  hideAllToasts: () => void\n}\n\nconst ToastContext = createContext<ToastContextValue | null>(null)\n\nexport interface ToastProviderProps {\n  children: React.ReactNode\n  position?: ToastPosition\n  maxToasts?: number\n}\n\nexport const ToastProvider: React.FC<ToastProviderProps> = ({ \n  children, \n  position = 'bottom-right',\n  maxToasts = 5 \n}) => {\n  const [toasts, setToasts] = useState<ToastData[]>([])\n\n  const showToast = useCallback((toast: Omit<ToastData, 'id'>) => {\n    const id = `toast-${Date.now()}-${Math.random()}`\n    const newToast = { ...toast, id }\n    \n    setToasts(prev => {\n      const updated = [...prev, newToast]\n      // Keep only the latest maxToasts\n      return updated.slice(-maxToasts)\n    })\n    \n    return id\n  }, [maxToasts])\n\n  const hideToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id))\n  }, [])\n\n  const hideAllToasts = useCallback(() => {\n    setToasts([])\n  }, [])\n\n  const contextValue = { toasts, showToast, hideToast, hideAllToasts }\n\n  // Register the store for imperative API\n  useEffect(() => {\n    registerToastStore(contextValue)\n    return () => {\n      toastStore = null\n    }\n  }, [contextValue])\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <ToastContainer position={position} />\n    </ToastContext.Provider>\n  )\n}\n\ninterface ToastContainerProps {\n  position: ToastPosition\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ position }) => {\n  const context = useContext(ToastContext)\n  if (!context) return null\n\n  const { toasts } = context\n\n  if (toasts.length === 0) return null\n\n  return createPortal(\n    <div className={clsx(styles.container, styles[position])}>\n      {toasts.map(toast => (\n        <ToastItem key={toast.id} {...toast} />\n      ))}\n    </div>,\n    document.body\n  )\n}\n\ninterface ToastItemProps extends ToastData {}\n\nconst ToastItem: React.FC<ToastItemProps> = ({\n  id,\n  type,\n  title,\n  message,\n  duration = 5000,\n  dismissible = true,\n  action\n}) => {\n  const context = useContext(ToastContext)\n  const [isExiting, setIsExiting] = useState(false)\n\n  const handleDismiss = useCallback(() => {\n    setIsExiting(true)\n    setTimeout(() => {\n      context?.hideToast(id)\n    }, 300) // Match animation duration\n  }, [context, id])\n\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        handleDismiss()\n      }, duration)\n\n      return () => clearTimeout(timer)\n    }\n  }, [duration, handleDismiss])\n\n  const getIcon = () => {\n    switch (type) {\n      case 'success':\n        return 'âœ“'\n      case 'error':\n        return 'âœ•'\n      case 'warning':\n        return '!'\n      case 'info':\n      default:\n        return 'i'\n    }\n  }\n\n  return (\n    <div\n      className={clsx(\n        styles.toast,\n        styles[type],\n        {\n          [styles.exiting]: isExiting\n        }\n      )}\n      role=\"alert\"\n      aria-live=\"polite\"\n    >\n      <div className={styles.icon}>\n        <span>{getIcon()}</span>\n      </div>\n      \n      <div className={styles.content}>\n        {title && <div className={styles.title}>{title}</div>}\n        <div className={styles.message}>{message}</div>\n        {action && (\n          <button\n            className={styles.action}\n            onClick={() => {\n              action.onClick()\n              handleDismiss()\n            }}\n          >\n            {action.label}\n          </button>\n        )}\n      </div>\n\n      {dismissible && (\n        <button\n          className={styles.dismiss}\n          onClick={handleDismiss}\n          aria-label=\"Dismiss\"\n        >\n          âœ•\n        </button>\n      )}\n    </div>\n  )\n}\n\n// Hook to use toast\nexport const useToast = () => {\n  const context = useContext(ToastContext)\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider')\n  }\n  return context\n}\n\n// Store for imperative toast API\nlet toastStore: ToastContextValue | null = null\n\n// Register toast store (called by provider)\nexport const registerToastStore = (store: ToastContextValue) => {\n  toastStore = store\n}\n\n// Convenience methods\nexport const toast = {\n  info: (message: string, options?: Partial<Omit<ToastData, 'id' | 'type' | 'message'>>) => {\n    if (!toastStore) {\n      console.warn('ToastProvider not found. Make sure to wrap your app with ToastProvider.')\n      return ''\n    }\n    return toastStore.showToast({ ...options, type: 'info', message })\n  },\n  success: (message: string, options?: Partial<Omit<ToastData, 'id' | 'type' | 'message'>>) => {\n    if (!toastStore) {\n      console.warn('ToastProvider not found. Make sure to wrap your app with ToastProvider.')\n      return ''\n    }\n    return toastStore.showToast({ ...options, type: 'success', message })\n  },\n  warning: (message: string, options?: Partial<Omit<ToastData, 'id' | 'type' | 'message'>>) => {\n    if (!toastStore) {\n      console.warn('ToastProvider not found. Make sure to wrap your app with ToastProvider.')\n      return ''\n    }\n    return toastStore.showToast({ ...options, type: 'warning', message })\n  },\n  error: (message: string, options?: Partial<Omit<ToastData, 'id' | 'type' | 'message'>>) => {\n    if (!toastStore) {\n      console.warn('ToastProvider not found. Make sure to wrap your app with ToastProvider.')\n      return ''\n    }\n    return toastStore.showToast({ ...options, type: 'error', message })\n  }\n}","import React, { forwardRef, HTMLAttributes, useEffect, useRef, useCallback, useState, createContext, useContext } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Dialog.module.css'\n\nexport interface DialogProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /** Whether the dialog is open */\n  open?: boolean\n  /** Callback when open state changes */\n  onOpenChange?: (open: boolean) => void\n  /** Whether to show backdrop */\n  backdrop?: boolean\n  /** Whether clicking backdrop closes dialog */\n  closeOnBackdropClick?: boolean\n  /** Whether pressing escape closes dialog */\n  closeOnEscape?: boolean\n  /** Dialog size */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  /** Dialog position */\n  position?: 'center' | 'top' | 'bottom'\n  /** Whether to animate the dialog */\n  animate?: boolean\n  /** Whether to manage focus automatically */\n  autoFocus?: boolean\n  /** Initial focus element selector */\n  initialFocus?: string\n  /** Additional CSS classes */\n  className?: string\n}\n\ninterface DialogContextValue {\n  close: () => void\n}\n\nconst DialogContext = createContext<DialogContextValue | null>(null)\n\nexport const Dialog = forwardRef<HTMLDivElement, DialogProps>(\n  (\n    {\n      open = false,\n      onOpenChange,\n      backdrop = true,\n      closeOnBackdropClick = true,\n      closeOnEscape = true,\n      size = 'md',\n      position = 'center',\n      animate = true,\n      autoFocus = true,\n      initialFocus,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [isExiting, setIsExiting] = useState(false)\n    const dialogRef = useRef<HTMLDivElement | null>(null)\n    const previousActiveElementRef = useRef<HTMLElement | null>(null)\n\n    // Combine refs\n    const setRefs = useCallback(\n      (element: HTMLDivElement | null) => {\n        dialogRef.current = element\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(element)\n          } else {\n            ref.current = element\n          }\n        }\n      },\n      [ref]\n    )\n\n    // Close dialog\n    const close = useCallback(() => {\n      if (animate) {\n        setIsExiting(true)\n        setTimeout(() => {\n          onOpenChange?.(false)\n          setIsExiting(false)\n        }, 300) // Match animation duration\n      } else {\n        onOpenChange?.(false)\n      }\n    }, [animate, onOpenChange])\n\n    // Handle backdrop click\n    const handleBackdropClick = useCallback(\n      (event: React.MouseEvent) => {\n        if (closeOnBackdropClick && event.target === event.currentTarget) {\n          close()\n        }\n      },\n      [closeOnBackdropClick, close]\n    )\n\n    // Handle keyboard events\n    const handleKeyDown = useCallback(\n      (event: KeyboardEvent) => {\n        if (event.key === 'Escape' && closeOnEscape) {\n          close()\n        }\n      },\n      [closeOnEscape, close]\n    )\n\n    // Focus management\n    const handleFocusManagement = useCallback(() => {\n      if (!autoFocus || !dialogRef.current) return\n\n      const focusableElements = dialogRef.current.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      )\n\n      if (initialFocus) {\n        const initialElement = dialogRef.current.querySelector(initialFocus) as HTMLElement\n        if (initialElement) {\n          initialElement.focus({ preventScroll: true })\n          return\n        }\n      }\n\n      if (focusableElements.length > 0) {\n        (focusableElements[0] as HTMLElement).focus({ preventScroll: true })\n      } else {\n        dialogRef.current.focus({ preventScroll: true })\n      }\n    }, [autoFocus, initialFocus])\n\n    // Focus trap\n    const handleFocusTrap = useCallback((event: KeyboardEvent) => {\n      if (!dialogRef.current || event.key !== 'Tab') return\n\n      const focusableElements = dialogRef.current.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      )\n\n      if (focusableElements.length === 0) return\n\n      const firstElement = focusableElements[0] as HTMLElement\n      const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement\n\n      if (event.shiftKey) {\n        if (document.activeElement === firstElement) {\n          lastElement.focus({ preventScroll: true })\n          event.preventDefault()\n        }\n      } else {\n        if (document.activeElement === lastElement) {\n          firstElement.focus({ preventScroll: true })\n          event.preventDefault()\n        }\n      }\n    }, [])\n\n    // Effects\n    useEffect(() => {\n      if (open) {\n        previousActiveElementRef.current = document.activeElement as HTMLElement\n        handleFocusManagement()\n\n        document.addEventListener('keydown', handleKeyDown)\n        document.addEventListener('keydown', handleFocusTrap)\n\n        // Prevent body scroll\n        document.body.style.overflow = 'hidden'\n\n        return () => {\n          document.removeEventListener('keydown', handleKeyDown)\n          document.removeEventListener('keydown', handleFocusTrap)\n          document.body.style.overflow = ''\n\n          // Restore focus\n          if (previousActiveElementRef.current) {\n            previousActiveElementRef.current.focus({ preventScroll: true })\n          }\n        }\n      }\n    }, [open, handleKeyDown, handleFocusTrap, handleFocusManagement])\n\n    const contextValue: DialogContextValue = {\n      close,\n    }\n\n    if (!open && !isExiting) return null\n\n    return createPortal(\n      <DialogContext.Provider value={contextValue}>\n        <div\n          className={clsx(\n            styles.backdrop,\n            {\n              [styles.visible]: backdrop,\n              [styles.exiting]: isExiting,\n            }\n          )}\n          onClick={handleBackdropClick}\n        >\n          <div\n            ref={setRefs}\n            className={clsx(\n              styles.dialog,\n              styles[size],\n              styles[position],\n              {\n                [styles.animate]: animate,\n                [styles.exiting]: isExiting,\n              },\n              className\n            )}\n            role=\"dialog\"\n            aria-modal=\"true\"\n            tabIndex={-1}\n            {...props}\n          >\n            {children}\n          </div>\n        </div>\n      </DialogContext.Provider>,\n      document.body\n    )\n  }\n)\n\n// Dialog subcomponents\nexport const DialogHeader = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={clsx(styles.header, className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const DialogTitle = forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <h2 ref={ref} className={clsx(styles.title, className)} {...props}>\n        {children}\n      </h2>\n    )\n  }\n)\n\nexport const DialogBody = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={clsx(styles.body, className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const DialogFooter = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={clsx(styles.footer, className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface DialogCloseProps extends HTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean\n}\n\nexport const DialogClose = forwardRef<HTMLButtonElement, DialogCloseProps>(\n  ({ className, children, asChild, onClick, ...props }, ref) => {\n    const context = useContext(DialogContext)\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      onClick?.(e)\n      context?.close()\n    }\n\n    if (asChild && React.isValidElement(children)) {\n      return React.cloneElement(children as React.ReactElement<React.HTMLAttributes<HTMLElement>>, {\n        onClick: handleClick,\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.close, className)}\n        onClick={handleClick}\n        aria-label=\"Close dialog\"\n        {...props}\n      >\n        {children || 'âœ•'}\n      </button>\n    )\n  }\n)\n\n// Hook to use dialog context\nexport const useDialog = () => {\n  const context = useContext(DialogContext)\n  if (!context) {\n    throw new Error('useDialog must be used within a Dialog component')\n  }\n  return context\n}\n\n// Display names\nDialog.displayName = 'Dialog'\nDialogHeader.displayName = 'DialogHeader'\nDialogTitle.displayName = 'DialogTitle'\nDialogBody.displayName = 'DialogBody'\nDialogFooter.displayName = 'DialogFooter'\nDialogClose.displayName = 'DialogClose'\n\n// Attach subcomponents\nconst DialogNamespace = Object.assign(Dialog, {\n  Header: DialogHeader,\n  Title: DialogTitle,\n  Body: DialogBody,\n  Footer: DialogFooter,\n  Close: DialogClose,\n})\n\nexport default DialogNamespace","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport clsx from 'clsx'\nimport styles from './Drawer.module.css'\n\ninterface DrawerProps {\n  open?: boolean\n  defaultOpen?: boolean\n  onOpenChange?: (open: boolean) => void\n  direction?: 'left' | 'right' | 'top' | 'bottom'\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  variant?: 'default' | 'brutal' | 'outline'\n  className?: string\n  children?: React.ReactNode\n}\n\ninterface DrawerContextValue {\n  open: boolean\n  setOpen: (open: boolean) => void\n  direction: 'left' | 'right' | 'top' | 'bottom'\n  size: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  variant: 'default' | 'brutal' | 'outline'\n}\n\nconst DrawerContext = createContext<DrawerContextValue | null>(null)\n\nconst useDrawer = () => {\n  const context = useContext(DrawerContext)\n  if (!context) {\n    throw new Error('Drawer components must be used within a Drawer')\n  }\n  return context\n}\n\nconst Drawer = React.forwardRef<HTMLDivElement, DrawerProps>(\n  ({ \n    open, \n    defaultOpen = false, \n    onOpenChange, \n    direction = 'right',\n    size = 'md',\n    variant = 'default',\n    className, \n    children, \n    ...props \n  }, ref) => {\n    const [isOpen, setIsOpen] = useState(open ?? defaultOpen)\n\n    // Handle controlled state\n    useEffect(() => {\n      if (open !== undefined) {\n        setIsOpen(open)\n      }\n    }, [open])\n\n    const handleOpenChange = useCallback((newOpen: boolean) => {\n      setIsOpen(newOpen)\n      onOpenChange?.(newOpen)\n    }, [onOpenChange])\n\n    const contextValue: DrawerContextValue = {\n      open: isOpen,\n      setOpen: handleOpenChange,\n      direction,\n      size,\n      variant\n    }\n\n    return (\n      <DrawerContext.Provider value={contextValue}>\n        <div ref={ref} className={className} {...props}>\n          {children}\n        </div>\n      </DrawerContext.Provider>\n    )\n  }\n)\n\ninterface DrawerTriggerProps {\n  children: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst DrawerTrigger = React.forwardRef<HTMLButtonElement, DrawerTriggerProps>(\n  ({ children, className, asChild = false, ...props }, ref) => {\n    const { setOpen } = useDrawer()\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, {\n        onClick: () => setOpen(true),\n        ...props\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.trigger, className)}\n        onClick={() => setOpen(true)}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\n\ninterface DrawerContentProps {\n  children: React.ReactNode\n  className?: string\n  showOverlay?: boolean\n  closeOnOverlayClick?: boolean\n  closeOnEscape?: boolean\n}\n\nconst DrawerContent = React.forwardRef<HTMLDivElement, DrawerContentProps>(\n  ({ \n    children, \n    className, \n    showOverlay = true,\n    closeOnOverlayClick = true,\n    closeOnEscape = true,\n    ...props \n  }, ref) => {\n    const { open, setOpen, direction, size, variant } = useDrawer()\n\n    // Handle escape key\n    useEffect(() => {\n      if (!closeOnEscape || !open) return\n\n      const handleEscape = (e: KeyboardEvent) => {\n        if (e.key === 'Escape') {\n          setOpen(false)\n        }\n      }\n\n      document.addEventListener('keydown', handleEscape)\n      return () => document.removeEventListener('keydown', handleEscape)\n    }, [open, closeOnEscape, setOpen])\n\n    // Handle body scroll\n    useEffect(() => {\n      if (open) {\n        const originalStyle = window.getComputedStyle(document.body).overflow\n        document.body.style.overflow = 'hidden'\n        return () => {\n          document.body.style.overflow = originalStyle\n        }\n      }\n    }, [open])\n\n    // Focus management\n    useEffect(() => {\n      if (open) {\n        const activeElement = document.activeElement as HTMLElement\n        const drawerContent = document.querySelector('[data-drawer-content]') as HTMLElement\n        if (drawerContent) {\n          const focusableElement = drawerContent.querySelector(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n          ) as HTMLElement\n          if (focusableElement) {\n            focusableElement.focus()\n          }\n        }\n        return () => {\n          if (activeElement) {\n            activeElement.focus()\n          }\n        }\n      }\n    }, [open])\n\n    if (!open) return null\n\n    const content = (\n      <>\n        {showOverlay && (\n          <div \n            className={styles.overlay}\n            onClick={() => closeOnOverlayClick && setOpen(false)}\n            aria-hidden=\"true\"\n          />\n        )}\n        <div\n          ref={ref}\n          className={clsx(\n            styles.content,\n            styles[`content--${direction}`],\n            styles[`content--${size}`],\n            styles[`content--${variant}`],\n            className\n          )}\n          role=\"dialog\"\n          aria-modal=\"true\"\n          data-drawer-content\n          data-state={open ? 'open' : 'closed'}\n          {...props}\n        >\n          {children}\n        </div>\n      </>\n    )\n\n    return createPortal(content, document.body)\n  }\n)\n\ninterface DrawerHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerHeader = React.forwardRef<HTMLDivElement, DrawerHeaderProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.header, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface DrawerTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerTitle = React.forwardRef<HTMLHeadingElement, DrawerTitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <h2\n        ref={ref}\n        className={clsx(styles.title, className)}\n        {...props}\n      >\n        {children}\n      </h2>\n    )\n  }\n)\n\ninterface DrawerDescriptionProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerDescription = React.forwardRef<HTMLParagraphElement, DrawerDescriptionProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={clsx(styles.description, className)}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\ninterface DrawerBodyProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerBody = React.forwardRef<HTMLDivElement, DrawerBodyProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.body, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface DrawerFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerFooter = React.forwardRef<HTMLDivElement, DrawerFooterProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.footer, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface DrawerCloseProps {\n  children?: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst DrawerClose = React.forwardRef<HTMLButtonElement, DrawerCloseProps>(\n  ({ children, className, asChild = false, ...props }, ref) => {\n    const { setOpen } = useDrawer()\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, {\n        onClick: () => setOpen(false),\n        ...props\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.close, className)}\n        onClick={() => setOpen(false)}\n        aria-label=\"Close drawer\"\n        {...props}\n      >\n        {children || (\n          <svg\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M12 4L4 12M4 4L12 12\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        )}\n      </button>\n    )\n  }\n)\n\n// Display names\nDrawer.displayName = 'Drawer'\nDrawerTrigger.displayName = 'DrawerTrigger'\nDrawerContent.displayName = 'DrawerContent'\nDrawerHeader.displayName = 'DrawerHeader'\nDrawerTitle.displayName = 'DrawerTitle'\nDrawerDescription.displayName = 'DrawerDescription'\nDrawerBody.displayName = 'DrawerBody'\nDrawerFooter.displayName = 'DrawerFooter'\nDrawerClose.displayName = 'DrawerClose'\n\n// Compound component pattern with proper typing\ninterface DrawerCompound extends React.ForwardRefExoticComponent<DrawerProps & React.RefAttributes<HTMLDivElement>> {\n  Trigger: typeof DrawerTrigger\n  Content: typeof DrawerContent\n  Header: typeof DrawerHeader\n  Title: typeof DrawerTitle\n  Description: typeof DrawerDescription\n  Body: typeof DrawerBody\n  Footer: typeof DrawerFooter\n  Close: typeof DrawerClose\n}\n\nconst DrawerWithSubComponents = Drawer as DrawerCompound\nDrawerWithSubComponents.Trigger = DrawerTrigger\nDrawerWithSubComponents.Content = DrawerContent\nDrawerWithSubComponents.Header = DrawerHeader\nDrawerWithSubComponents.Title = DrawerTitle\nDrawerWithSubComponents.Description = DrawerDescription\nDrawerWithSubComponents.Body = DrawerBody\nDrawerWithSubComponents.Footer = DrawerFooter\nDrawerWithSubComponents.Close = DrawerClose\n\nexport { DrawerWithSubComponents as Drawer }\nexport type { \n  DrawerProps, \n  DrawerTriggerProps, \n  DrawerContentProps, \n  DrawerHeaderProps,\n  DrawerTitleProps,\n  DrawerDescriptionProps,\n  DrawerBodyProps,\n  DrawerFooterProps,\n  DrawerCloseProps\n}","import React, { useState, useRef, useEffect, useCallback, createContext, useContext, forwardRef, HTMLAttributes } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Dropdown.module.css'\n\nexport type DropdownPosition = \n  | 'bottom' | 'bottom-start' | 'bottom-end'\n  | 'top' | 'top-start' | 'top-end'\n  | 'left' | 'left-start' | 'left-end'\n  | 'right' | 'right-start' | 'right-end'\n\nexport interface DropdownProps {\n  /** The trigger element */\n  children: React.ReactNode\n  /** Whether the dropdown is open */\n  open?: boolean\n  /** Callback when open state changes */\n  onOpenChange?: (open: boolean) => void\n  /** Position of the dropdown */\n  position?: DropdownPosition\n  /** Alignment offset */\n  offset?: number\n  /** Whether to close on item click */\n  closeOnItemClick?: boolean\n  /** Whether to close when clicking outside */\n  closeOnClickOutside?: boolean\n  /** Whether to close when pressing escape */\n  closeOnEscape?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\ninterface DropdownContextValue {\n  close: () => void\n  closeOnItemClick: boolean\n}\n\nconst DropdownContext = createContext<DropdownContextValue | null>(null)\n\nexport const Dropdown: React.FC<DropdownProps> & {\n  Menu: typeof DropdownMenu\n  Item: typeof DropdownItem\n  Separator: typeof DropdownSeparator\n  Label: typeof DropdownLabel\n} = ({\n  children,\n  open: controlledOpen,\n  onOpenChange,\n  position = 'bottom',\n  offset = 8,\n  closeOnItemClick = true,\n  closeOnClickOutside = true,\n  closeOnEscape = true,\n  className,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [actualPosition, setActualPosition] = useState<DropdownPosition>(position)\n  const [coords, setCoords] = useState({ x: 0, y: 0 })\n  const triggerRef = useRef<HTMLElement | null>(null)\n  const dropdownRef = useRef<HTMLDivElement | null>(null)\n\n  const isOpen = controlledOpen !== undefined ? controlledOpen : open\n\n  // Extract trigger and menu from children\n  let triggerElement: React.ReactElement | null = null\n  let menuContent: React.ReactNode = null\n\n  React.Children.forEach(children, (child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === DropdownMenu) {\n        menuContent = child.props.children\n      } else {\n        triggerElement = child\n      }\n    }\n  })\n\n  // Calculate position\n  const calculatePosition = useCallback(() => {\n    if (!triggerRef.current || !dropdownRef.current) return\n\n    const triggerRect = triggerRef.current.getBoundingClientRect()\n    const dropdownRect = dropdownRef.current.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n\n    let x = 0\n    let y = 0\n\n    // Calculate base position\n    const [main, alignment] = position.split('-') as [string, string?]\n\n    switch (main) {\n      case 'bottom':\n        y = triggerRect.bottom + offset\n        break\n      case 'top':\n        y = triggerRect.top - dropdownRect.height - offset\n        break\n      case 'left':\n        x = triggerRect.left - dropdownRect.width - offset\n        break\n      case 'right':\n        x = triggerRect.right + offset\n        break\n    }\n\n    // Handle alignment\n    if (main === 'bottom' || main === 'top') {\n      switch (alignment) {\n        case 'start':\n          x = triggerRect.left\n          break\n        case 'end':\n          x = triggerRect.right - dropdownRect.width\n          break\n        default:\n          x = triggerRect.left + triggerRect.width / 2 - dropdownRect.width / 2\n      }\n    } else if (main === 'left' || main === 'right') {\n      switch (alignment) {\n        case 'start':\n          y = triggerRect.top\n          break\n        case 'end':\n          y = triggerRect.bottom - dropdownRect.height\n          break\n        default:\n          y = triggerRect.top + triggerRect.height / 2 - dropdownRect.height / 2\n      }\n    }\n\n    // Adjust for viewport boundaries\n    x = Math.max(8, Math.min(x, viewportWidth - dropdownRect.width - 8))\n    y = Math.max(8, Math.min(y, viewportHeight - dropdownRect.height - 8))\n\n    setActualPosition(position)\n    setCoords({\n      x: x,\n      y: y,\n    })\n  }, [position, offset])\n\n  // Toggle dropdown\n  const toggleDropdown = useCallback(() => {\n    if (controlledOpen === undefined) {\n      setOpen(prev => !prev)\n    }\n    onOpenChange?.(!isOpen)\n  }, [controlledOpen, isOpen, onOpenChange])\n\n  // Close dropdown\n  const closeDropdown = useCallback(() => {\n    if (controlledOpen === undefined) {\n      setOpen(false)\n    }\n    onOpenChange?.(false)\n  }, [controlledOpen, onOpenChange])\n\n  // Handle click outside\n  const handleClickOutside = useCallback((event: MouseEvent) => {\n    if (!closeOnClickOutside || !isOpen) return\n\n    const target = event.target as Node\n    if (\n      dropdownRef.current &&\n      triggerRef.current &&\n      !dropdownRef.current.contains(target) &&\n      !triggerRef.current.contains(target)\n    ) {\n      closeDropdown()\n    }\n  }, [closeOnClickOutside, isOpen, closeDropdown])\n\n  // Handle escape key\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Escape' && closeOnEscape && isOpen) {\n      closeDropdown()\n    }\n  }, [closeOnEscape, isOpen, closeDropdown])\n\n  // Effects\n  useEffect(() => {\n    if (isOpen) {\n      calculatePosition()\n\n      const handleResize = () => calculatePosition()\n      const handleScroll = () => {\n        calculatePosition()\n        // Optional: Close dropdown if trigger is scrolled out of view\n        if (triggerRef.current) {\n          const rect = triggerRef.current.getBoundingClientRect()\n          if (rect.bottom < 0 || rect.top > window.innerHeight) {\n            closeDropdown()\n          }\n        }\n      }\n\n      window.addEventListener('resize', handleResize)\n      window.addEventListener('scroll', handleScroll, true) // Use capture to catch all scroll events\n      document.addEventListener('mousedown', handleClickOutside)\n      document.addEventListener('keydown', handleKeyDown)\n\n      return () => {\n        window.removeEventListener('resize', handleResize)\n        window.removeEventListener('scroll', handleScroll, true)\n        document.removeEventListener('mousedown', handleClickOutside)\n        document.removeEventListener('keydown', handleKeyDown)\n      }\n    }\n  }, [isOpen, calculatePosition, handleClickOutside, handleKeyDown])\n\n  // Clone trigger with ref and click handler\n  const trigger = triggerElement && React.isValidElement(triggerElement) ? React.cloneElement(triggerElement, {\n    ref: (el: HTMLElement | null) => {\n      triggerRef.current = el\n    },\n    onClick: (e: React.MouseEvent) => {\n      triggerElement?.props.onClick?.(e)\n      toggleDropdown()\n    },\n    'aria-expanded': isOpen,\n    'aria-haspopup': 'menu',\n  }) : null\n\n  const contextValue: DropdownContextValue = {\n    close: closeDropdown,\n    closeOnItemClick,\n  }\n\n  return (\n    <>\n      {trigger}\n      {isOpen && createPortal(\n        <DropdownContext.Provider value={contextValue}>\n          <div\n            ref={dropdownRef}\n            className={clsx(\n              styles.dropdown,\n              styles[actualPosition.split('-')[0]],\n              className\n            )}\n            style={{\n              position: 'fixed',\n              left: coords.x,\n              top: coords.y,\n              zIndex: 'var(--brutal-z-dropdown)',\n            }}\n            role=\"menu\"\n            aria-orientation=\"vertical\"\n          >\n            {menuContent}\n          </div>\n        </DropdownContext.Provider>,\n        document.body\n      )}\n    </>\n  )\n}\n\n// Dropdown Menu container\nexport const DropdownMenu = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={clsx(styles.menu, className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n)\n\n// Dropdown Item\ninterface DropdownItemProps extends HTMLAttributes<HTMLDivElement> {\n  /** Whether the item is disabled */\n  disabled?: boolean\n  /** Whether the item is destructive */\n  destructive?: boolean\n  /** Icon to display before the text */\n  icon?: React.ReactNode\n  /** Shortcut to display */\n  shortcut?: string\n}\n\nexport const DropdownItem = forwardRef<HTMLDivElement, DropdownItemProps>(\n  ({ className, disabled, destructive, icon, shortcut, children, onClick, ...props }, ref) => {\n    const context = useContext(DropdownContext)\n\n    const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n      if (disabled) return\n      \n      onClick?.(e)\n      if (context?.closeOnItemClick) {\n        context.close()\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.item,\n          {\n            [styles.disabled]: disabled,\n            [styles.destructive]: destructive,\n          },\n          className\n        )}\n        role=\"menuitem\"\n        tabIndex={disabled ? -1 : 0}\n        onClick={handleClick}\n        {...props}\n      >\n        {icon && <span className={styles.icon}>{icon}</span>}\n        <span className={styles.text}>{children}</span>\n        {shortcut && <span className={styles.shortcut}>{shortcut}</span>}\n      </div>\n    )\n  }\n)\n\n// Dropdown Separator\nexport const DropdownSeparator = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.separator, className)}\n        role=\"separator\"\n        {...props}\n      />\n    )\n  }\n)\n\n// Dropdown Label\nexport const DropdownLabel = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.label, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Hook to use dropdown context\nexport const useDropdown = () => {\n  const context = useContext(DropdownContext)\n  if (!context) {\n    throw new Error('useDropdown must be used within a Dropdown component')\n  }\n  return context\n}\n\n// Display names\nDropdownMenu.displayName = 'DropdownMenu'\nDropdownItem.displayName = 'DropdownItem'\nDropdownSeparator.displayName = 'DropdownSeparator'\nDropdownLabel.displayName = 'DropdownLabel'\n\n// Attach subcomponents\nDropdown.Menu = DropdownMenu\nDropdown.Item = DropdownItem\nDropdown.Separator = DropdownSeparator\nDropdown.Label = DropdownLabel","import React, { forwardRef, HTMLAttributes, useState, useCallback, createContext, useContext } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Tabs.module.css'\n\nexport interface TabsProps extends HTMLAttributes<HTMLDivElement> {\n  /** The default active tab */\n  defaultValue?: string\n  /** The controlled active tab */\n  value?: string\n  /** Callback when active tab changes */\n  onValueChange?: (value: string) => void\n  /** Orientation of the tabs */\n  orientation?: 'horizontal' | 'vertical'\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether tabs should be full width */\n  fullWidth?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\ninterface TabsContextValue {\n  activeTab: string\n  setActiveTab: (value: string) => void\n  orientation: 'horizontal' | 'vertical'\n  size: 'sm' | 'md' | 'lg'\n}\n\nconst TabsContext = createContext<TabsContextValue | null>(null)\n\nexport const Tabs = forwardRef<HTMLDivElement, TabsProps>(\n  (\n    {\n      defaultValue = '',\n      value: controlledValue,\n      onValueChange,\n      orientation = 'horizontal',\n      size = 'md',\n      fullWidth = false,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [internalValue, setInternalValue] = useState(defaultValue)\n    const activeTab = controlledValue !== undefined ? controlledValue : internalValue\n\n    const setActiveTab = useCallback((newValue: string) => {\n      if (controlledValue === undefined) {\n        setInternalValue(newValue)\n      }\n      onValueChange?.(newValue)\n    }, [controlledValue, onValueChange])\n\n    const contextValue: TabsContextValue = {\n      activeTab,\n      setActiveTab,\n      orientation,\n      size,\n    }\n\n    return (\n      <TabsContext.Provider value={contextValue}>\n        <div\n          ref={ref}\n          className={clsx(\n            styles.tabs,\n            styles[orientation],\n            styles[size],\n            {\n              [styles.fullWidth]: fullWidth,\n            },\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TabsContext.Provider>\n    )\n  }\n)\n\n// Tabs List container\ninterface TabsListProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const TabsList = forwardRef<HTMLDivElement, TabsListProps>(\n  ({ className, children, ...props }, ref) => {\n    const context = useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsList must be used within Tabs')\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.list,\n          styles[context.orientation],\n          className\n        )}\n        role=\"tablist\"\n        aria-orientation={context.orientation}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Tab Trigger\ninterface TabsTriggerProps extends HTMLAttributes<HTMLButtonElement> {\n  /** The value of the tab */\n  value: string\n  /** Whether the tab is disabled */\n  disabled?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const TabsTrigger = forwardRef<HTMLButtonElement, TabsTriggerProps>(\n  ({ value, disabled, className, children, onClick, ...props }, ref) => {\n    const context = useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsTrigger must be used within Tabs')\n    }\n\n    const isActive = context.activeTab === value\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      if (!disabled) {\n        context.setActiveTab(value)\n        onClick?.(e)\n      }\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(\n          styles.trigger,\n          styles[context.size],\n          {\n            [styles.active]: isActive,\n            [styles.disabled]: disabled,\n          },\n          className\n        )}\n        role=\"tab\"\n        aria-selected={isActive}\n        aria-controls={`tabpanel-${value}`}\n        id={`tab-${value}`}\n        tabIndex={isActive ? 0 : -1}\n        disabled={disabled}\n        onClick={handleClick}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\n\n// Tab Content\ninterface TabsContentProps extends HTMLAttributes<HTMLDivElement> {\n  /** The value of the tab */\n  value: string\n  /** Whether to force mount the content */\n  forceMount?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const TabsContent = forwardRef<HTMLDivElement, TabsContentProps>(\n  ({ value, forceMount = false, className, children, ...props }, ref) => {\n    const context = useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsContent must be used within Tabs')\n    }\n\n    const isActive = context.activeTab === value\n\n    if (!isActive && !forceMount) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.content,\n          {\n            [styles.active]: isActive,\n            [styles.inactive]: !isActive,\n          },\n          className\n        )}\n        role=\"tabpanel\"\n        aria-labelledby={`tab-${value}`}\n        id={`tabpanel-${value}`}\n        tabIndex={0}\n        hidden={!isActive}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Hook to use tabs context\nexport const useTabs = () => {\n  const context = useContext(TabsContext)\n  if (!context) {\n    throw new Error('useTabs must be used within Tabs')\n  }\n  return context\n}\n\n// Display names\nTabs.displayName = 'Tabs'\nTabsList.displayName = 'TabsList'\nTabsTrigger.displayName = 'TabsTrigger'\nTabsContent.displayName = 'TabsContent'\n\n// Attach subcomponents\nconst TabsNamespace = Object.assign(Tabs, {\n  List: TabsList,\n  Trigger: TabsTrigger,\n  Content: TabsContent,\n})\n\nexport default TabsNamespace","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Container.module.css'\n\nexport interface ContainerProps extends HTMLAttributes<HTMLDivElement> {\n  /** Container size */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  /** Whether the container should be centered */\n  centered?: boolean\n  /** Container padding */\n  padding?: 'none' | 'sm' | 'md' | 'lg'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Container = forwardRef<HTMLDivElement, ContainerProps>(\n  (\n    {\n      size = 'lg',\n      centered = true,\n      padding = 'md',\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.container,\n          styles[size],\n          styles[`padding-${padding}`],\n          {\n            [styles.centered]: centered,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nContainer.displayName = 'Container'","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Stack.module.css'\n\nexport interface StackProps extends HTMLAttributes<HTMLDivElement> {\n  /** Stack direction */\n  direction?: 'horizontal' | 'vertical'\n  /** Gap between items */\n  gap?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  /** Alignment of items */\n  align?: 'start' | 'center' | 'end' | 'stretch'\n  /** Justification of items */\n  justify?: 'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'\n  /** Whether items should wrap */\n  wrap?: boolean\n  /** Stack element type */\n  as?: 'div' | 'section' | 'article' | 'aside' | 'header' | 'footer' | 'main' | 'nav'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Stack = forwardRef<HTMLDivElement, StackProps>(\n  (\n    {\n      direction = 'vertical',\n      gap = 'md',\n      align = 'stretch',\n      justify = 'start',\n      wrap = false,\n      as: Component = 'div',\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <Component\n        ref={ref}\n        className={clsx(\n          styles.stack,\n          styles[direction],\n          styles[`gap-${gap}`],\n          styles[`align-${align}`],\n          styles[`justify-${justify}`],\n          {\n            [styles.wrap]: wrap,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Component>\n    )\n  }\n)\n\nStack.displayName = 'Stack'","import React, { forwardRef, HTMLAttributes, AnchorHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Breadcrumb.module.css'\n\nexport interface BreadcrumbProps extends HTMLAttributes<HTMLElement> {\n  /** Separator between breadcrumb items */\n  separator?: React.ReactNode\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface BreadcrumbItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Whether this item is the current page */\n  isCurrentPage?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface BreadcrumbLinkProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Breadcrumb = forwardRef<HTMLElement, BreadcrumbProps>(\n  ({ separator = '/', className, children, ...props }, ref) => {\n    return (\n      <nav\n        ref={ref}\n        aria-label=\"Breadcrumb\"\n        className={clsx(styles.breadcrumb, className)}\n        {...props}\n      >\n        <ol className={styles.list}>\n          {React.Children.map(children, (child, index) => {\n            if (!React.isValidElement(child)) return null\n            \n            const isLast = index === React.Children.count(children) - 1\n            \n            return (\n              <>\n                {child}\n                {!isLast && (\n                  <li className={styles.separator} aria-hidden=\"true\">\n                    {separator}\n                  </li>\n                )}\n              </>\n            )\n          })}\n        </ol>\n      </nav>\n    )\n  }\n)\n\nexport const BreadcrumbItem = forwardRef<HTMLLIElement, BreadcrumbItemProps>(\n  ({ isCurrentPage = false, className, children, ...props }, ref) => {\n    return (\n      <li\n        ref={ref}\n        className={clsx(\n          styles.item,\n          {\n            [styles.current]: isCurrentPage,\n          },\n          className\n        )}\n        aria-current={isCurrentPage ? 'page' : undefined}\n        {...props}\n      >\n        {children}\n      </li>\n    )\n  }\n)\n\nexport const BreadcrumbLink = forwardRef<HTMLAnchorElement, BreadcrumbLinkProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <a\n        ref={ref}\n        className={clsx(styles.link, className)}\n        {...props}\n      >\n        {children}\n      </a>\n    )\n  }\n)\n\nexport const BreadcrumbPage = forwardRef<HTMLSpanElement, HTMLAttributes<HTMLSpanElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <span\n        ref={ref}\n        className={clsx(styles.page, className)}\n        {...props}\n      >\n        {children}\n      </span>\n    )\n  }\n)\n\n// Display names\nBreadcrumb.displayName = 'Breadcrumb'\nBreadcrumbItem.displayName = 'BreadcrumbItem'\nBreadcrumbLink.displayName = 'BreadcrumbLink'\nBreadcrumbPage.displayName = 'BreadcrumbPage'\n\n// Attach subcomponents\nconst BreadcrumbNamespace = Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem,\n  Link: BreadcrumbLink,\n  Page: BreadcrumbPage,\n})\n\nexport default BreadcrumbNamespace","import React, { forwardRef, HTMLAttributes, createContext, useContext } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Sidebar.module.css'\n\nexport interface SidebarProps extends HTMLAttributes<HTMLDivElement> {\n  /** Whether the sidebar is collapsible */\n  collapsible?: boolean\n  /** Whether the sidebar is collapsed */\n  collapsed?: boolean\n  /** Callback when collapse state changes */\n  onCollapsedChange?: (collapsed: boolean) => void\n  /** Sidebar position */\n  side?: 'left' | 'right'\n  /** Sidebar variant */\n  variant?: 'default' | 'floating' | 'inset'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarContentProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarGroupLabelProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarGroupContentProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarMenuProps extends HTMLAttributes<HTMLUListElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarMenuItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarMenuButtonProps extends HTMLAttributes<HTMLButtonElement> {\n  /** Whether the menu item is active */\n  isActive?: boolean\n  /** Icon to display */\n  icon?: React.ReactNode\n  /** Additional CSS classes */\n  className?: string\n}\n\ninterface SidebarContextValue {\n  collapsed: boolean\n  collapsible: boolean\n}\n\nconst SidebarContext = createContext<SidebarContextValue | null>(null)\n\nexport const Sidebar = forwardRef<HTMLDivElement, SidebarProps>(\n  (\n    {\n      collapsible = false,\n      collapsed = false,\n      onCollapsedChange: _onCollapsedChange,\n      side = 'left',\n      variant = 'default',\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const contextValue: SidebarContextValue = {\n      collapsed,\n      collapsible,\n    }\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <div\n          ref={ref}\n          className={clsx(\n            styles.sidebar,\n            styles[side],\n            styles[variant],\n            {\n              [styles.collapsed]: collapsed,\n              [styles.collapsible]: collapsible,\n            },\n            className\n          )}\n          data-sidebar=\"sidebar\"\n          data-collapsed={collapsed}\n          {...props}\n        >\n          {children}\n        </div>\n      </SidebarContext.Provider>\n    )\n  }\n)\n\nexport const SidebarHeader = forwardRef<HTMLDivElement, SidebarHeaderProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.header, className)}\n        data-sidebar=\"header\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarContent = forwardRef<HTMLDivElement, SidebarContentProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.content, className)}\n        data-sidebar=\"content\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarFooter = forwardRef<HTMLDivElement, SidebarFooterProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.footer, className)}\n        data-sidebar=\"footer\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarGroup = forwardRef<HTMLDivElement, SidebarGroupProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.group, className)}\n        data-sidebar=\"group\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarGroupLabel = forwardRef<HTMLDivElement, SidebarGroupLabelProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.groupLabel, className)}\n        data-sidebar=\"group-label\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarGroupContent = forwardRef<HTMLDivElement, SidebarGroupContentProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.groupContent, className)}\n        data-sidebar=\"group-content\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarMenu = forwardRef<HTMLUListElement, SidebarMenuProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <ul\n        ref={ref}\n        className={clsx(styles.menu, className)}\n        data-sidebar=\"menu\"\n        {...props}\n      >\n        {children}\n      </ul>\n    )\n  }\n)\n\nexport const SidebarMenuItem = forwardRef<HTMLLIElement, SidebarMenuItemProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <li\n        ref={ref}\n        className={clsx(styles.menuItem, className)}\n        data-sidebar=\"menu-item\"\n        {...props}\n      >\n        {children}\n      </li>\n    )\n  }\n)\n\nexport const SidebarMenuButton = forwardRef<HTMLButtonElement, SidebarMenuButtonProps>(\n  ({ isActive = false, icon, className, children, ...props }, ref) => {\n    const context = useContext(SidebarContext)\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(\n          styles.menuButton,\n          {\n            [styles.active]: isActive,\n            [styles.withIcon]: !!icon,\n          },\n          className\n        )}\n        data-sidebar=\"menu-button\"\n        data-active={isActive}\n        {...props}\n      >\n        {icon && (\n          <span className={styles.icon} data-sidebar=\"icon\">\n            {icon}\n          </span>\n        )}\n        {(!context?.collapsed || !context?.collapsible) && (\n          <span className={styles.text} data-sidebar=\"text\">\n            {children}\n          </span>\n        )}\n      </button>\n    )\n  }\n)\n\n// Hook to use sidebar context\nexport const useSidebar = () => {\n  const context = useContext(SidebarContext)\n  if (!context) {\n    throw new Error('useSidebar must be used within a Sidebar component')\n  }\n  return context\n}\n\n// Display names\nSidebar.displayName = 'Sidebar'\nSidebarHeader.displayName = 'SidebarHeader'\nSidebarContent.displayName = 'SidebarContent'\nSidebarFooter.displayName = 'SidebarFooter'\nSidebarGroup.displayName = 'SidebarGroup'\nSidebarGroupLabel.displayName = 'SidebarGroupLabel'\nSidebarGroupContent.displayName = 'SidebarGroupContent'\nSidebarMenu.displayName = 'SidebarMenu'\nSidebarMenuItem.displayName = 'SidebarMenuItem'\nSidebarMenuButton.displayName = 'SidebarMenuButton'\n\n// Attach subcomponents\nconst SidebarNamespace = Object.assign(Sidebar, {\n  Header: SidebarHeader,\n  Content: SidebarContent,\n  Footer: SidebarFooter,\n  Group: SidebarGroup,\n  GroupLabel: SidebarGroupLabel,\n  GroupContent: SidebarGroupContent,\n  Menu: SidebarMenu,\n  MenuItem: SidebarMenuItem,\n  MenuButton: SidebarMenuButton,\n})\n\nexport default SidebarNamespace","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Navigation.module.css'\n\nexport interface NavigationProps extends HTMLAttributes<HTMLElement> {\n  /** Whether the navigation is vertical */\n  vertical?: boolean\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface NavigationListProps extends HTMLAttributes<HTMLUListElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface NavigationItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Whether the item is active */\n  isActive?: boolean\n  /** Whether the item is disabled */\n  disabled?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface NavigationLinkProps extends HTMLAttributes<HTMLAnchorElement> {\n  /** Link href */\n  href?: string\n  /** Whether the link is active */\n  isActive?: boolean\n  /** Whether the link is disabled */\n  disabled?: boolean\n  /** Icon to display */\n  icon?: React.ReactNode\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface NavigationSeparatorProps extends HTMLAttributes<HTMLHRElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\n// Create compound component interface\ninterface NavigationComponent extends React.ForwardRefExoticComponent<NavigationProps & React.RefAttributes<HTMLElement>> {\n  List: typeof NavigationList;\n  Item: typeof NavigationItem;\n  Link: typeof NavigationLink;\n  Separator: typeof NavigationSeparator;\n}\n\nexport const Navigation = forwardRef<HTMLElement, NavigationProps>(\n  ({ vertical = false, size = 'md', className, children, ...props }, ref) => {\n    return (\n      <nav\n        ref={ref}\n        className={clsx(\n          styles.navigation,\n          {\n            [styles.vertical]: vertical,\n            [styles[size]]: size,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </nav>\n    )\n  }\n) as NavigationComponent\n\nexport const NavigationList = forwardRef<HTMLUListElement, NavigationListProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <ul\n        ref={ref}\n        className={clsx(styles.list, className)}\n        {...props}\n      >\n        {children}\n      </ul>\n    )\n  }\n)\n\nexport const NavigationItem = forwardRef<HTMLLIElement, NavigationItemProps>(\n  ({ isActive, disabled, className, children, ...props }, ref) => {\n    return (\n      <li\n        ref={ref}\n        className={clsx(\n          styles.item,\n          {\n            [styles.active]: isActive,\n            [styles.disabled]: disabled,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </li>\n    )\n  }\n)\n\nexport const NavigationLink = forwardRef<HTMLAnchorElement, NavigationLinkProps>(\n  ({ href, isActive, disabled, icon, className, children, ...props }, ref) => {\n    return (\n      <a\n        ref={ref}\n        href={disabled ? undefined : href}\n        className={clsx(\n          styles.link,\n          {\n            [styles.active]: isActive,\n            [styles.disabled]: disabled,\n          },\n          className\n        )}\n        aria-current={isActive ? 'page' : undefined}\n        tabIndex={disabled ? -1 : undefined}\n        {...props}\n      >\n        {icon && <span className={styles.icon}>{icon}</span>}\n        <span className={styles.text}>{children}</span>\n      </a>\n    )\n  }\n)\n\nexport const NavigationSeparator = forwardRef<HTMLHRElement, NavigationSeparatorProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <hr\n        ref={ref}\n        className={clsx(styles.separator, className)}\n        {...props}\n      />\n    )\n  }\n)\n\n// Display names\nNavigation.displayName = 'Navigation'\nNavigationList.displayName = 'NavigationList'\nNavigationItem.displayName = 'NavigationItem'\nNavigationLink.displayName = 'NavigationLink'\nNavigationSeparator.displayName = 'NavigationSeparator'\n\n// Attach subcomponents\nNavigation.List = NavigationList\nNavigation.Item = NavigationItem\nNavigation.Link = NavigationLink\nNavigation.Separator = NavigationSeparator","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './TableOfContents.module.css'\n\nexport interface TableOfContentsProps extends HTMLAttributes<HTMLElement> {\n  /** Title for the table of contents */\n  title?: string\n  /** Whether to show the title */\n  showTitle?: boolean\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Position variant */\n  position?: 'default' | 'sticky' | 'floating'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableOfContentsListProps extends HTMLAttributes<HTMLOListElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableOfContentsItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Heading level (1-6) */\n  level?: 1 | 2 | 3 | 4 | 5 | 6\n  /** Whether the item is active */\n  isActive?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableOfContentsLinkProps extends HTMLAttributes<HTMLAnchorElement> {\n  /** Link href (usually an anchor) */\n  href: string\n  /** Whether the link is active */\n  isActive?: boolean\n  /** Heading level for styling */\n  level?: 1 | 2 | 3 | 4 | 5 | 6\n  /** Additional CSS classes */\n  className?: string\n}\n\n// Create compound component type interface\nexport interface TableOfContentsComponent extends React.ForwardRefExoticComponent<TableOfContentsProps & React.RefAttributes<HTMLElement>> {\n  List: typeof TableOfContentsList;\n  Item: typeof TableOfContentsItem;\n  Link: typeof TableOfContentsLink;\n}\n\nexport const TableOfContents = forwardRef<HTMLElement, TableOfContentsProps>(\n  ({ \n    title = 'Table of Contents', \n    showTitle = true, \n    size = 'md', \n    position = 'default',\n    className, \n    children, \n    ...props \n  }, ref) => {\n    return (\n      <nav\n        ref={ref}\n        className={clsx(\n          styles.tableOfContents,\n          styles[size],\n          styles[position],\n          className\n        )}\n        aria-label=\"Table of contents\"\n        {...props}\n      >\n        {showTitle && (\n          <h2 className={styles.title}>\n            {title}\n          </h2>\n        )}\n        {children}\n      </nav>\n    )\n  }\n) as TableOfContentsComponent\n\nexport const TableOfContentsList = forwardRef<HTMLOListElement, TableOfContentsListProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <ol\n        ref={ref}\n        className={clsx(styles.list, className)}\n        {...props}\n      >\n        {children}\n      </ol>\n    )\n  }\n)\n\nexport const TableOfContentsItem = forwardRef<HTMLLIElement, TableOfContentsItemProps>(\n  ({ level = 1, isActive, className, children, ...props }, ref) => {\n    return (\n      <li\n        ref={ref}\n        className={clsx(\n          styles.item,\n          styles[`level${level}`],\n          {\n            [styles.active]: isActive,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </li>\n    )\n  }\n)\n\nexport const TableOfContentsLink = forwardRef<HTMLAnchorElement, TableOfContentsLinkProps>(\n  ({ href, isActive, level = 1, className, children, ...props }, ref) => {\n    return (\n      <a\n        ref={ref}\n        href={href}\n        className={clsx(\n          styles.link,\n          styles[`linkLevel${level}`],\n          {\n            [styles.activeLink]: isActive,\n          },\n          className\n        )}\n        aria-current={isActive ? 'location' : undefined}\n        {...props}\n      >\n        <span className={styles.linkText}>{children}</span>\n      </a>\n    )\n  }\n)\n\n// Display names\nTableOfContents.displayName = 'TableOfContents'\nTableOfContentsList.displayName = 'TableOfContentsList'\nTableOfContentsItem.displayName = 'TableOfContentsItem'\nTableOfContentsLink.displayName = 'TableOfContentsLink'\n\n// Attach subcomponents\nTableOfContents.List = TableOfContentsList\nTableOfContents.Item = TableOfContentsItem\nTableOfContents.Link = TableOfContentsLink","import { createContext, forwardRef, HTMLAttributes, useContext, useState, useId, ReactNode } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Accordion.module.css'\n\nexport interface AccordionProps extends HTMLAttributes<HTMLDivElement> {\n  /** Type of accordion behavior */\n  type?: 'single' | 'multiple'\n  /** For single type: whether an item can be collapsed */\n  collapsible?: boolean\n  /** Default open items (for controlled) */\n  defaultValue?: string | string[]\n  /** Controlled value */\n  value?: string | string[]\n  /** Callback when value changes */\n  onValueChange?: (value: string | string[]) => void\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Visual variant */\n  variant?: 'default' | 'brutal' | 'outline'\n  /** Disabled state */\n  disabled?: boolean\n}\n\nexport interface AccordionItemProps extends HTMLAttributes<HTMLDivElement> {\n  /** Unique value for this item */\n  value: string\n  /** Whether this item is disabled */\n  disabled?: boolean\n}\n\nexport interface AccordionTriggerProps extends HTMLAttributes<HTMLButtonElement> {\n  /** Custom icon to display */\n  icon?: ReactNode\n  /** Hide the default chevron icon */\n  hideIcon?: boolean\n}\n\nexport interface AccordionContentProps extends HTMLAttributes<HTMLDivElement> {\n  /** Content to display when expanded */\n  children: ReactNode\n}\n\n// Context for accordion state\ninterface AccordionContextValue {\n  type: 'single' | 'multiple'\n  value: string | string[]\n  onValueChange: (value: string | string[]) => void\n  size: 'sm' | 'md' | 'lg'\n  variant: 'default' | 'brutal' | 'outline'\n  disabled: boolean\n  collapsible: boolean\n}\n\nconst AccordionContext = createContext<AccordionContextValue | null>(null)\n\n// Context for accordion item\ninterface AccordionItemContextValue {\n  value: string\n  isOpen: boolean\n  disabled: boolean\n  toggle: () => void\n  triggerId: string\n  contentId: string\n}\n\nconst AccordionItemContext = createContext<AccordionItemContextValue | null>(null)\n\nconst Accordion = forwardRef<HTMLDivElement, AccordionProps>(\n  (\n    {\n      children,\n      className,\n      type = 'single',\n      collapsible = false,\n      defaultValue,\n      value: controlledValue,\n      onValueChange,\n      size = 'md',\n      variant = 'default',\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    // Initialize internal state\n    const [internalValue, setInternalValue] = useState<string | string[]>(() => {\n      if (controlledValue !== undefined) return controlledValue\n      if (defaultValue !== undefined) return defaultValue\n      return type === 'multiple' ? [] : ''\n    })\n\n    const value = controlledValue !== undefined ? controlledValue : internalValue\n\n    const handleValueChange = (newValue: string | string[]) => {\n      if (controlledValue === undefined) {\n        setInternalValue(newValue)\n      }\n      onValueChange?.(newValue)\n    }\n\n    return (\n      <AccordionContext.Provider\n        value={{\n          type,\n          value,\n          onValueChange: handleValueChange,\n          size,\n          variant,\n          disabled,\n          collapsible,\n        }}\n      >\n        <div\n          ref={ref}\n          className={clsx(\n            styles.accordion,\n            styles[size],\n            styles[variant],\n            {\n              [styles.disabled]: disabled,\n            },\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </AccordionContext.Provider>\n    )\n  }\n)\n\nconst AccordionItem = forwardRef<HTMLDivElement, AccordionItemProps>(\n  ({ children, className, value, disabled: itemDisabled = false, ...props }, ref) => {\n    const context = useContext(AccordionContext)\n    if (!context) {\n      throw new Error('AccordionItem must be used within an Accordion')\n    }\n\n    const { type, value: accordionValue, onValueChange, disabled: accordionDisabled } = context\n    const disabled = accordionDisabled || itemDisabled\n\n    // Generate unique IDs for accessibility\n    const baseId = useId()\n    const triggerId = `${baseId}-trigger`\n    const contentId = `${baseId}-content`\n\n    // Determine if this item is open\n    const isOpen = type === 'multiple' \n      ? Array.isArray(accordionValue) && accordionValue.includes(value)\n      : accordionValue === value\n\n    const toggle = () => {\n      if (disabled) return\n\n      if (type === 'multiple') {\n        const currentValue = Array.isArray(accordionValue) ? accordionValue : []\n        const newValue = isOpen\n          ? currentValue.filter(v => v !== value)\n          : [...currentValue, value]\n        onValueChange(newValue)\n      } else {\n        const newValue = isOpen && context.collapsible ? '' : value\n        onValueChange(newValue)\n      }\n    }\n\n    return (\n      <AccordionItemContext.Provider\n        value={{\n          value,\n          isOpen,\n          disabled,\n          toggle,\n          triggerId,\n          contentId,\n        }}\n      >\n        <div\n          ref={ref}\n          className={clsx(\n            styles.item,\n            {\n              [styles.open]: isOpen,\n              [styles.disabled]: disabled,\n            },\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </AccordionItemContext.Provider>\n    )\n  }\n)\n\nconst AccordionTrigger = forwardRef<HTMLButtonElement, AccordionTriggerProps>(\n  ({ children, className, icon, hideIcon = false, onClick, ...props }, ref) => {\n    const itemContext = useContext(AccordionItemContext)\n    const accordionContext = useContext(AccordionContext)\n    \n    if (!itemContext || !accordionContext) {\n      throw new Error('AccordionTrigger must be used within an AccordionItem')\n    }\n\n    const { isOpen, disabled, toggle, triggerId, contentId } = itemContext\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      toggle()\n      onClick?.(event)\n    }\n\n    return (\n      <button\n        ref={ref}\n        id={triggerId}\n        type=\"button\"\n        className={clsx(\n          styles.trigger,\n          {\n            [styles.open]: isOpen,\n            [styles.disabled]: disabled,\n          },\n          className\n        )}\n        onClick={handleClick}\n        disabled={disabled}\n        aria-expanded={isOpen}\n        aria-controls={contentId}\n        {...props}\n      >\n        <span className={styles.triggerText}>{children}</span>\n        {!hideIcon && (\n          <span \n            className={clsx(styles.triggerIcon, {\n              [styles.rotated]: isOpen\n            })}\n          >\n            {icon || <DefaultChevronIcon />}\n          </span>\n        )}\n      </button>\n    )\n  }\n)\n\nconst AccordionContent = forwardRef<HTMLDivElement, AccordionContentProps>(\n  ({ children, className, ...props }, ref) => {\n    const itemContext = useContext(AccordionItemContext)\n    \n    if (!itemContext) {\n      throw new Error('AccordionContent must be used within an AccordionItem')\n    }\n\n    const { isOpen, contentId, triggerId } = itemContext\n\n    return (\n      <div\n        ref={ref}\n        id={contentId}\n        role=\"region\"\n        aria-labelledby={triggerId}\n        className={clsx(\n          styles.content,\n          {\n            [styles.open]: isOpen,\n          },\n          className\n        )}\n        {...props}\n      >\n        <div className={styles.contentInner}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n)\n\n// Default chevron icon\nconst DefaultChevronIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M4 6L8 10L12 6\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n      strokeLinejoin=\"miter\"\n    />\n  </svg>\n)\n\nAccordion.displayName = 'Accordion'\nAccordionItem.displayName = 'Accordion.Item'\nAccordionTrigger.displayName = 'Accordion.Trigger'\nAccordionContent.displayName = 'Accordion.Content'\n\n// Compound component\nconst AccordionComponent = Accordion as typeof Accordion & {\n  Item: typeof AccordionItem\n  Trigger: typeof AccordionTrigger\n  Content: typeof AccordionContent\n}\n\nAccordionComponent.Item = AccordionItem\nAccordionComponent.Trigger = AccordionTrigger\nAccordionComponent.Content = AccordionContent\n\nexport { AccordionComponent as Accordion }","import React, { createContext, useContext, useState, useRef, useEffect, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport clsx from 'clsx'\nimport styles from './Combobox.module.css'\n\ninterface ComboboxOption {\n  value: string\n  label: string\n  disabled?: boolean\n}\n\ninterface ComboboxProps {\n  options: ComboboxOption[]\n  value?: string\n  defaultValue?: string\n  onValueChange?: (value: string) => void\n  placeholder?: string\n  emptyMessage?: string\n  searchPlaceholder?: string\n  disabled?: boolean\n  className?: string\n  children?: React.ReactNode\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'outline' | 'info' | 'system' | 'destructive' | 'success' | 'warning' | 'ghost' | 'neon' | 'retro'\n  style?: React.CSSProperties\n}\n\ninterface ComboboxContextValue {\n  isOpen: boolean\n  setIsOpen: (open: boolean) => void\n  selectedValue: string\n  setSelectedValue: (value: string) => void\n  searchValue: string\n  setSearchValue: (value: string) => void\n  options: ComboboxOption[]\n  filteredOptions: ComboboxOption[]\n  triggerRef: React.RefObject<HTMLButtonElement>\n  contentRef: React.RefObject<HTMLDivElement>\n  highlightedIndex: number\n  setHighlightedIndex: (index: number) => void\n  onSelect: (value: string) => void\n  placeholder?: string\n  emptyMessage?: string\n  searchPlaceholder?: string\n}\n\nconst ComboboxContext = createContext<ComboboxContextValue | null>(null)\n\nconst useCombobox = () => {\n  const context = useContext(ComboboxContext)\n  if (!context) {\n    throw new Error('Combobox components must be used within a Combobox')\n  }\n  return context\n}\n\nconst Combobox = React.forwardRef<HTMLDivElement, ComboboxProps>(\n  ({ \n    options = [], \n    value, \n    defaultValue = '', \n    onValueChange, \n    placeholder,\n    emptyMessage,\n    searchPlaceholder,\n    className, \n    children, \n    size = 'md',\n    variant = 'default',\n    ...props \n  }, ref) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [selectedValue, setSelectedValue] = useState(value ?? defaultValue)\n    const [searchValue, setSearchValue] = useState('')\n    const [highlightedIndex, setHighlightedIndex] = useState(-1)\n    \n    const triggerRef = useRef<HTMLButtonElement>(null)\n    const contentRef = useRef<HTMLDivElement>(null)\n\n    // Filter options based on search\n    const filteredOptions = React.useMemo(() => {\n      if (!searchValue) return options\n      return options.filter(option => \n        option.label.toLowerCase().includes(searchValue.toLowerCase())\n      )\n    }, [options, searchValue])\n\n    // Handle value changes\n    useEffect(() => {\n      if (value !== undefined) {\n        setSelectedValue(value)\n      }\n    }, [value])\n\n    const onSelect = useCallback((optionValue: string) => {\n      setSelectedValue(optionValue)\n      setIsOpen(false)\n      setSearchValue('')\n      setHighlightedIndex(-1)\n      onValueChange?.(optionValue)\n    }, [onValueChange])\n\n    // Handle keyboard navigation\n    const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n      if (!isOpen) {\n        if (e.key === 'Enter' || e.key === ' ' || e.key === 'ArrowDown') {\n          e.preventDefault()\n          setIsOpen(true)\n          setHighlightedIndex(0)\n        }\n        return\n      }\n\n      switch (e.key) {\n        case 'Escape':\n          e.preventDefault()\n          setIsOpen(false)\n          setHighlightedIndex(-1)\n          triggerRef.current?.focus()\n          break\n        case 'ArrowDown':\n          e.preventDefault()\n          setHighlightedIndex(prev => \n            prev < filteredOptions.length - 1 ? prev + 1 : 0\n          )\n          break\n        case 'ArrowUp':\n          e.preventDefault()\n          setHighlightedIndex(prev => \n            prev > 0 ? prev - 1 : filteredOptions.length - 1\n          )\n          break\n        case 'Enter':\n          e.preventDefault()\n          if (highlightedIndex >= 0 && filteredOptions[highlightedIndex]) {\n            onSelect(filteredOptions[highlightedIndex].value)\n          }\n          break\n      }\n    }, [isOpen, filteredOptions, highlightedIndex, onSelect])\n\n    // Close on outside click\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (\n          contentRef.current && \n          !contentRef.current.contains(event.target as Node) &&\n          triggerRef.current &&\n          !triggerRef.current.contains(event.target as Node)\n        ) {\n          setIsOpen(false)\n          setHighlightedIndex(-1)\n        }\n      }\n\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside)\n        return () => document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }, [isOpen])\n\n    const contextValue: ComboboxContextValue = {\n      isOpen,\n      setIsOpen,\n      selectedValue,\n      setSelectedValue,\n      searchValue,\n      setSearchValue,\n      options,\n      filteredOptions,\n      triggerRef,\n      contentRef,\n      highlightedIndex,\n      setHighlightedIndex,\n      onSelect,\n      placeholder,\n      emptyMessage,\n      searchPlaceholder\n    }\n\n    return (\n      <ComboboxContext.Provider value={contextValue}>\n        <div \n          ref={ref}\n          className={clsx(\n            styles.combobox,\n            styles[`combobox--${size}`],\n            styles[`combobox--${variant}`],\n            className\n          )}\n          onKeyDown={handleKeyDown}\n          {...props}\n        >\n          {children}\n        </div>\n      </ComboboxContext.Provider>\n    )\n  }\n)\n\ninterface ComboboxTriggerProps {\n  children?: React.ReactNode\n  className?: string\n  placeholder?: string\n  icon?: React.ReactNode\n}\n\nconst ComboboxTrigger = React.forwardRef<HTMLButtonElement, ComboboxTriggerProps>(\n  ({ className, placeholder: triggerPlaceholder, icon, ...props }, _ref) => {\n    const { isOpen, setIsOpen, selectedValue, options, triggerRef, placeholder: contextPlaceholder } = useCombobox()\n    \n    const selectedOption = options.find(option => option.value === selectedValue)\n    const finalPlaceholder = triggerPlaceholder || contextPlaceholder || 'Select option...'\n    \n    return (\n      <button\n        ref={triggerRef}\n        type=\"button\"\n        role=\"combobox\"\n        aria-expanded={isOpen}\n        aria-haspopup=\"listbox\"\n        className={clsx(styles.trigger, className)}\n        onClick={() => setIsOpen(!isOpen)}\n        {...props}\n      >\n        {icon && <span className={styles.triggerIcon}>{icon}</span>}\n        <span className={styles.triggerText}>\n          {selectedOption ? selectedOption.label : finalPlaceholder}\n        </span>\n        <svg \n          className={clsx(styles.triggerArrow, { [styles.triggerArrowOpen]: isOpen })}\n          width=\"12\" \n          height=\"12\" \n          viewBox=\"0 0 12 12\" \n          fill=\"none\"\n        >\n          <path d=\"M3 4.5L6 7.5L9 4.5\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        </svg>\n      </button>\n    )\n  }\n)\n\ninterface ComboboxContentProps {\n  children?: React.ReactNode\n  className?: string\n  searchPlaceholder?: string\n  emptyMessage?: string\n}\n\nconst ComboboxContent = React.forwardRef<HTMLDivElement, ComboboxContentProps>(\n  ({ \n    children, \n    className, \n    searchPlaceholder: contentSearchPlaceholder, \n    emptyMessage: contentEmptyMessage,\n    ...props \n  }, _ref) => {\n    const { \n      isOpen, \n      searchValue, \n      setSearchValue, \n      filteredOptions, \n      contentRef,\n      triggerRef,\n      searchPlaceholder: contextSearchPlaceholder,\n      emptyMessage: contextEmptyMessage\n    } = useCombobox()\n    \n    const finalSearchPlaceholder = contentSearchPlaceholder || contextSearchPlaceholder || 'Search options...'\n    const finalEmptyMessage = contentEmptyMessage || contextEmptyMessage || 'No options found.'\n    \n    const [position, setPosition] = useState({ top: 0, left: 0, width: 0 })\n    \n    // Position the content relative to trigger and update on scroll/resize\n    const updatePosition = useCallback(() => {\n      if (isOpen && triggerRef.current) {\n        const triggerRect = triggerRef.current.getBoundingClientRect()\n        setPosition({\n          top: triggerRect.bottom + 4,\n          left: triggerRect.left,\n          width: triggerRect.width\n        })\n      }\n    }, [isOpen, triggerRef])\n\n    useEffect(() => {\n      updatePosition()\n    }, [updatePosition])\n\n    useEffect(() => {\n      if (isOpen) {\n        const handleUpdate = () => updatePosition()\n        window.addEventListener('scroll', handleUpdate, true)\n        window.addEventListener('resize', handleUpdate)\n        return () => {\n          window.removeEventListener('scroll', handleUpdate, true)\n          window.removeEventListener('resize', handleUpdate)\n        }\n      }\n    }, [isOpen, updatePosition])\n\n    if (!isOpen) return null\n\n    const content = (\n      <div\n        ref={contentRef}\n        className={clsx(styles.content, className)}\n        style={{\n          top: position.top,\n          left: position.left,\n          minWidth: position.width\n        }}\n        role=\"listbox\"\n        {...props}\n      >\n        <div className={styles.searchContainer}>\n          <input\n            type=\"text\"\n            className={styles.searchInput}\n            placeholder={finalSearchPlaceholder}\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n            autoFocus\n          />\n        </div>\n        \n        <div className={styles.optionsList}>\n          {filteredOptions.length === 0 ? (\n            <div className={styles.emptyMessage}>{finalEmptyMessage}</div>\n          ) : (\n            children || filteredOptions.map((option) => (\n              <ComboboxOption \n                key={option.value} \n                value={option.value}\n                disabled={option.disabled}\n              >\n                {option.label}\n              </ComboboxOption>\n            ))\n          )}\n        </div>\n      </div>\n    )\n\n    return createPortal(content, document.body)\n  }\n)\n\ninterface ComboboxOptionProps {\n  value: string\n  children: React.ReactNode\n  disabled?: boolean\n  className?: string\n}\n\nconst ComboboxOption = React.forwardRef<HTMLDivElement, ComboboxOptionProps>(\n  ({ value, children, disabled = false, className, ...props }, ref) => {\n    const { \n      selectedValue, \n      onSelect, \n      highlightedIndex, \n      setHighlightedIndex,\n      filteredOptions \n    } = useCombobox()\n    \n    const optionIndex = filteredOptions.findIndex(option => option.value === value)\n    const isSelected = selectedValue === value\n    const isHighlighted = highlightedIndex === optionIndex\n\n    return (\n      <div\n        ref={ref}\n        role=\"option\"\n        aria-selected={isSelected}\n        className={clsx(\n          styles.option,\n          {\n            [styles.optionSelected]: isSelected,\n            [styles.optionHighlighted]: isHighlighted,\n            [styles.optionDisabled]: disabled\n          },\n          className\n        )}\n        onClick={() => !disabled && onSelect(value)}\n        onMouseEnter={() => !disabled && setHighlightedIndex(optionIndex)}\n        {...props}\n      >\n        {children}\n        {isSelected && (\n          <svg \n            className={styles.checkIcon}\n            width=\"16\" \n            height=\"16\" \n            viewBox=\"0 0 16 16\" \n            fill=\"none\"\n          >\n            <path \n              d=\"M13.5 4.5L6 12L2.5 8.5\" \n              stroke=\"currentColor\" \n              strokeWidth=\"2\" \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        )}\n      </div>\n    )\n  }\n)\n\n// Display names\nCombobox.displayName = 'Combobox'\nComboboxTrigger.displayName = 'ComboboxTrigger'\nComboboxContent.displayName = 'ComboboxContent'\nComboboxOption.displayName = 'ComboboxOption'\n\n// Compound component pattern with proper typing\ninterface ComboboxCompound extends React.ForwardRefExoticComponent<ComboboxProps & React.RefAttributes<HTMLDivElement>> {\n  Trigger: typeof ComboboxTrigger\n  Content: typeof ComboboxContent\n  Option: typeof ComboboxOption\n}\n\nconst ComboboxWithSubComponents = Combobox as ComboboxCompound\nComboboxWithSubComponents.Trigger = ComboboxTrigger\nComboboxWithSubComponents.Content = ComboboxContent\nComboboxWithSubComponents.Option = ComboboxOption\n\nexport { ComboboxWithSubComponents as Combobox }\nexport type { \n  ComboboxProps, \n  ComboboxOption, \n  ComboboxTriggerProps, \n  ComboboxContentProps, \n  ComboboxOptionProps \n}","import React from 'react'\nimport styles from './BarChart.module.css'\nimport { Tooltip } from '../tooltip'\n\n// Define TypeScript interfaces\ninterface BarChartDataPoint {\n  label: string\n  value: number\n  color?: string\n}\n\ninterface BarChartProps {\n  data: BarChartDataPoint[]\n  title?: string\n  subtitle?: string\n  height?: number\n  showValues?: boolean\n  showGrid?: boolean\n  animated?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'minimal' | 'brutal'\n  showContainer?: boolean\n  borderStyle?: 'solid' | 'dashed' | 'dotted' | 'double'\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst BarChart = React.forwardRef<HTMLDivElement, BarChartProps>(\n  ({ \n    data,\n    title,\n    subtitle,\n    height = 300,\n    showValues = true,\n    showGrid = true,\n    animated = true,\n    size = 'md',\n    variant = 'default',\n    showContainer = false,\n    borderStyle = 'solid',\n    className,\n    style,\n    ...props \n  }, ref) => {\n    \n    if (!data || data.length === 0) {\n      return (\n        <div \n          ref={ref} \n          className={`${styles.barChart} ${styles.empty} ${className || ''}`}\n          data-size={size}\n          data-variant={variant}\n          style={style}\n          {...props}\n        >\n          <div className={styles.emptyState}>\n            <span className={styles.emptyText}>NO DATA AVAILABLE</span>\n          </div>\n        </div>\n      )\n    }\n\n    const maxValue = Math.max(...data.map(d => d.value))\n    \n    // Calculate dynamic heights based on size\n    const sizeConfig = {\n      sm: { headerHeight: 50, footerHeight: 40, padding: 12 },\n      md: { headerHeight: 70, footerHeight: 50, padding: 16 },\n      lg: { headerHeight: 90, footerHeight: 60, padding: 24 }\n    }\n    \n    const config = sizeConfig[size]\n    const headerHeight = (title || subtitle) ? config.headerHeight : 0\n    const actualChartHeight = height - headerHeight - config.footerHeight\n\n    // Default colors using CSS custom properties for theme support\n    const defaultColors = [\n      'var(--brutal-accent)',\n      'var(--brutal-blue)',\n      'var(--brutal-green)', \n      'var(--brutal-yellow)', \n      'var(--brutal-red)',\n      'var(--brutal-orange)',\n      'var(--brutal-purple)'\n    ]\n\n    return (\n      <div \n        ref={ref} \n        className={`${styles.barChart} ${className || ''}`}\n        data-size={size}\n        data-variant={variant}\n        data-animated={animated}\n        data-show-grid={showGrid}\n        data-show-container={showContainer}\n        style={style}\n        {...props}\n      >\n        {/* Chart Header */}\n        {(title || subtitle) && (\n          <div className={styles.header}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n          </div>\n        )}\n\n        {/* Chart Container */}\n        <div \n          className={styles.chartContainer}\n          style={{ \n            height: `${actualChartHeight}px`,\n            minHeight: `${actualChartHeight}px`,\n            maxHeight: `${actualChartHeight}px`,\n            ...(showContainer ? { '--brutal-border-style': borderStyle } : {})\n          } as React.CSSProperties}\n        >\n          {/* Y-axis grid and labels */}\n          {showGrid && (\n            <div className={styles.yAxis}>\n              <div className={styles.yAxisLabels}>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.75)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.5)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.25)}</span>\n                <span className={styles.yAxisLabel}>0</span>\n              </div>\n              <div className={styles.gridLines}>\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n              </div>\n            </div>\n          )}\n\n          {/* Bars Container */}\n          <div className={styles.barsContainer}>\n            {data.map((item, index) => {\n              // Calculate bar height to match Y-axis scale exactly\n              const barHeight = Math.max(8, (item.value / maxValue) * actualChartHeight)\n              const color = item.color || defaultColors[index % defaultColors.length]\n              \n              return (\n                <div\n                  key={`${item.label}-${index}`}\n                  className={styles.barWrapper}\n                  style={{ \n                    animationDelay: animated ? `${index * 100}ms` : undefined \n                  }}\n                >\n                  {/* Value label positioned absolutely above bar */}\n                  {showValues && (\n                    <div \n                      className={styles.barValue}\n                      style={{\n                        position: 'absolute',\n                        bottom: `${barHeight + 5}px`,\n                        left: '50%',\n                        transform: 'translateX(-50%)',\n                        zIndex: 3\n                      }}\n                    >\n                      {item.value}\n                    </div>\n                  )}\n                  \n                  {/* Spacer to push bar to bottom */}\n                  <div style={{ flex: 1 }} />\n                  \n                  {/* Bar at bottom */}\n                  <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                    <Tooltip content={`${item.label}: ${item.value}`}>\n                      <div\n                        className={styles.bar}\n                        style={{\n                          height: `${barHeight}px`,\n                          backgroundColor: color,\n                          animationDelay: animated ? `${index * 150}ms` : undefined\n                        }}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* Chart Footer with X-axis labels and data count */}\n        <div className={styles.footer}>\n          <div className={styles.xAxisLabels}>\n            {data.map((item, index) => (\n              <Tooltip key={`label-${index}`} content={item.label}>\n                <div className={styles.xAxisLabel}>\n                  {item.label}\n                </div>\n              </Tooltip>\n            ))}\n          </div>\n          <div className={styles.dataCount}>\n            {data.length} DATA POINTS\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nBarChart.displayName = 'BarChart'\n\nexport { BarChart }\nexport type { BarChartProps, BarChartDataPoint }","import React from 'react'\nimport styles from './LineChart.module.css'\nimport { Tooltip } from '../tooltip'\n\n// Define TypeScript interfaces\ninterface LineChartDataPoint {\n  label: string\n  value: number\n  color?: string\n}\n\ninterface LineChartProps {\n  data: LineChartDataPoint[]\n  title?: string\n  subtitle?: string\n  height?: number\n  showValues?: boolean\n  showGrid?: boolean\n  animated?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'minimal' | 'brutal'\n  showContainer?: boolean\n  borderStyle?: 'solid' | 'dashed' | 'dotted' | 'double'\n  lineColor?: string\n  lineWidth?: number\n  showDots?: boolean\n  smooth?: boolean\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst LineChart = React.forwardRef<HTMLDivElement, LineChartProps>(\n  ({ \n    data,\n    title,\n    subtitle,\n    height = 300,\n    showValues = true,\n    showGrid = true,\n    animated = true,\n    size = 'md',\n    variant = 'default',\n    showContainer = false,\n    borderStyle = 'solid',\n    lineColor = 'var(--brutal-accent)',\n    lineWidth = 3,\n    showDots = true,\n    smooth = false,\n    className,\n    style,\n    ...props \n  }, ref) => {\n    \n    if (!data || data.length === 0) {\n      return (\n        <div \n          ref={ref} \n          className={`${styles.lineChart} ${styles.empty} ${className || ''}`}\n          data-size={size}\n          data-variant={variant}\n          style={style}\n          {...props}\n        >\n          <div className={styles.emptyState}>\n            <span className={styles.emptyText}>NO DATA AVAILABLE</span>\n          </div>\n        </div>\n      )\n    }\n\n    const maxValue = Math.max(...data.map(d => d.value))\n    const minValue = Math.min(...data.map(d => d.value))\n    const valueRange = maxValue - minValue\n    \n    // Calculate dynamic heights based on size\n    const sizeConfig = {\n      sm: { headerHeight: 50, footerHeight: 40, padding: 12 },\n      md: { headerHeight: 70, footerHeight: 50, padding: 16 },\n      lg: { headerHeight: 90, footerHeight: 60, padding: 24 }\n    }\n    \n    const config = sizeConfig[size]\n    const headerHeight = (title || subtitle) ? config.headerHeight : 0\n    const actualChartHeight = height - headerHeight - config.footerHeight\n\n    // Generate SVG path for the line\n    const generatePath = (smooth: boolean) => {\n      if (data.length === 0) return ''\n      \n      const points = data.map((point, index) => {\n        const x = (index / (data.length - 1)) * 100\n        const y = 100 - ((point.value - minValue) / valueRange) * 100\n        return { x, y }\n      })\n\n      if (smooth && data.length > 2) {\n        // Generate smooth curve using cubic bezier\n        let path = `M ${points[0].x} ${points[0].y}`\n        \n        for (let i = 1; i < points.length; i++) {\n          const cp1x = points[i - 1].x + (points[i].x - points[i - 1].x) / 3\n          const cp1y = points[i - 1].y\n          const cp2x = points[i].x - (points[i].x - points[i - 1].x) / 3\n          const cp2y = points[i].y\n          \n          path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${points[i].x} ${points[i].y}`\n        }\n        \n        return path\n      } else {\n        // Generate straight lines\n        return points.map((point, index) => \n          index === 0 ? `M ${point.x} ${point.y}` : `L ${point.x} ${point.y}`\n        ).join(' ')\n      }\n    }\n\n    const pathData = generatePath(smooth)\n\n    return (\n      <div \n        ref={ref} \n        className={`${styles.lineChart} ${className || ''}`}\n        data-size={size}\n        data-variant={variant}\n        data-animated={animated}\n        data-show-grid={showGrid}\n        data-show-container={showContainer}\n        style={style}\n        {...props}\n      >\n        {/* Chart Header */}\n        {(title || subtitle) && (\n          <div className={styles.header}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n          </div>\n        )}\n\n        {/* Chart Container */}\n        <div \n          className={styles.chartContainer}\n          style={{ \n            height: `${actualChartHeight}px`,\n            minHeight: `${actualChartHeight}px`,\n            maxHeight: `${actualChartHeight}px`,\n            ...(showContainer ? { '--brutal-border-style': borderStyle } : {})\n          } as React.CSSProperties}\n        >\n          {/* Y-axis grid and labels */}\n          {showGrid && (\n            <div className={styles.yAxis}>\n              <div className={styles.yAxisLabels}>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.75 + minValue * 0.25)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.5 + minValue * 0.5)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.25 + minValue * 0.75)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(minValue)}</span>\n              </div>\n              <div className={styles.gridLines}>\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n              </div>\n            </div>\n          )}\n\n          {/* Line Chart SVG */}\n          <div className={styles.lineContainer}>\n            <svg \n              className={styles.lineSvg}\n              viewBox=\"0 0 100 100\"\n              preserveAspectRatio=\"none\"\n            >\n              {/* Line path */}\n              <path\n                d={pathData}\n                fill=\"none\"\n                stroke={lineColor}\n                strokeWidth={lineWidth / 10}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className={animated ? styles.animatedLine : ''}\n              />\n              \n              {/* Data points */}\n              {showDots && data.map((point, index) => {\n                const x = (index / (data.length - 1)) * 100\n                const y = 100 - ((point.value - minValue) / valueRange) * 100\n                const dotSize = 4 // Fixed small size\n                \n                return (\n                  <rect\n                    key={`dot-${index}`}\n                    x={x - dotSize/2}\n                    y={y - dotSize/2}\n                    width={dotSize}\n                    height={dotSize}\n                    fill={point.color || lineColor}\n                    stroke=\"none\"\n                    className={animated ? styles.animatedDot : ''}\n                    style={{ animationDelay: animated ? `${index * 100}ms` : undefined }}\n                  />\n                )\n              })}\n            </svg>\n\n            {/* Interactive data point areas for tooltips */}\n            {data.map((point, index) => {\n              const x = (index / (data.length - 1)) * 100\n              const y = 100 - ((point.value - minValue) / valueRange) * 100\n              \n              return (\n                <Tooltip key={`tooltip-${index}`} content={`${point.label}: ${point.value}`}>\n                  <div\n                    className={styles.dataPointHover}\n                    style={{\n                      left: `${x}%`,\n                      top: `${y}%`,\n                      transform: 'translate(-50%, -50%)'\n                    }}\n                  />\n                </Tooltip>\n              )\n            })}\n\n            {/* Value labels */}\n            {showValues && data.map((point, index) => {\n              const x = (index / (data.length - 1)) * 100\n              const y = 100 - ((point.value - minValue) / valueRange) * 100\n              \n              return (\n                <div\n                  key={`value-${index}`}\n                  className={styles.valueLabel}\n                  style={{\n                    left: `${x}%`,\n                    top: `${y}%`,\n                    transform: 'translate(-50%, -150%)',\n                    animationDelay: animated ? `${index * 150}ms` : undefined\n                  }}\n                >\n                  {point.value}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* Chart Footer with X-axis labels and data count */}\n        <div className={styles.footer}>\n          <div className={styles.xAxisLabels}>\n            {data.map((item, index) => (\n              <Tooltip key={`label-${index}`} content={item.label}>\n                <div className={styles.xAxisLabel}>\n                  {item.label}\n                </div>\n              </Tooltip>\n            ))}\n          </div>\n          <div className={styles.dataCount}>\n            {data.length} DATA POINTS\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nLineChart.displayName = 'LineChart'\n\nexport { LineChart }\nexport type { LineChartProps, LineChartDataPoint }","import React from 'react'\nimport styles from './PieChart.module.css'\nimport { Tooltip } from '../tooltip'\n\n// Define TypeScript interfaces\ninterface PieChartDataPoint {\n  label: string\n  value: number\n  color?: string\n}\n\ninterface PieChartProps {\n  data: PieChartDataPoint[]\n  title?: string\n  subtitle?: string\n  size?: number\n  showValues?: boolean\n  showLabels?: boolean\n  animated?: boolean\n  variant?: 'default' | 'minimal' | 'brutal'\n  showContainer?: boolean\n  borderStyle?: 'solid' | 'dashed' | 'dotted' | 'double'\n  strokeWidth?: number\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst PieChart = React.forwardRef<HTMLDivElement, PieChartProps>(\n  ({ \n    data,\n    title,\n    subtitle,\n    size = 300,\n    showValues = true,\n    showLabels = true,\n    animated = true,\n    variant = 'default',\n    showContainer = false,\n    borderStyle = 'solid',\n    strokeWidth = 2,\n    className,\n    style,\n    ...props \n  }, ref) => {\n    \n    if (!data || data.length === 0) {\n      return (\n        <div \n          ref={ref} \n          className={`${styles.pieChart} ${styles.empty} ${className || ''}`}\n          data-variant={variant}\n          style={style}\n          {...props}\n        >\n          <div className={styles.emptyState}>\n            <span className={styles.emptyText}>NO DATA AVAILABLE</span>\n          </div>\n        </div>\n      )\n    }\n\n    const total = data.reduce((sum, item) => sum + item.value, 0)\n    const radius = (size - 40) / 2\n    const centerX = size / 2\n    const centerY = size / 2\n\n    // Generate pie slices\n    let cumulativeAngle = 0\n    const slices = data.map((item, index) => {\n      const percentage = (item.value / total) * 100\n      const angle = (item.value / total) * 360\n      const startAngle = cumulativeAngle\n      const endAngle = cumulativeAngle + angle\n      \n      // Calculate path for slice\n      const startAngleRad = (startAngle - 90) * (Math.PI / 180)\n      const endAngleRad = (endAngle - 90) * (Math.PI / 180)\n      \n      const x1 = centerX + radius * Math.cos(startAngleRad)\n      const y1 = centerY + radius * Math.sin(startAngleRad)\n      const x2 = centerX + radius * Math.cos(endAngleRad)\n      const y2 = centerY + radius * Math.sin(endAngleRad)\n      \n      const largeArcFlag = angle > 180 ? 1 : 0\n      \n      const pathData = [\n        `M ${centerX} ${centerY}`,\n        `L ${x1} ${y1}`,\n        `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n        'Z'\n      ].join(' ')\n\n      // Calculate label position\n      const labelAngle = (startAngle + angle / 2 - 90) * (Math.PI / 180)\n      const labelRadius = radius * 0.7\n      const labelX = centerX + labelRadius * Math.cos(labelAngle)\n      const labelY = centerY + labelRadius * Math.sin(labelAngle)\n\n      cumulativeAngle += angle\n\n      return {\n        path: pathData,\n        color: item.color || `hsl(${(index * 360) / data.length}, 70%, 50%)`,\n        percentage,\n        labelX,\n        labelY,\n        item,\n        angle\n      }\n    })\n\n    const defaultColors = [\n      '#FF0000', '#0066FF', '#00FF41', '#FFFF00', \n      '#FF6600', '#9900FF', '#00FFFF', '#FF0099'\n    ]\n\n    return (\n      <div \n        ref={ref} \n        className={`${styles.pieChart} ${className || ''}`}\n        data-variant={variant}\n        data-animated={animated}\n        data-show-container={showContainer}\n        style={style}\n        {...props}\n      >\n        {/* Chart Header */}\n        {(title || subtitle) && (\n          <div className={styles.header}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n          </div>\n        )}\n\n        {/* Chart Container */}\n        <div \n          className={styles.chartContainer}\n          style={{ \n            ...(showContainer ? { '--brutal-border-style': borderStyle } : {}),\n            width: `${size}px`,\n            height: `${size}px`\n          } as React.CSSProperties}\n        >\n          <svg \n            className={styles.pieSvg}\n            width={size}\n            height={size}\n            viewBox={`0 0 ${size} ${size}`}\n          >\n            {/* Pie slices */}\n            {slices.map((slice, index) => (\n              <g key={`slice-${index}`}>\n                <path\n                  d={slice.path}\n                  fill={slice.item.color || defaultColors[index % defaultColors.length]}\n                  stroke=\"var(--brutal-white)\"\n                  strokeWidth={strokeWidth}\n                  className={animated ? styles.animatedSlice : ''}\n                  style={{ animationDelay: animated ? `${index * 150}ms` : undefined }}\n                />\n                \n                {/* Value labels */}\n                {showValues && slice.percentage > 5 && (\n                  <text\n                    x={slice.labelX}\n                    y={slice.labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"middle\"\n                    className={styles.valueLabel}\n                    style={{ animationDelay: animated ? `${index * 200}ms` : undefined }}\n                  >\n                    {Math.round(slice.percentage)}%\n                  </text>\n                )}\n              </g>\n            ))}\n          </svg>\n\n          {/* Interactive hover areas for tooltips */}\n          {slices.map((slice, index) => (\n            <Tooltip \n              key={`tooltip-${index}`} \n              content={`${slice.item.label}: ${slice.item.value} (${Math.round(slice.percentage)}%)`}\n            >\n              <div\n                className={styles.sliceHover}\n                style={{\n                  position: 'absolute',\n                  left: `${slice.labelX - 20}px`,\n                  top: `${slice.labelY - 20}px`,\n                  width: '40px',\n                  height: '40px',\n                  borderRadius: '50%'\n                }}\n              />\n            </Tooltip>\n          ))}\n        </div>\n\n        {/* Legend */}\n        {showLabels && (\n          <div className={styles.legend}>\n            {data.map((item, index) => (\n              <div key={`legend-${index}`} className={styles.legendItem}>\n                <div \n                  className={styles.legendColor}\n                  style={{ \n                    backgroundColor: item.color || defaultColors[index % defaultColors.length]\n                  }}\n                />\n                <span className={styles.legendLabel}>{item.label}</span>\n                <span className={styles.legendValue}>{item.value}</span>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Data Count */}\n        <div className={styles.dataCount}>\n          {data.length} DATA SEGMENTS â€¢ TOTAL: {total}\n        </div>\n      </div>\n    )\n  }\n)\n\nPieChart.displayName = 'PieChart'\n\nexport { PieChart }\nexport type { PieChartProps, PieChartDataPoint }","import React from 'react'\nimport styles from './AreaChart.module.css'\nimport { Tooltip } from '../tooltip'\n\n// Define TypeScript interfaces\ninterface AreaChartDataPoint {\n  label: string\n  value: number\n  color?: string\n}\n\ninterface AreaChartProps {\n  data: AreaChartDataPoint[]\n  title?: string\n  subtitle?: string\n  height?: number\n  showValues?: boolean\n  showGrid?: boolean\n  animated?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'minimal' | 'brutal'\n  showContainer?: boolean\n  borderStyle?: 'solid' | 'dashed' | 'dotted' | 'double'\n  fillColor?: string\n  lineColor?: string\n  lineWidth?: number\n  showDots?: boolean\n  smooth?: boolean\n  fillOpacity?: number\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst AreaChart = React.forwardRef<HTMLDivElement, AreaChartProps>(\n  ({ \n    data,\n    title,\n    subtitle,\n    height = 300,\n    showValues = true,\n    showGrid = true,\n    animated = true,\n    size = 'md',\n    variant = 'default',\n    showContainer = false,\n    borderStyle = 'solid',\n    fillColor = 'var(--brutal-accent)',\n    lineColor = 'var(--brutal-accent)',\n    lineWidth = 3,\n    showDots = true,\n    smooth = false,\n    fillOpacity = 0.3,\n    className,\n    style,\n    ...props \n  }, ref) => {\n    \n    if (!data || data.length === 0) {\n      return (\n        <div \n          ref={ref} \n          className={`${styles.areaChart} ${styles.empty} ${className || ''}`}\n          data-size={size}\n          data-variant={variant}\n          style={style}\n          {...props}\n        >\n          <div className={styles.emptyState}>\n            <span className={styles.emptyText}>NO DATA AVAILABLE</span>\n          </div>\n        </div>\n      )\n    }\n\n    const maxValue = Math.max(...data.map(d => d.value))\n    const minValue = Math.min(...data.map(d => d.value))\n    const valueRange = maxValue - minValue\n    \n    // Calculate dynamic heights based on size\n    const sizeConfig = {\n      sm: { headerHeight: 50, footerHeight: 40, padding: 12 },\n      md: { headerHeight: 70, footerHeight: 50, padding: 16 },\n      lg: { headerHeight: 90, footerHeight: 60, padding: 24 }\n    }\n    \n    const config = sizeConfig[size]\n    const headerHeight = (title || subtitle) ? config.headerHeight : 0\n    const actualChartHeight = height - headerHeight - config.footerHeight\n\n    // Generate SVG path for the area\n    const generateAreaPath = (smooth: boolean) => {\n      if (data.length === 0) return ''\n      \n      const points = data.map((point, index) => {\n        const x = (index / (data.length - 1)) * 100\n        const y = 100 - ((point.value - minValue) / valueRange) * 100\n        return { x, y }\n      })\n\n      let linePath = ''\n      \n      if (smooth && data.length > 2) {\n        // Generate smooth curve using cubic bezier\n        linePath = `M ${points[0].x} ${points[0].y}`\n        \n        for (let i = 1; i < points.length; i++) {\n          const cp1x = points[i - 1].x + (points[i].x - points[i - 1].x) / 3\n          const cp1y = points[i - 1].y\n          const cp2x = points[i].x - (points[i].x - points[i - 1].x) / 3\n          const cp2y = points[i].y\n          \n          linePath += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${points[i].x} ${points[i].y}`\n        }\n      } else {\n        // Generate straight lines\n        linePath = points.map((point, index) => \n          index === 0 ? `M ${point.x} ${point.y}` : `L ${point.x} ${point.y}`\n        ).join(' ')\n      }\n\n      // Close the area path by connecting to bottom\n      const areaPath = linePath + \n        ` L ${points[points.length - 1].x} 100` + \n        ` L ${points[0].x} 100 Z`\n\n      return { linePath, areaPath }\n    }\n\n    const { linePath, areaPath } = generateAreaPath(smooth)\n\n    return (\n      <div \n        ref={ref} \n        className={`${styles.areaChart} ${className || ''}`}\n        data-size={size}\n        data-variant={variant}\n        data-animated={animated}\n        data-show-grid={showGrid}\n        data-show-container={showContainer}\n        style={style}\n        {...props}\n      >\n        {/* Chart Header */}\n        {(title || subtitle) && (\n          <div className={styles.header}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n          </div>\n        )}\n\n        {/* Chart Container */}\n        <div \n          className={styles.chartContainer}\n          style={{ \n            height: `${actualChartHeight}px`,\n            minHeight: `${actualChartHeight}px`,\n            maxHeight: `${actualChartHeight}px`,\n            ...(showContainer ? { '--brutal-border-style': borderStyle } : {})\n          } as React.CSSProperties}\n        >\n          {/* Y-axis grid and labels */}\n          {showGrid && (\n            <div className={styles.yAxis}>\n              <div className={styles.yAxisLabels}>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.75 + minValue * 0.25)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.5 + minValue * 0.5)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.25 + minValue * 0.75)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(minValue)}</span>\n              </div>\n              <div className={styles.gridLines}>\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n              </div>\n            </div>\n          )}\n\n          {/* Area Chart SVG */}\n          <div className={styles.areaContainer}>\n            <svg \n              className={styles.areaSvg}\n              viewBox=\"0 0 100 100\"\n              preserveAspectRatio=\"none\"\n            >\n              {/* Area fill */}\n              <path\n                d={areaPath}\n                fill={fillColor}\n                fillOpacity={fillOpacity}\n                className={animated ? styles.animatedArea : ''}\n              />\n              \n              {/* Line path */}\n              <path\n                d={linePath}\n                fill=\"none\"\n                stroke={lineColor}\n                strokeWidth={lineWidth / 10}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className={animated ? styles.animatedLine : ''}\n              />\n              \n              {/* Data points */}\n              {showDots && data.map((point, index) => {\n                const x = (index / (data.length - 1)) * 100\n                const y = 100 - ((point.value - minValue) / valueRange) * 100\n                const dotSize = 4 // Fixed small size\n                \n                return (\n                  <rect\n                    key={`dot-${index}`}\n                    x={x - dotSize/2}\n                    y={y - dotSize/2}\n                    width={dotSize}\n                    height={dotSize}\n                    fill={point.color || lineColor}\n                    stroke=\"none\"\n                    className={animated ? styles.animatedDot : ''}\n                    style={{ animationDelay: animated ? `${index * 100}ms` : undefined }}\n                  />\n                )\n              })}\n            </svg>\n\n            {/* Interactive data point areas for tooltips */}\n            {data.map((point, index) => {\n              const x = (index / (data.length - 1)) * 100\n              const y = 100 - ((point.value - minValue) / valueRange) * 100\n              \n              return (\n                <Tooltip key={`tooltip-${index}`} content={`${point.label}: ${point.value}`}>\n                  <div\n                    className={styles.dataPointHover}\n                    style={{\n                      left: `${x}%`,\n                      top: `${y}%`,\n                      transform: 'translate(-50%, -50%)'\n                    }}\n                  />\n                </Tooltip>\n              )\n            })}\n\n            {/* Value labels */}\n            {showValues && data.map((point, index) => {\n              const x = (index / (data.length - 1)) * 100\n              const y = 100 - ((point.value - minValue) / valueRange) * 100\n              \n              return (\n                <div\n                  key={`value-${index}`}\n                  className={styles.valueLabel}\n                  style={{\n                    left: `${x}%`,\n                    top: `${y}%`,\n                    transform: 'translate(-50%, -150%)',\n                    animationDelay: animated ? `${index * 150}ms` : undefined\n                  }}\n                >\n                  {point.value}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* Chart Footer with X-axis labels and data count */}\n        <div className={styles.footer}>\n          <div className={styles.xAxisLabels}>\n            {data.map((item, index) => (\n              <Tooltip key={`label-${index}`} content={item.label}>\n                <div className={styles.xAxisLabel}>\n                  {item.label}\n                </div>\n              </Tooltip>\n            ))}\n          </div>\n          <div className={styles.dataCount}>\n            {data.length} DATA POINTS\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nAreaChart.displayName = 'AreaChart'\n\nexport { AreaChart }\nexport type { AreaChartProps, AreaChartDataPoint }","import React, { forwardRef } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './AspectRatio.module.css'\n\nexport interface AspectRatioProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** The aspect ratio to maintain (e.g., 16/9, 4/3, 1/1) */\n  ratio?: number\n  /** Content to display within the aspect ratio container */\n  children: React.ReactNode\n  /** Additional CSS classes */\n  className?: string\n  /** Whether to apply object-fit to child images/videos */\n  objectFit?: 'contain' | 'cover' | 'fill' | 'none' | 'scale-down'\n  /** Background color when content doesn't fill the container */\n  backgroundColor?: string\n}\n\n/**\n * AspectRatio component maintains a specific width-to-height ratio for its content.\n * Useful for responsive images, videos, embeds, and any content that needs consistent dimensions.\n */\nexport const AspectRatio = forwardRef<HTMLDivElement, AspectRatioProps>(\n  ({ \n    ratio = 16/9, \n    children, \n    className,\n    objectFit = 'cover',\n    backgroundColor,\n    style,\n    ...props \n  }, ref) => {\n    const paddingBottom = `${(1 / ratio) * 100}%`\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.container, className)}\n        style={{\n          ...style,\n          backgroundColor\n        }}\n        data-object-fit={objectFit}\n        {...props}\n      >\n        <div \n          className={styles.sizer} \n          style={{ paddingBottom }}\n        />\n        <div className={styles.content}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n)\n\nAspectRatio.displayName = 'AspectRatio'","import React, { forwardRef, useMemo } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Pagination.module.css'\n\nexport interface PaginationProps extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'> {\n  /** Current active page number (1-indexed) */\n  currentPage: number\n  /** Total number of pages */\n  totalPages: number\n  /** Number of sibling pages to show on each side of current page */\n  siblingCount?: number\n  /** Number of boundary pages to show at start and end */\n  boundaryCount?: number\n  /** Callback when page changes */\n  onChange?: (page: number) => void\n  /** Show previous/next buttons */\n  showPrevNext?: boolean\n  /** Show first/last buttons */\n  showFirstLast?: boolean\n  /** Custom labels for navigation buttons */\n  labels?: {\n    previous?: string\n    next?: string\n    first?: string\n    last?: string\n  }\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Additional CSS classes */\n  className?: string\n  /** Disabled state */\n  disabled?: boolean\n}\n\nconst DOTS = '...'\n\n// Helper function to generate pagination range\nfunction usePaginationRange(\n  currentPage: number,\n  totalPages: number,\n  siblingCount: number,\n  boundaryCount: number\n): (number | string)[] {\n  return useMemo(() => {\n    const totalPageNumbers = siblingCount * 2 + 5 + boundaryCount * 2\n\n    // If the number of pages is less than the page numbers we want to show\n    if (totalPageNumbers >= totalPages) {\n      return Array.from({ length: totalPages }, (_, i) => i + 1)\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPages)\n\n    const shouldShowLeftDots = leftSiblingIndex > boundaryCount + 2\n    const shouldShowRightDots = rightSiblingIndex < totalPages - boundaryCount - 1\n\n    const firstPages = Array.from({ length: boundaryCount }, (_, i) => i + 1)\n    const lastPages = Array.from({ length: boundaryCount }, (_, i) => totalPages - boundaryCount + i + 1)\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = 3 + 2 * siblingCount\n      const leftRange = Array.from({ length: leftItemCount }, (_, i) => i + 1)\n      return [...leftRange, DOTS, ...lastPages]\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = 3 + 2 * siblingCount\n      const rightRange = Array.from(\n        { length: rightItemCount },\n        (_, i) => totalPages - rightItemCount + i + 1\n      )\n      return [...firstPages, DOTS, ...rightRange]\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      const middleRange = Array.from(\n        { length: rightSiblingIndex - leftSiblingIndex + 1 },\n        (_, i) => leftSiblingIndex + i\n      )\n      return [...firstPages, DOTS, ...middleRange, DOTS, ...lastPages]\n    }\n\n    return []\n  }, [currentPage, totalPages, siblingCount, boundaryCount])\n}\n\n/**\n * Pagination component for navigating through pages of content.\n * Features a brutalist design with bold styling and clear visual feedback.\n */\nexport const Pagination = forwardRef<HTMLElement, PaginationProps>(\n  (\n    {\n      currentPage,\n      totalPages,\n      siblingCount = 1,\n      boundaryCount = 1,\n      onChange,\n      showPrevNext = true,\n      showFirstLast = false,\n      labels = {\n        previous: 'Previous',\n        next: 'Next',\n        first: 'First',\n        last: 'Last'\n      },\n      size = 'md',\n      className,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    const paginationRange = usePaginationRange(currentPage, totalPages, siblingCount, boundaryCount)\n\n    const handleClick = (page: number) => {\n      if (!disabled && onChange && page !== currentPage && page >= 1 && page <= totalPages) {\n        onChange(page)\n      }\n    }\n\n    if (totalPages <= 1) {\n      return null\n    }\n\n    return (\n      <nav\n        ref={ref}\n        className={clsx(\n          styles.pagination,\n          styles[size],\n          disabled && styles.disabled,\n          className\n        )}\n        aria-label=\"Pagination Navigation\"\n        {...props}\n      >\n        <ul className={styles.list}>\n          {/* First button */}\n          {showFirstLast && (\n            <li>\n              <button\n                className={clsx(styles.item, styles.nav)}\n                onClick={() => handleClick(1)}\n                disabled={disabled || currentPage === 1}\n                aria-label={labels.first}\n                type=\"button\"\n              >\n                <span className={styles.navIcon}>Â«</span>\n                <span className={styles.navText}>{labels.first}</span>\n              </button>\n            </li>\n          )}\n\n          {/* Previous button */}\n          {showPrevNext && (\n            <li>\n              <button\n                className={clsx(styles.item, styles.nav)}\n                onClick={() => handleClick(currentPage - 1)}\n                disabled={disabled || currentPage === 1}\n                aria-label={labels.previous}\n                type=\"button\"\n              >\n                <span className={styles.navIcon}>â€¹</span>\n                <span className={styles.navText}>{labels.previous}</span>\n              </button>\n            </li>\n          )}\n\n          {/* Page numbers */}\n          {paginationRange.map((pageNumber, index) => {\n            if (pageNumber === DOTS) {\n              return (\n                <li key={`dots-${index}`}>\n                  <span className={clsx(styles.item, styles.dots)}>...</span>\n                </li>\n              )\n            }\n\n            return (\n              <li key={pageNumber}>\n                <button\n                  className={clsx(\n                    styles.item,\n                    styles.page,\n                    pageNumber === currentPage && styles.active\n                  )}\n                  onClick={() => handleClick(pageNumber as number)}\n                  disabled={disabled}\n                  aria-label={`Go to page ${pageNumber}`}\n                  aria-current={pageNumber === currentPage ? 'page' : undefined}\n                  type=\"button\"\n                >\n                  {pageNumber}\n                </button>\n              </li>\n            )\n          })}\n\n          {/* Next button */}\n          {showPrevNext && (\n            <li>\n              <button\n                className={clsx(styles.item, styles.nav)}\n                onClick={() => handleClick(currentPage + 1)}\n                disabled={disabled || currentPage === totalPages}\n                aria-label={labels.next}\n                type=\"button\"\n              >\n                <span className={styles.navText}>{labels.next}</span>\n                <span className={styles.navIcon}>â€º</span>\n              </button>\n            </li>\n          )}\n\n          {/* Last button */}\n          {showFirstLast && (\n            <li>\n              <button\n                className={clsx(styles.item, styles.nav)}\n                onClick={() => handleClick(totalPages)}\n                disabled={disabled || currentPage === totalPages}\n                aria-label={labels.last}\n                type=\"button\"\n              >\n                <span className={styles.navText}>{labels.last}</span>\n                <span className={styles.navIcon}>Â»</span>\n              </button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    )\n  }\n)\n\nPagination.displayName = 'Pagination'","import React, { createContext, useContext, useState, useRef, useEffect, useCallback, forwardRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport clsx from 'clsx'\nimport styles from './ContextMenu.module.css'\n\n// Context for managing context menu state\ninterface ContextMenuContextValue {\n  isOpen: boolean\n  position: { x: number; y: number } | null\n  onOpen: (e: React.MouseEvent) => void\n  onClose: () => void\n  onKeepOpen?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'dark'\n}\n\nconst ContextMenuContext = createContext<ContextMenuContextValue | undefined>(undefined)\n\nfunction useContextMenu() {\n  const context = useContext(ContextMenuContext)\n  if (!context) {\n    throw new Error('ContextMenu components must be used within ContextMenu')\n  }\n  return context\n}\n\n// Main ContextMenu component\nexport interface ContextMenuProps {\n  children: React.ReactNode\n  className?: string\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'dark'\n  onOpenChange?: (open: boolean) => void\n}\n\nconst ContextMenu = forwardRef<HTMLDivElement, ContextMenuProps>(\n  ({ children, className, size = 'md', variant = 'default', onOpenChange }, ref) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [position, setPosition] = useState<{ x: number; y: number } | null>(null)\n\n    const onOpen = useCallback((e: React.MouseEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      \n      setPosition({ x: e.clientX, y: e.clientY })\n      setIsOpen(true)\n      onOpenChange?.(true)\n      \n      // Lock body scroll\n      document.body.style.overflow = 'hidden'\n      document.body.style.userSelect = 'none'\n    }, [onOpenChange])\n\n    const onClose = useCallback(() => {\n      setIsOpen(false)\n      setPosition(null)\n      onOpenChange?.(false)\n      \n      // Restore body scroll\n      document.body.style.overflow = ''\n      document.body.style.userSelect = ''\n    }, [onOpenChange])\n\n    // Close on escape key\n    useEffect(() => {\n      const handleKeyDown = (e: KeyboardEvent) => {\n        if (e.key === 'Escape' && isOpen) {\n          onClose()\n        }\n      }\n\n      if (isOpen) {\n        document.addEventListener('keydown', handleKeyDown)\n        return () => document.removeEventListener('keydown', handleKeyDown)\n      }\n    }, [isOpen, onClose])\n    \n    // Cleanup on unmount\n    useEffect(() => {\n      return () => {\n        if (isOpen) {\n          document.body.style.overflow = ''\n          document.body.style.userSelect = ''\n        }\n      }\n    }, [isOpen])\n\n    const contextValue: ContextMenuContextValue = {\n      isOpen,\n      position,\n      onOpen,\n      onClose,\n      size,\n      variant\n    }\n\n    return (\n      <ContextMenuContext.Provider value={contextValue}>\n        <div ref={ref} className={clsx(styles.root, className)}>\n          {children}\n        </div>\n      </ContextMenuContext.Provider>\n    )\n  }\n)\n\n// Trigger component\nexport interface ContextMenuTriggerProps {\n  children: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst ContextMenuTrigger = forwardRef<HTMLDivElement, ContextMenuTriggerProps>(\n  ({ children, className, asChild = false }, ref) => {\n    const { onOpen } = useContextMenu()\n\n    if (asChild && React.isValidElement(children)) {\n      return React.cloneElement(children as React.ReactElement<{ onContextMenu?: (e: React.MouseEvent) => void }>, {\n        onContextMenu: onOpen,\n        ref\n      })\n    }\n\n    return (\n      <div \n        ref={ref}\n        className={clsx(styles.trigger, className)}\n        onContextMenu={onOpen}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Content component with portal\nexport interface ContextMenuContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n  className?: string\n  align?: 'start' | 'center' | 'end'\n  sideOffset?: number\n  alignOffset?: number\n  collisionPadding?: number\n  avoidCollisions?: boolean\n  container?: HTMLElement | null\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'dark'\n}\n\nconst ContextMenuContent = forwardRef<HTMLDivElement, ContextMenuContentProps>(\n  ({ \n    children, \n    className, \n    align = 'start',\n    sideOffset = 5,\n    alignOffset = 0,\n    collisionPadding = 8,\n    avoidCollisions = true,\n    container,\n    size: sizeProp,\n    variant: variantProp,\n    ...rest\n  }, ref) => {\n    const { isOpen, position, onClose, size: contextSize, variant: contextVariant } = useContextMenu()\n    const size = sizeProp || contextSize\n    const variant = variantProp || contextVariant\n    const contentRef = useRef<HTMLDivElement>(null)\n\n    // No need for click-outside detection since we have backdrop\n\n    // Calculate position with collision detection\n    const [adjustedPosition, setAdjustedPosition] = useState(position)\n\n    useEffect(() => {\n      if (!position || !contentRef.current || !avoidCollisions) {\n        setAdjustedPosition(position)\n        return\n      }\n\n      const rect = contentRef.current.getBoundingClientRect()\n      const viewportWidth = window.innerWidth\n      const viewportHeight = window.innerHeight\n\n      let x = position.x + sideOffset\n      let y = position.y + sideOffset\n\n      // Adjust horizontal position\n      if (x + rect.width > viewportWidth - collisionPadding) {\n        x = position.x - rect.width - sideOffset\n      }\n      if (x < collisionPadding) {\n        x = collisionPadding\n      }\n\n      // Adjust vertical position\n      if (y + rect.height > viewportHeight - collisionPadding) {\n        y = position.y - rect.height - sideOffset\n      }\n      if (y < collisionPadding) {\n        y = collisionPadding\n      }\n\n      // Apply alignment offset\n      switch (align) {\n        case 'center':\n          x = position.x - rect.width / 2\n          break\n        case 'end':\n          x = position.x - rect.width\n          break\n      }\n\n      x += alignOffset\n\n      setAdjustedPosition({ x, y })\n    }, [position, align, alignOffset, sideOffset, collisionPadding, avoidCollisions])\n\n    if (!isOpen || !adjustedPosition) return null\n\n    const content = (\n      <>\n        {/* Backdrop to capture clicks and prevent interaction */}\n        <div \n          className={styles.backdrop}\n          onClick={onClose}\n          onContextMenu={(e) => e.preventDefault()}\n          style={{\n            position: 'fixed',\n            inset: 0,\n            zIndex: 9998,\n            cursor: 'default',\n            pointerEvents: 'auto'\n          }}\n        />\n        <div\n          ref={(node) => {\n            contentRef.current = node\n            if (typeof ref === 'function') ref(node)\n            else if (ref) ref.current = node\n          }}\n          className={clsx(\n            styles.content,\n            className\n          )}\n          data-size={size}\n          data-variant={variant}\n          style={{\n            position: 'fixed',\n            left: `${adjustedPosition.x}px`,\n            top: `${adjustedPosition.y}px`,\n            zIndex: 9999,\n            ...rest.style\n          }}\n          role=\"menu\"\n          aria-orientation=\"vertical\"\n          onMouseEnter={rest.onMouseEnter}\n          onMouseLeave={rest.onMouseLeave}\n        >\n          {children}\n        </div>\n      </>\n    )\n\n    return createPortal(content, container || document.body)\n  }\n)\n\n// Item component\nexport interface ContextMenuItemProps {\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n  destructive?: boolean\n  onSelect?: (e: React.MouseEvent) => void\n  closeOnSelect?: boolean\n  icon?: React.ReactNode\n  shortcut?: string\n  checked?: boolean\n  dotted?: boolean\n}\n\nconst ContextMenuItem = forwardRef<HTMLDivElement, ContextMenuItemProps>(\n  ({ children, className, disabled = false, destructive = false, onSelect, closeOnSelect = true, icon, shortcut, checked, dotted }, ref) => {\n    const { onClose } = useContextMenu()\n    const [isHighlighted, setIsHighlighted] = useState(false)\n\n    const handleClick = (e: React.MouseEvent) => {\n      console.log('Context menu item clicked', { disabled, children })\n      if (disabled) {\n        e.preventDefault()\n        return\n      }\n      \n      e.stopPropagation() // Prevent backdrop from closing\n      onSelect?.(e)\n      \n      if (closeOnSelect && !e.defaultPrevented) {\n        onClose()\n      }\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (disabled) return\n      \n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        handleClick(e as unknown as React.MouseEvent)\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.item,\n          disabled && styles.itemDisabled,\n          destructive && styles.itemDestructive,\n          className\n        )}\n        role=\"menuitem\"\n        tabIndex={disabled ? -1 : 0}\n        aria-disabled={disabled}\n        aria-checked={checked}\n        data-highlighted={isHighlighted}\n        data-disabled={disabled}\n        data-destructive={destructive}\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        onMouseEnter={() => setIsHighlighted(true)}\n        onMouseLeave={() => setIsHighlighted(false)}\n      >\n        {(checked || dotted) && (\n          <span className={styles.indicator}>\n            {checked ? 'âœ“' : 'â€¢'}\n          </span>\n        )}\n        {icon && <span className={styles.icon}>{icon}</span>}\n        <span className={styles.itemText}>{children}</span>\n        {shortcut && <span className={styles.shortcut}>{shortcut}</span>}\n      </div>\n    )\n  }\n)\n\n// Separator component\nexport interface ContextMenuSeparatorProps {\n  className?: string\n}\n\nconst ContextMenuSeparator = forwardRef<HTMLDivElement, ContextMenuSeparatorProps>(\n  ({ className }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.separator, className)}\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n      />\n    )\n  }\n)\n\n// Label component\nexport interface ContextMenuLabelProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst ContextMenuLabel = forwardRef<HTMLDivElement, ContextMenuLabelProps>(\n  ({ children, className }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.label, className)}\n        role=\"presentation\"\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Sub menu components\nexport interface ContextMenuSubProps {\n  children: React.ReactNode\n  className?: string\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}\n\nconst ContextMenuSub = forwardRef<HTMLDivElement, ContextMenuSubProps>(\n  ({ children, className, open: controlledOpen, onOpenChange }, ref) => {\n    const parentContext = useContextMenu()\n    const [internalOpen, setInternalOpen] = useState(false)\n    const [position, setPosition] = useState<{ x: number; y: number } | null>(null)\n    const isOpen = controlledOpen !== undefined ? controlledOpen : internalOpen\n    const hoverTimeoutRef = useRef<NodeJS.Timeout>()\n    const closeTimeoutRef = useRef<NodeJS.Timeout>()\n\n    const handleOpenChange = (newOpen: boolean) => {\n      if (controlledOpen === undefined) {\n        setInternalOpen(newOpen)\n      }\n      onOpenChange?.(newOpen)\n    }\n\n    const handleOpen = (e: React.MouseEvent) => {\n      clearTimeout(closeTimeoutRef.current)\n      const element = e.currentTarget as HTMLElement\n      hoverTimeoutRef.current = setTimeout(() => {\n        const rect = element.getBoundingClientRect()\n        setPosition({ x: rect.right - 4, y: rect.top - 4 })\n        handleOpenChange(true)\n      }, 100)\n    }\n\n    const handleKeepOpen = () => {\n      // Just clear the close timeout without repositioning\n      clearTimeout(closeTimeoutRef.current)\n    }\n\n    const handleClose = () => {\n      clearTimeout(hoverTimeoutRef.current)\n      closeTimeoutRef.current = setTimeout(() => {\n        handleOpenChange(false)\n      }, 300)\n    }\n\n    useEffect(() => {\n      return () => {\n        clearTimeout(hoverTimeoutRef.current)\n        clearTimeout(closeTimeoutRef.current)\n      }\n    }, [])\n\n    return (\n      <ContextMenuContext.Provider value={{\n        isOpen,\n        position,\n        onOpen: handleOpen,\n        onClose: handleClose,\n        onKeepOpen: handleKeepOpen,\n        size: parentContext.size,\n        variant: parentContext.variant\n      }}>\n        <div \n          ref={ref} \n          className={className}\n          onMouseEnter={() => {\n            clearTimeout(closeTimeoutRef.current)\n            clearTimeout(hoverTimeoutRef.current)\n          }}\n          onMouseLeave={() => handleClose()}\n        >\n          {children}\n        </div>\n      </ContextMenuContext.Provider>\n    )\n  }\n)\n\nexport interface ContextMenuSubTriggerProps {\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n  icon?: React.ReactNode\n}\n\nconst ContextMenuSubTrigger = forwardRef<HTMLDivElement, ContextMenuSubTriggerProps>(\n  ({ children, className, disabled = false, icon }, ref) => {\n    const { onOpen, onClose, isOpen } = useContextMenu()\n    const [isHighlighted, setIsHighlighted] = useState(false)\n\n    const handleMouseEnter = (e: React.MouseEvent) => {\n      setIsHighlighted(true)\n      if (!disabled) {\n        onOpen(e)\n      }\n    }\n\n    const handleMouseLeave = () => {\n      setIsHighlighted(false)\n      // Don't close immediately - let the Sub component handle the timing\n      onClose()\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.subTrigger,\n          disabled && styles.itemDisabled,\n          isOpen && styles.subTriggerOpen,\n          className\n        )}\n        role=\"menuitem\"\n        aria-haspopup=\"menu\"\n        aria-expanded={isOpen}\n        aria-disabled={disabled}\n        data-highlighted={isHighlighted}\n        data-disabled={disabled}\n        data-state={isOpen ? 'open' : 'closed'}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {icon && <span className={styles.icon}>{icon}</span>}\n        <span className={styles.itemText}>{children}</span>\n        <span className={styles.subTriggerIcon} aria-hidden=\"true\">â–¶</span>\n      </div>\n    )\n  }\n)\n\nexport interface ContextMenuSubContentProps extends Omit<ContextMenuContentProps, 'container'> {\n  onMouseEnter?: () => void\n  onMouseLeave?: () => void\n}\n\nconst ContextMenuSubContent = forwardRef<HTMLDivElement, ContextMenuSubContentProps>(\n  ({ className, onMouseEnter, onMouseLeave, ...props }, ref) => {\n    const context = useContextMenu()\n    const elementRef = useRef<HTMLDivElement>(null)\n    \n    const handleMouseEnter = () => {\n      // When hovering over sub-content, keep it open by calling onKeepOpen \n      // which will clear any pending close timeout without repositioning\n      context.onKeepOpen?.()\n      onMouseEnter?.()\n    }\n\n    const handleMouseLeave = () => {\n      // Start the close timer when leaving the sub-content\n      onMouseLeave?.()\n      context.onClose()\n    }\n\n    // Sub content uses the position from the parent context\n    return (\n      <ContextMenuContent \n        {...props} \n        ref={(node) => {\n          elementRef.current = node\n          if (typeof ref === 'function') ref(node)\n          else if (ref) ref.current = node\n        }}\n        className={clsx(styles.subContent, className)}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      />\n    )\n  }\n)\n\n// Set display names\nContextMenu.displayName = 'ContextMenu'\nContextMenuTrigger.displayName = 'ContextMenu.Trigger'\nContextMenuContent.displayName = 'ContextMenu.Content'\nContextMenuItem.displayName = 'ContextMenu.Item'\nContextMenuSeparator.displayName = 'ContextMenu.Separator'\nContextMenuLabel.displayName = 'ContextMenu.Label'\nContextMenuSub.displayName = 'ContextMenu.Sub'\nContextMenuSubTrigger.displayName = 'ContextMenu.SubTrigger'\nContextMenuSubContent.displayName = 'ContextMenu.SubContent'\n\n// Compound component pattern\nexport const ContextMenuNamespace = Object.assign(ContextMenu, {\n  Trigger: ContextMenuTrigger,\n  Content: ContextMenuContent,\n  Item: ContextMenuItem,\n  Separator: ContextMenuSeparator,\n  Label: ContextMenuLabel,\n  Sub: ContextMenuSub,\n  SubTrigger: ContextMenuSubTrigger,\n  SubContent: ContextMenuSubContent\n})\n\nexport { ContextMenuNamespace as ContextMenu }","import React, { createContext, useContext, useState, useEffect, useCallback, useRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport clsx from 'clsx'\nimport styles from './Sheet.module.css'\n\ninterface SheetProps {\n  open?: boolean\n  defaultOpen?: boolean\n  onOpenChange?: (open: boolean) => void\n  children?: React.ReactNode\n  className?: string\n}\n\ninterface SheetContextValue {\n  open: boolean\n  setOpen: (open: boolean) => void\n}\n\nconst SheetContext = createContext<SheetContextValue | null>(null)\n\nconst useSheet = () => {\n  const context = useContext(SheetContext)\n  if (!context) {\n    throw new Error('Sheet components must be used within a Sheet')\n  }\n  return context\n}\n\nconst Sheet = React.forwardRef<HTMLDivElement, SheetProps>(\n  ({ \n    open, \n    defaultOpen = false, \n    onOpenChange, \n    className, \n    children, \n    ...props \n  }, ref) => {\n    const [isOpen, setIsOpen] = useState(open ?? defaultOpen)\n\n    // Handle controlled state\n    useEffect(() => {\n      if (open !== undefined) {\n        setIsOpen(open)\n      }\n    }, [open])\n\n    const handleOpenChange = useCallback((newOpen: boolean) => {\n      setIsOpen(newOpen)\n      onOpenChange?.(newOpen)\n    }, [onOpenChange])\n\n    const contextValue: SheetContextValue = {\n      open: isOpen,\n      setOpen: handleOpenChange\n    }\n\n    return (\n      <SheetContext.Provider value={contextValue}>\n        <div ref={ref} className={className} {...props}>\n          {children}\n        </div>\n      </SheetContext.Provider>\n    )\n  }\n)\n\ninterface SheetTriggerProps {\n  children: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst SheetTrigger = React.forwardRef<HTMLButtonElement, SheetTriggerProps>(\n  ({ children, className, asChild = false, ...props }, ref) => {\n    const { setOpen } = useSheet()\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, {\n        onClick: () => setOpen(true),\n        ...props\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.trigger, className)}\n        onClick={() => setOpen(true)}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\n\ninterface SheetContentProps {\n  children: React.ReactNode\n  className?: string\n  side?: 'top' | 'bottom' | 'left' | 'right'\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  variant?: 'default' | 'brutal' | 'outline'\n  showOverlay?: boolean\n  closeOnOverlayClick?: boolean\n  closeOnEscape?: boolean\n  container?: HTMLElement | null\n  onEscapeKeyDown?: (event: KeyboardEvent) => void\n  onPointerDownOutside?: (event: PointerEvent) => void\n  onInteractOutside?: (event: Event) => void\n  onOpenAutoFocus?: (event: Event) => void\n  onCloseAutoFocus?: (event: Event) => void\n}\n\nconst SheetContent = React.forwardRef<HTMLDivElement, SheetContentProps>(\n  ({ \n    children, \n    className,\n    side = 'right',\n    size = 'md',\n    variant = 'default',\n    showOverlay = true,\n    closeOnOverlayClick = true,\n    closeOnEscape = true,\n    container,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onInteractOutside,\n    onOpenAutoFocus,\n    onCloseAutoFocus,\n    ...props \n  }, ref) => {\n    const { open, setOpen } = useSheet()\n    const contentRef = useRef<HTMLDivElement>(null)\n    const overlayRef = useRef<HTMLDivElement>(null)\n\n    // Handle escape key\n    useEffect(() => {\n      if (!open || !closeOnEscape) return\n\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Escape') {\n          onEscapeKeyDown?.(event)\n          if (!event.defaultPrevented) {\n            setOpen(false)\n          }\n        }\n      }\n\n      document.addEventListener('keydown', handleKeyDown)\n      return () => document.removeEventListener('keydown', handleKeyDown)\n    }, [open, closeOnEscape, onEscapeKeyDown, setOpen])\n\n    // Handle body scroll lock\n    useEffect(() => {\n      if (!open) return\n\n      const originalStyle = window.getComputedStyle(document.body).overflow\n      document.body.style.overflow = 'hidden'\n      document.body.style.userSelect = 'none'\n\n      return () => {\n        document.body.style.overflow = originalStyle\n        document.body.style.userSelect = ''\n      }\n    }, [open])\n\n    // Handle focus management\n    useEffect(() => {\n      if (!open) return\n\n      const previousActiveElement = document.activeElement as HTMLElement\n      const content = contentRef.current\n\n      if (content) {\n        // Focus the content or first focusable element\n        const focusableElements = content.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )\n        const firstFocusable = focusableElements[0] as HTMLElement\n        \n        if (firstFocusable) {\n          firstFocusable.focus()\n        } else {\n          content.focus()\n        }\n\n        const focusEvent = new Event('focus')\n        onOpenAutoFocus?.(focusEvent)\n      }\n\n      return () => {\n        if (previousActiveElement) {\n          previousActiveElement.focus()\n          const focusEvent = new Event('focus')\n          onCloseAutoFocus?.(focusEvent)\n        }\n      }\n    }, [open, onOpenAutoFocus, onCloseAutoFocus])\n\n    // Handle outside clicks\n    useEffect(() => {\n      if (!open || !closeOnOverlayClick) return\n\n      const handlePointerDown = (event: PointerEvent) => {\n        const target = event.target as Node\n        const overlay = overlayRef.current\n        const content = contentRef.current\n\n        if (overlay && content && target) {\n          // Check if click was on overlay but not on content\n          if (overlay.contains(target) && !content.contains(target)) {\n            onPointerDownOutside?.(event)\n            onInteractOutside?.(event)\n            \n            if (!event.defaultPrevented) {\n              setOpen(false)\n            }\n          }\n        }\n      }\n\n      document.addEventListener('pointerdown', handlePointerDown)\n      return () => document.removeEventListener('pointerdown', handlePointerDown)\n    }, [open, closeOnOverlayClick, onPointerDownOutside, onInteractOutside, setOpen])\n\n    if (!open) return null\n\n    const content = (\n      <>\n        {showOverlay && (\n          <div\n            ref={overlayRef}\n            className={styles.overlay}\n            data-side={side}\n            data-variant={variant}\n          />\n        )}\n        <div\n          ref={(node) => {\n            if (contentRef) {\n              contentRef.current = node\n            }\n            if (typeof ref === 'function') {\n              ref(node)\n            } else if (ref && 'current' in ref) {\n              ref.current = node\n            }\n          }}\n          className={clsx(\n            styles.content,\n            styles[`side-${side}`],\n            styles[`size-${size}`],\n            styles[`variant-${variant}`],\n            className\n          )}\n          role=\"dialog\"\n          aria-modal=\"true\"\n          tabIndex={-1}\n          data-side={side}\n          data-size={size}\n          data-variant={variant}\n          data-state={open ? 'open' : 'closed'}\n          {...props}\n        >\n          {children}\n        </div>\n      </>\n    )\n\n    return createPortal(content, container || document.body)\n  }\n)\n\ninterface SheetHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst SheetHeader = React.forwardRef<HTMLDivElement, SheetHeaderProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.header, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface SheetTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst SheetTitle = React.forwardRef<HTMLHeadingElement, SheetTitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <h2\n        ref={ref}\n        className={clsx(styles.title, className)}\n        {...props}\n      >\n        {children}\n      </h2>\n    )\n  }\n)\n\ninterface SheetDescriptionProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst SheetDescription = React.forwardRef<HTMLParagraphElement, SheetDescriptionProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={clsx(styles.description, className)}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\ninterface SheetFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst SheetFooter = React.forwardRef<HTMLDivElement, SheetFooterProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.footer, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface SheetCloseProps {\n  children: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst SheetClose = React.forwardRef<HTMLButtonElement, SheetCloseProps>(\n  ({ children, className, asChild = false, ...props }, ref) => {\n    const { setOpen } = useSheet()\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, {\n        onClick: () => setOpen(false),\n        ...props\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.close, className)}\n        onClick={() => setOpen(false)}\n        aria-label=\"Close sheet\"\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\n\n// Set display names\nSheet.displayName = 'Sheet'\nSheetTrigger.displayName = 'Sheet.Trigger'\nSheetContent.displayName = 'Sheet.Content'\nSheetHeader.displayName = 'Sheet.Header'\nSheetTitle.displayName = 'Sheet.Title'\nSheetDescription.displayName = 'Sheet.Description'\nSheetFooter.displayName = 'Sheet.Footer'\nSheetClose.displayName = 'Sheet.Close'\n\n// Compound component pattern\nexport const SheetNamespace = Object.assign(Sheet, {\n  Trigger: SheetTrigger,\n  Content: SheetContent,\n  Header: SheetHeader,\n  Title: SheetTitle,\n  Description: SheetDescription,\n  Footer: SheetFooter,\n  Close: SheetClose\n})\n\nexport { SheetNamespace as Sheet }\nexport type {\n  SheetProps,\n  SheetTriggerProps,\n  SheetContentProps,\n  SheetHeaderProps,\n  SheetTitleProps,\n  SheetDescriptionProps,\n  SheetFooterProps,\n  SheetCloseProps\n}","import React, { createContext, useContext, useState, useEffect, useCallback, useRef, forwardRef } from 'react'\nimport clsx from 'clsx'\nimport styles from './Carousel.module.css'\n\ninterface CarouselProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: 'horizontal' | 'vertical'\n  autoPlay?: boolean\n  autoPlayInterval?: number\n  loop?: boolean\n  value?: number\n  defaultValue?: number\n  onValueChange?: (value: number) => void\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'outline'\n}\n\ninterface CarouselContextValue {\n  currentIndex: number\n  setCurrentIndex: (index: number) => void\n  orientation: 'horizontal' | 'vertical'\n  totalItems: number\n  setTotalItems: (count: number) => void\n  loop: boolean\n  autoPlay: boolean\n  autoPlayInterval: number\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'outline'\n}\n\nconst CarouselContext = createContext<CarouselContextValue | null>(null)\n\nconst useCarousel = () => {\n  const context = useContext(CarouselContext)\n  if (!context) {\n    throw new Error('Carousel components must be used within a Carousel')\n  }\n  return context\n}\n\nconst Carousel = forwardRef<HTMLDivElement, CarouselProps>(\n  ({ \n    orientation = 'horizontal',\n    autoPlay = false,\n    autoPlayInterval = 3000,\n    loop = false,\n    value,\n    defaultValue = 0,\n    onValueChange,\n    size = 'md',\n    variant = 'default',\n    children,\n    className,\n    style,\n    ...props\n  }, ref) => {\n    const [currentIndex, setCurrentIndexState] = useState(value ?? defaultValue)\n    const [totalItems, setTotalItems] = useState(0)\n\n    const setCurrentIndex = useCallback((index: number) => {\n      if (loop) {\n        const newIndex = (index + totalItems) % totalItems\n        setCurrentIndexState(newIndex)\n        onValueChange?.(newIndex)\n      } else {\n        const newIndex = Math.max(0, Math.min(index, totalItems - 1))\n        setCurrentIndexState(newIndex)\n        onValueChange?.(newIndex)\n      }\n    }, [loop, totalItems, onValueChange])\n\n    useEffect(() => {\n      if (value !== undefined) {\n        setCurrentIndexState(value)\n      }\n    }, [value])\n\n    useEffect(() => {\n      if (autoPlay && totalItems > 0) {\n        const interval = setInterval(() => {\n          setCurrentIndex(currentIndex + 1)\n        }, autoPlayInterval)\n        return () => clearInterval(interval)\n      }\n    }, [autoPlay, autoPlayInterval, currentIndex, setCurrentIndex, totalItems])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          currentIndex,\n          setCurrentIndex,\n          orientation,\n          totalItems,\n          setTotalItems,\n          loop,\n          autoPlay,\n          autoPlayInterval,\n          size,\n          variant\n        }}\n      >\n        <div\n          ref={ref}\n          className={clsx(\n            styles.carousel,\n            styles[`carousel-${size}`],\n            styles[`carousel-${variant}`],\n            className\n          )}\n          style={style}\n          data-orientation={orientation}\n          data-size={size}\n          data-variant={variant}\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\n\ninterface CarouselContentProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst CarouselContent = forwardRef<HTMLDivElement, CarouselContentProps>(\n  ({ children, className }, ref) => {\n    const { currentIndex, orientation, setTotalItems } = useCarousel()\n    const contentRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n      const items = React.Children.count(children)\n      setTotalItems(items)\n    }, [children, setTotalItems])\n\n    const transform = orientation === 'horizontal' \n      ? `translateX(-${currentIndex * 100}%)`\n      : `translateY(-${currentIndex * 100}%)`\n\n    return (\n      <div \n        ref={ref}\n        className={clsx(styles.carouselContent, className)}\n      >\n        <div\n          ref={contentRef}\n          className={styles.carouselTrack}\n          style={{ transform }}\n        >\n          {React.Children.map(children, (child, index) => (\n            <div\n              className={styles.carouselItem}\n              data-active={index === currentIndex}\n              key={index}\n            >\n              {child}\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n)\n\ninterface CarouselControlsProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst CarouselControls = forwardRef<HTMLDivElement, CarouselControlsProps>(\n  ({ children, className }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.carouselControls, className)}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface CarouselPreviousProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children?: React.ReactNode\n}\n\nconst CarouselPrevious = forwardRef<HTMLButtonElement, CarouselPreviousProps>(\n  ({ children, className, onClick, ...props }, ref) => {\n    const { currentIndex, setCurrentIndex, loop } = useCarousel()\n    const isDisabled = !loop && currentIndex === 0\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      onClick?.(e)\n      if (!e.defaultPrevented) {\n        setCurrentIndex(currentIndex - 1)\n      }\n    }\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={clsx(styles.carouselButton, styles.carouselPrevious, className)}\n        onClick={handleClick}\n        disabled={isDisabled}\n        aria-label=\"Previous slide\"\n        {...props}\n      >\n        {children || (\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\">\n            <polyline points=\"15 18 9 12 15 6\" />\n          </svg>\n        )}\n      </button>\n    )\n  }\n)\n\ninterface CarouselNextProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children?: React.ReactNode\n}\n\nconst CarouselNext = forwardRef<HTMLButtonElement, CarouselNextProps>(\n  ({ children, className, onClick, ...props }, ref) => {\n    const { currentIndex, setCurrentIndex, totalItems, loop } = useCarousel()\n    const isDisabled = !loop && currentIndex === totalItems - 1\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      onClick?.(e)\n      if (!e.defaultPrevented) {\n        setCurrentIndex(currentIndex + 1)\n      }\n    }\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={clsx(styles.carouselButton, styles.carouselNext, className)}\n        onClick={handleClick}\n        disabled={isDisabled}\n        aria-label=\"Next slide\"\n        {...props}\n      >\n        {children || (\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\">\n            <polyline points=\"9 18 15 12 9 6\" />\n          </svg>\n        )}\n      </button>\n    )\n  }\n)\n\ninterface CarouselIndicatorsProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst CarouselIndicators = forwardRef<HTMLDivElement, CarouselIndicatorsProps>(\n  ({ children, className }, ref) => {\n    const { currentIndex, setCurrentIndex, totalItems } = useCarousel()\n\n    if (children) {\n      return (\n        <div\n          ref={ref}\n          className={clsx(styles.carouselIndicators, className)}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.carouselIndicators, className)}\n      >\n        {Array.from({ length: totalItems }).map((_, index) => (\n          <button\n            key={index}\n            type=\"button\"\n            className={clsx(\n              styles.carouselIndicator,\n              index === currentIndex && styles.carouselIndicatorActive\n            )}\n            onClick={() => setCurrentIndex(index)}\n            aria-label={`Go to slide ${index + 1}`}\n          />\n        ))}\n      </div>\n    )\n  }\n)\n\n// Component display names\nCarousel.displayName = 'Carousel'\nCarouselContent.displayName = 'CarouselContent'\nCarouselControls.displayName = 'CarouselControls'\nCarouselPrevious.displayName = 'CarouselPrevious'\nCarouselNext.displayName = 'CarouselNext'\nCarouselIndicators.displayName = 'CarouselIndicators'\n\n// Compound component pattern\nconst CarouselComponent = Object.assign(Carousel, {\n  Content: CarouselContent,\n  Controls: CarouselControls,\n  Previous: CarouselPrevious,\n  Next: CarouselNext,\n  Indicators: CarouselIndicators\n})\n\nexport { CarouselComponent as Carousel }\nexport type {\n  CarouselProps,\n  CarouselContentProps,\n  CarouselControlsProps,\n  CarouselPreviousProps,\n  CarouselNextProps,\n  CarouselIndicatorsProps\n}","import React, { forwardRef, createContext, useContext } from 'react'\nimport clsx from 'clsx'\nimport styles from './Chart.module.css'\n\ninterface ChartProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'brutal' | 'outline'\n  size?: 'sm' | 'md' | 'lg'\n  showBorder?: boolean\n  showShadow?: boolean\n  showGrid?: boolean\n  aspectRatio?: string\n  height?: number | string\n}\n\ninterface ChartContextValue {\n  variant?: 'default' | 'brutal' | 'outline'\n  size?: 'sm' | 'md' | 'lg'\n  showGrid?: boolean\n}\n\nconst ChartContext = createContext<ChartContextValue | null>(null)\n\nconst useChart = () => {\n  const context = useContext(ChartContext)\n  if (!context) {\n    throw new Error('Chart components must be used within a Chart')\n  }\n  return context\n}\n\nconst Chart = forwardRef<HTMLDivElement, ChartProps>(\n  ({ \n    variant = 'default',\n    size = 'md',\n    showBorder = true,\n    showShadow = true,\n    showGrid = true,\n    aspectRatio = '16/9',\n    height,\n    children,\n    className,\n    style,\n    ...props\n  }, ref) => {\n    const chartStyle: React.CSSProperties = {\n      ...style,\n      height: height,\n      aspectRatio: !height ? aspectRatio : undefined\n    }\n\n    return (\n      <ChartContext.Provider value={{ variant, size, showGrid }}>\n        <div\n          ref={ref}\n          className={clsx(\n            styles.chart,\n            styles[`chart-${size}`],\n            styles[`chart-${variant}`],\n            !showBorder && styles.noBorder,\n            !showShadow && styles.noShadow,\n            className\n          )}\n          style={chartStyle}\n          data-variant={variant}\n          data-size={size}\n          role=\"img\"\n          aria-label=\"Chart container\"\n          {...props}\n        >\n          {children}\n        </div>\n      </ChartContext.Provider>\n    )\n  }\n)\n\ninterface ChartHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode\n}\n\nconst ChartHeader = forwardRef<HTMLDivElement, ChartHeaderProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.chartHeader, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface ChartTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  children?: React.ReactNode\n}\n\nconst ChartTitle = forwardRef<HTMLHeadingElement, ChartTitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <h3\n        ref={ref}\n        className={clsx(styles.chartTitle, className)}\n        {...props}\n      >\n        {children}\n      </h3>\n    )\n  }\n)\n\ninterface ChartSubtitleProps extends React.HTMLAttributes<HTMLParagraphElement> {\n  children?: React.ReactNode\n}\n\nconst ChartSubtitle = forwardRef<HTMLParagraphElement, ChartSubtitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={clsx(styles.chartSubtitle, className)}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\ninterface ChartContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode\n}\n\nconst ChartContent = forwardRef<HTMLDivElement, ChartContentProps>(\n  ({ children, className, ...props }, ref) => {\n    const { showGrid } = useChart()\n    \n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.chartContent, className)}\n        {...props}\n      >\n        <div className={styles.chartWrapper}>\n          {showGrid && <div className={styles.chartGrid} aria-hidden=\"true\" />}\n          <div className={styles.chartContainer}>\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\ninterface ChartLegendProps extends React.HTMLAttributes<HTMLDivElement> {\n  position?: 'top' | 'bottom' | 'left' | 'right'\n  children?: React.ReactNode\n}\n\nconst ChartLegend = forwardRef<HTMLDivElement, ChartLegendProps>(\n  ({ position = 'bottom', children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.chartLegend,\n          styles[`legend-${position}`],\n          className\n        )}\n        role=\"group\"\n        aria-label=\"Chart legend\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface ChartFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode\n}\n\nconst ChartFooter = forwardRef<HTMLDivElement, ChartFooterProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.chartFooter, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Component display names\nChart.displayName = 'Chart'\nChartHeader.displayName = 'ChartHeader'\nChartTitle.displayName = 'ChartTitle'\nChartSubtitle.displayName = 'ChartSubtitle'\nChartContent.displayName = 'ChartContent'\nChartLegend.displayName = 'ChartLegend'\nChartFooter.displayName = 'ChartFooter'\n\n// Compound component pattern\nconst ChartComponent = Object.assign(Chart, {\n  Header: ChartHeader,\n  Title: ChartTitle,\n  Subtitle: ChartSubtitle,\n  Content: ChartContent,\n  Legend: ChartLegend,\n  Footer: ChartFooter\n})\n\nexport { ChartComponent as Chart }\nexport type {\n  ChartProps,\n  ChartHeaderProps,\n  ChartTitleProps,\n  ChartSubtitleProps,\n  ChartContentProps,\n  ChartLegendProps,\n  ChartFooterProps\n}","// Brutalist SVG Shapes\n// Import these SVG files directly or use them as React components\n\nexport const shapes = {\n  square: '/shapes/BrutalSquare.svg',\n  triangle: '/shapes/BrutalTriangle.svg',\n  circle: '/shapes/BrutalCircle.svg',\n  diamond: '/shapes/BrutalDiamond.svg',\n  hexagon: '/shapes/BrutalHexagon.svg',\n  arrow: '/shapes/BrutalArrow.svg',\n  cross: '/shapes/BrutalCross.svg',\n  star: '/shapes/BrutalStar.svg',\n  lightning: '/shapes/BrutalLightning.svg',\n  octagon: '/shapes/BrutalOctagon.svg',\n} as const\n\nexport const shapesList = [\n  {\n    name: 'Square',\n    id: 'square',\n    file: 'BrutalSquare.svg',\n    description: 'Classic brutalist square with thick borders'\n  },\n  {\n    name: 'Triangle',\n    id: 'triangle', \n    file: 'BrutalTriangle.svg',\n    description: 'Sharp angular triangle with bold edges'\n  },\n  {\n    name: 'Circle',\n    id: 'circle',\n    file: 'BrutalCircle.svg', \n    description: 'Solid circle with contrasting inner border'\n  },\n  {\n    name: 'Diamond',\n    id: 'diamond',\n    file: 'BrutalDiamond.svg',\n    description: 'Rotated square creating diamond shape'\n  },\n  {\n    name: 'Hexagon',\n    id: 'hexagon',\n    file: 'BrutalHexagon.svg',\n    description: 'Six-sided polygon with clean geometry'\n  },\n  {\n    name: 'Arrow',\n    id: 'arrow',\n    file: 'BrutalArrow.svg',\n    description: 'Directional arrow for navigation and flow'\n  },\n  {\n    name: 'Cross',\n    id: 'cross',\n    file: 'BrutalCross.svg',\n    description: 'Plus/cross shape for icons and UI elements'\n  },\n  {\n    name: 'Star',\n    id: 'star',\n    file: 'BrutalStar.svg',\n    description: 'Five-pointed star with sharp angles'\n  },\n  {\n    name: 'Lightning',\n    id: 'lightning',\n    file: 'BrutalLightning.svg',\n    description: 'Jagged lightning bolt for energy and power'\n  },\n  {\n    name: 'Octagon',\n    id: 'octagon',\n    file: 'BrutalOctagon.svg',\n    description: 'Eight-sided stop sign inspired shape'\n  }\n] as const\n\nexport type ShapeId = keyof typeof shapes\nexport type ShapeInfo = typeof shapesList[number]","import React from 'react'\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'default' | 'brutal' | 'destructive' | 'outline' | 'ghost'\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  fullWidth?: boolean\n  loading?: boolean\n  brutalistShadow?: boolean\n  glitch?: boolean\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  variant = 'default',\n  size = 'md',\n  fullWidth = false,\n  loading = false,\n  brutalistShadow = true,\n  glitch = false,\n  leftIcon,\n  rightIcon,\n  disabled,\n  children,\n  className = '',\n  ...props\n}) => {\n  const baseClasses = `\n    relative inline-flex items-center justify-center gap-[0.5rem]\n    font-bold uppercase tracking-wider\n    border-[3px] border-solid border-black\n    cursor-pointer transition-all duration-[150ms] ease-in-out\n    select-none whitespace-nowrap outline-none\n    focus-visible:outline focus-visible:outline-[3px] focus-visible:outline-red-500 focus-visible:outline-offset-2\n    disabled:opacity-50 disabled:cursor-not-allowed\n    rounded-none\n  `\n\n  const sizeClasses = {\n    sm: 'py-[0.5rem] px-[1rem] text-xs',      // --brutal-space-2 (0.5rem) --brutal-space-4 (1rem)\n    md: 'py-[0.75rem] px-[1.5rem] text-sm',   // --brutal-space-3 (0.75rem) --brutal-space-6 (1.5rem) \n    lg: 'py-[1rem] px-[2rem] text-base',      // --brutal-space-4 (1rem) --brutal-space-8 (2rem)\n    xl: 'py-[1.5rem] px-[2.5rem] text-lg'     // --brutal-space-6 (1.5rem) --brutal-space-10 (2.5rem)\n  }\n\n  const variantClasses = {\n    default: `\n      bg-white text-black\n      hover:bg-[#f5f5f5]\n      disabled:hover:bg-white\n    `,\n    brutal: `\n      bg-black text-white\n      hover:bg-[#171717]\n      disabled:hover:bg-black\n    `,\n    destructive: `\n      bg-[#ff0000] text-white border-[#cc0000]\n      hover:bg-[#cc0000]\n      disabled:hover:bg-[#ff0000]\n    `,\n    outline: `\n      bg-transparent text-black\n      hover:bg-black hover:text-white\n      disabled:hover:bg-transparent disabled:hover:text-black\n    `,\n    ghost: `\n      bg-transparent text-black border-transparent\n      hover:bg-[#f5f5f5] hover:border-black\n      disabled:hover:bg-transparent disabled:hover:border-transparent\n    `\n  }\n\n  const shadowClasses = brutalistShadow && !disabled ? `\n    shadow-[8px_8px_0px_black]\n    hover:shadow-[12px_12px_0px_black] hover:-translate-x-[4px] hover:-translate-y-[4px]\n    active:shadow-[4px_4px_0px_black] active:translate-x-0 active:translate-y-0\n  ` : brutalistShadow && disabled ? 'shadow-[8px_8px_0px_black]' : ''\n\n  const glitchClasses = glitch ? 'before:content-[attr(data-text)] after:content-[attr(data-text)] before:absolute after:absolute before:top-0 after:top-0 before:left-0 after:left-0 before:w-full after:w-full before:h-full after:h-full before:flex after:flex before:items-center after:items-center before:justify-center after:justify-center before:px-inherit after:px-inherit before:py-inherit after:py-inherit before:animate-[glitch-1_0.5s_infinite] after:animate-[glitch-2_0.5s_infinite] before:text-red-500 after:text-blue-600 before:-z-10 after:-z-20 before:opacity-80 after:opacity-80 hover:before:animate-[glitch-1_0.2s_infinite] hover:after:animate-[glitch-2_0.2s_infinite]' : ''\n\n  const widthClasses = fullWidth ? 'w-full' : ''\n  const loadingClasses = loading ? 'text-transparent' : ''\n\n  const combinedClasses = `\n    ${baseClasses}\n    ${sizeClasses[size]}\n    ${variantClasses[variant]}\n    ${shadowClasses}\n    ${glitchClasses}\n    ${widthClasses}\n    ${loadingClasses}\n    ${className}\n  `.replace(/\\s+/g, ' ').trim()\n\n  return (\n    <button\n      className={combinedClasses}\n      style={{\n        fontFamily: \"'JetBrains Mono', 'Courier New', monospace\",\n        letterSpacing: '0.05em',\n        ...props.style\n      }}\n      disabled={disabled || loading}\n      data-text={glitch ? children : undefined}\n      {...props}\n    >\n      {loading && (\n        <span className=\"absolute w-4 h-4 border-2 border-current border-r-transparent animate-spin rounded-full\" />\n      )}\n      {leftIcon && <span className=\"inline-flex items-center justify-center\">{leftIcon}</span>}\n      <span className=\"inline-flex items-center\">{children}</span>\n      {rightIcon && <span className=\"inline-flex items-center justify-center\">{rightIcon}</span>}\n    </button>\n  )\n}","import React, { forwardRef } from 'react'\n\nexport interface AspectRatioProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** The aspect ratio to maintain (e.g., 16/9, 4/3, 1/1) */\n  ratio?: number\n  /** Content to display within the aspect ratio container */\n  children: React.ReactNode\n  /** Whether to apply object-fit to child images/videos */\n  objectFit?: 'contain' | 'cover' | 'fill' | 'none' | 'scale-down'\n  /** Background color when content doesn't fill the container */\n  backgroundColor?: string\n}\n\n/**\n * AspectRatio component maintains a specific width-to-height ratio for its content.\n * Useful for responsive images, videos, embeds, and any content that needs consistent dimensions.\n */\nexport const AspectRatio = forwardRef<HTMLDivElement, AspectRatioProps>(\n  ({ \n    ratio = 16/9, \n    children, \n    className = '',\n    objectFit = 'cover',\n    backgroundColor,\n    style,\n    ...props \n  }, ref) => {\n    const paddingBottom = `${(1 / ratio) * 100}%`\n\n    const baseClasses = `\n      relative w-full overflow-hidden\n      border-[3px] border-solid border-black\n      bg-gray-100\n      shadow-[4px_4px_0px_black]\n      rounded-none\n      transition-none\n      dark:bg-gray-800 dark:border-white\n      contrast-more:border-[4px] contrast-more:shadow-[5px_5px_0px_black]\n      print:shadow-none print:border print:border-black\n    `\n\n    const objectFitClasses = {\n      contain: '[&>div>img]:object-contain [&>div>video]:object-contain',\n      cover: '[&>div>img]:object-cover [&>div>video]:object-cover',\n      fill: '[&>div>img]:object-fill [&>div>video]:object-fill',\n      none: '[&>div>img]:object-none [&>div>video]:object-none',\n      'scale-down': '[&>div>img]:object-scale-down [&>div>video]:object-scale-down'\n    }\n\n    const combinedClasses = `\n      ${baseClasses}\n      ${objectFitClasses[objectFit]}\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={combinedClasses}\n        style={{\n          ...style,\n          backgroundColor: backgroundColor || undefined\n        }}\n        {...props}\n      >\n        {/* Sizer div to maintain aspect ratio */}\n        <div style={{ paddingBottom }} />\n        \n        {/* Content container */}\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"w-full h-full [&>img]:w-full [&>img]:h-full [&>img]:block [&>video]:w-full [&>video]:h-full [&>video]:block [&>iframe]:w-full [&>iframe]:h-full [&>iframe]:block [&>svg]:w-full [&>svg]:h-full [&>svg]:block\">\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nAspectRatio.displayName = 'AspectRatio'","import { forwardRef, HTMLAttributes } from 'react'\n\nexport interface CardProps extends HTMLAttributes<HTMLDivElement> {\n  /** Visual variant of the card */\n  variant?: 'elevated' | 'flat' | 'outline'\n  /** Padding options */\n  padding?: 'none' | 'sm' | 'md' | 'lg'\n  /** Whether the card is clickable */\n  clickable?: boolean\n  /** Whether to show hover effects */\n  hover?: boolean\n}\n\nexport interface CardHeaderProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface CardBodyProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface CardFooterProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst Card = forwardRef<HTMLDivElement, CardProps>(\n  (\n    {\n      children,\n      className = '',\n      variant = 'elevated',\n      padding = 'md',\n      clickable = false,\n      hover = true,\n      ...props\n    },\n    ref\n  ) => {\n    const baseClasses = `\n      bg-white border-[3px] border-solid border-black\n      transition-all duration-150 ease-in-out\n      rounded-none\n    `\n\n    const variantClasses = {\n      elevated: 'shadow-[8px_8px_0px_black]',\n      flat: '',\n      outline: 'bg-transparent'\n    }\n\n    const paddingClasses = {\n      none: '',\n      sm: 'p-3',\n      md: 'p-6',\n      lg: 'p-8'\n    }\n\n    const interactionClasses = clickable \n      ? 'cursor-pointer hover:shadow-[12px_12px_0px_black] hover:-translate-x-1 hover:-translate-y-1 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'\n      : hover\n        ? 'hover:shadow-[12px_12px_0px_black] hover:-translate-x-1 hover:-translate-y-1'\n        : ''\n\n    const combinedClasses = `\n      ${baseClasses}\n      ${variantClasses[variant]}\n      ${paddingClasses[padding]}\n      ${interactionClasses}\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={combinedClasses}\n        role={clickable ? 'button' : undefined}\n        tabIndex={clickable ? 0 : undefined}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardHeader = forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ children, className = '', ...props }, ref) => {\n    const headerClasses = `\n      pb-4 border-b-[2px] border-black mb-4\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={headerClasses}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardBody = forwardRef<HTMLDivElement, CardBodyProps>(\n  ({ children, className = '', ...props }, ref) => {\n    const bodyClasses = `\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={bodyClasses}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardFooter = forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ children, className = '', ...props }, ref) => {\n    const footerClasses = `\n      pt-4 border-t-[2px] border-black mt-4\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={footerClasses}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCard.displayName = 'Card'\nCardHeader.displayName = 'Card.Header'\nCardBody.displayName = 'Card.Body'\nCardFooter.displayName = 'Card.Footer'\n\n// Compound component\nconst CardComponent = Card as typeof Card & {\n  Header: typeof CardHeader\n  Body: typeof CardBody\n  Footer: typeof CardFooter\n}\n\nCardComponent.Header = CardHeader\nCardComponent.Body = CardBody\nCardComponent.Footer = CardFooter\n\nexport { CardComponent as Card }","import React, { forwardRef, InputHTMLAttributes } from 'react'\n\nexport interface InputProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className = '',\n      variant = 'default',\n      size = 'md',\n      leftIcon,\n      rightIcon,\n      fullWidth = false,\n      brutalistShadow = true,\n      disabled,\n      readOnly,\n      type = 'text',\n      ...props\n    },\n    ref\n  ) => {\n    const baseClasses = `\n      border-[3px] border-solid border-black\n      bg-white text-black placeholder-gray-500\n      transition-all duration-150 ease-in-out\n      focus:outline-none focus:border-black\n      hover:border-gray-700\n      disabled:opacity-60 disabled:cursor-not-allowed disabled:bg-gray-100\n      read-only:cursor-default read-only:bg-gray-100\n      w-full block\n      rounded-none\n    `\n\n    const sizeClasses = {\n      sm: 'px-3 py-2 text-sm leading-tight',\n      md: 'px-4 py-3 text-base leading-normal',\n      lg: 'px-5 py-4 text-lg leading-normal'\n    }\n\n    const variantClasses = {\n      default: 'border-black focus:border-black',\n      error: 'border-red-500 focus:border-red-500 bg-red-50',\n      success: 'border-green-500 focus:border-green-500 bg-green-50'\n    }\n\n    const shadowClasses = brutalistShadow && !disabled && !readOnly\n      ? 'shadow-[4px_4px_0px_black] focus:shadow-[6px_6px_0px_black] focus:-translate-x-0.5 focus:-translate-y-0.5'\n      : ''\n\n    const widthClasses = fullWidth ? 'w-full' : ''\n\n    const iconPadding = {\n      left: leftIcon ? 'pl-12' : '',\n      right: rightIcon ? 'pr-12' : ''\n    }\n\n    if (leftIcon || rightIcon) {\n      return (\n        <div className={`relative ${fullWidth ? 'w-full' : 'inline-block'}`}>\n          {leftIcon && (\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-600 pointer-events-none\">\n              {leftIcon}\n            </div>\n          )}\n          <input\n            ref={ref}\n            type={type}\n            className={`\n              ${baseClasses}\n              ${sizeClasses[size]}\n              ${variantClasses[variant]}\n              ${shadowClasses}\n              ${widthClasses}\n              ${iconPadding.left}\n              ${iconPadding.right}\n              ${className}\n            `.replace(/\\s+/g, ' ').trim()}\n            style={{\n              fontFamily: \"'JetBrains Mono', 'Courier New', monospace\",\n              fontWeight: 500,\n              ...props.style\n            }}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...props}\n          />\n          {rightIcon && (\n            <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-600 pointer-events-none\">\n              {rightIcon}\n            </div>\n          )}\n        </div>\n      )\n    }\n\n    return (\n      <input\n        ref={ref}\n        type={type}\n        className={`\n          ${baseClasses}\n          ${sizeClasses[size]}\n          ${variantClasses[variant]}\n          ${shadowClasses}\n          ${widthClasses}\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        style={{\n          fontFamily: \"'JetBrains Mono', 'Courier New', monospace\",\n          fontWeight: 500,\n          ...props.style\n        }}\n        disabled={disabled}\n        readOnly={readOnly}\n        {...props}\n      />\n    )\n  }\n)\n\nInput.displayName = 'Input'","import React, { forwardRef, HTMLAttributes } from 'react'\n\nexport interface BadgeProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Badge content */\n  children?: React.ReactNode\n  /** Badge variant */\n  variant?: 'solid' | 'outline' | 'dot' | 'secondary'\n  /** Badge color */\n  color?: 'accent' | 'success' | 'warning' | 'error' | 'info' | 'neutral'\n  /** Badge size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the badge is dismissible */\n  dismissible?: boolean\n  /** Click handler for dismissible badges */\n  onDismiss?: () => void\n  /** Additional CSS classes */\n  className?: string\n  /** Custom click handler */\n  onClick?: () => void\n  /** Whether the badge is clickable */\n  clickable?: boolean\n}\n\nexport const Badge = forwardRef<HTMLSpanElement, BadgeProps>(\n  (\n    {\n      children,\n      variant = 'solid',\n      color = 'accent',\n      size = 'md',\n      dismissible = false,\n      onDismiss,\n      className = '',\n      onClick,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) => {\n    const isDot = variant === 'dot'\n    const isClickable = clickable || !!onClick\n    const isDismissible = dismissible && !!onDismiss\n\n    const handleDismiss = (e: React.MouseEvent) => {\n      e.stopPropagation()\n      onDismiss?.()\n    }\n\n    const handleClick = () => {\n      if (isClickable) {\n        onClick?.()\n      }\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (isClickable && (e.key === 'Enter' || e.key === ' ')) {\n        e.preventDefault()\n        onClick?.()\n      }\n    }\n\n    // For dot variant, don't render children\n    const content = isDot ? null : children\n\n    const baseClasses = `\n      inline-flex items-center justify-center\n      font-mono font-bold uppercase tracking-wider\n      border-[3px] border-solid border-black\n      rounded-none whitespace-nowrap\n      transition-all duration-150 ease-in-out\n      shadow-[4px_4px_0px_black]\n    `\n\n    const sizeClasses = {\n      sm: isDot ? 'w-2 h-2' : 'px-2 py-1 text-xs min-h-[20px]',\n      md: isDot ? 'w-3 h-3' : 'px-3 py-2 text-sm min-h-[24px]',\n      lg: isDot ? 'w-4 h-4' : 'px-4 py-3 text-base min-h-[32px]'\n    }\n\n    const variantClasses = {\n      solid: 'bg-black text-white border-black',\n      outline: 'bg-transparent text-black border-black',\n      dot: 'rounded-full',\n      secondary: 'bg-gray-100 text-gray-900 border-gray-600'\n    }\n\n    const colorClasses = {\n      accent: variant === 'outline' ? 'text-red-500 border-red-500' : 'bg-red-500 text-white border-red-700',\n      success: variant === 'outline' ? 'text-green-500 border-green-500' : 'bg-green-500 text-white border-green-700',\n      warning: variant === 'outline' ? 'text-yellow-500 border-yellow-500' : 'bg-yellow-400 text-black border-yellow-600',\n      error: variant === 'outline' ? 'text-red-500 border-red-500' : 'bg-red-500 text-white border-red-700',\n      info: variant === 'outline' ? 'text-blue-500 border-blue-500' : 'bg-blue-500 text-white border-blue-700',\n      neutral: variant === 'outline' ? 'text-gray-500 border-gray-500' : 'bg-gray-500 text-white border-gray-700'\n    }\n\n    const interactionClasses = isClickable\n      ? 'cursor-pointer hover:shadow-[6px_6px_0px_black] hover:-translate-x-0.5 hover:-translate-y-0.5 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'\n      : ''\n\n    const combinedClasses = `\n      ${baseClasses}\n      ${sizeClasses[size]}\n      ${variantClasses[variant]}\n      ${variant !== 'solid' && variant !== 'secondary' ? colorClasses[color] : ''}\n      ${interactionClasses}\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    // Dismiss icon\n    const dismissIcon = (\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        className=\"w-3 h-3 ml-1\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n      </svg>\n    )\n\n    return (\n      <span\n        ref={ref}\n        className={combinedClasses}\n        style={{\n          fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n          fontWeight: 700,\n          letterSpacing: '0.02em',\n          lineHeight: 1,\n          ...props.style\n        }}\n        onClick={isClickable ? handleClick : undefined}\n        onKeyDown={isClickable ? handleKeyDown : undefined}\n        role={isClickable ? 'button' : isDot ? 'status' : undefined}\n        tabIndex={isClickable ? 0 : undefined}\n        aria-label={\n          isDot \n            ? `${color} status indicator` \n            : typeof children === 'string' \n              ? children \n              : undefined\n        }\n        {...props}\n      >\n        {content}\n        \n        {isDismissible && (\n          <button\n            type=\"button\"\n            className=\"ml-1 text-current hover:text-gray-700 focus:outline-none\"\n            onClick={handleDismiss}\n            aria-label=\"Dismiss badge\"\n            tabIndex={-1}\n          >\n            {dismissIcon}\n          </button>\n        )}\n      </span>\n    )\n  }\n)\n\nBadge.displayName = 'Badge'","import { forwardRef, HTMLAttributes, useState } from 'react'\n\nexport interface AlertProps extends HTMLAttributes<HTMLDivElement> {\n  /** Type of alert */\n  type?: 'info' | 'success' | 'warning' | 'error'\n  /** Visual variant */\n  variant?: 'filled' | 'outline'\n  /** Size of the alert */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the alert can be dismissed */\n  dismissible?: boolean\n  /** Callback when alert is dismissed */\n  onDismiss?: () => void\n}\n\nexport interface AlertIconProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface AlertContentProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface AlertTitleProps extends HTMLAttributes<HTMLHeadingElement> {}\nexport interface AlertDescriptionProps extends HTMLAttributes<HTMLParagraphElement> {}\nexport interface AlertActionsProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(\n  (\n    {\n      children,\n      className = '',\n      type = 'info',\n      variant = 'filled',\n      size = 'md',\n      dismissible = false,\n      onDismiss,\n      ...props\n    },\n    ref\n  ) => {\n    const [dismissed, setDismissed] = useState(false)\n    const [isExiting, setIsExiting] = useState(false)\n\n    const handleDismiss = () => {\n      setIsExiting(true)\n      // Wait for animation to complete before removing from DOM\n      setTimeout(() => {\n        setDismissed(true)\n        onDismiss?.()\n      }, 300) // Match animation duration\n    }\n\n    if (dismissed) {\n      return null\n    }\n\n    const baseClasses = `\n      relative flex items-start gap-3\n      border-[3px] border-solid rounded-none\n      font-medium transition-all duration-150 ease-in-out\n      shadow-[4px_4px_0px_black]\n      hover:shadow-[6px_6px_0px_black] hover:-translate-x-0.5 hover:-translate-y-0.5\n      motion-reduce:transition-none motion-reduce:animate-none\n      contrast-more:border-[4px]\n    `\n\n    const sizeClasses = {\n      sm: 'p-3 text-sm leading-tight',\n      md: 'p-4 text-base leading-normal',\n      lg: 'p-6 text-lg leading-normal'\n    }\n\n    const typeVariantClasses = {\n      info: {\n        filled: 'bg-blue-500 border-black text-white',\n        outline: 'bg-white border-blue-500 text-blue-500 border-[5px]'\n      },\n      success: {\n        filled: 'bg-green-500 border-black text-white',\n        outline: 'bg-white border-green-500 text-green-500 border-[5px]'\n      },\n      warning: {\n        filled: 'bg-yellow-400 border-black text-black',\n        outline: 'bg-white border-yellow-400 text-yellow-600 border-[5px]'\n      },\n      error: {\n        filled: 'bg-red-500 border-black text-white hover:animate-[alertShake_0.15s_ease-in-out]',\n        outline: 'bg-white border-red-500 text-red-500 border-[5px] hover:animate-[alertShake_0.15s_ease-in-out]'\n      }\n    }\n\n    const dismissibleClasses = dismissible ? 'pr-12' : ''\n\n    const combinedClasses = `\n      ${baseClasses}\n      ${sizeClasses[size]}\n      ${typeVariantClasses[type][variant]}\n      ${dismissibleClasses}\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={combinedClasses}\n        style={{\n          fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n          animation: isExiting \n            ? 'alertExit 0.3s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards'\n            : 'alertEnter 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) forwards',\n          ...props.style\n        }}\n        role=\"alert\"\n        aria-live=\"polite\"\n        {...props}\n      >\n        <style>\n          {`\n            @keyframes alertEnter {\n              from {\n                opacity: 0;\n                transform: translateY(-20px) scale(0.95);\n              }\n              to {\n                opacity: 1;\n                transform: translateY(0) scale(1);\n              }\n            }\n            @keyframes alertExit {\n              from {\n                opacity: 1;\n                transform: translateX(0) scale(1);\n              }\n              to {\n                opacity: 0;\n                transform: translateX(100px) scale(0.9);\n              }\n            }\n            @keyframes alertShake {\n              0%, 100% {\n                transform: translateX(0);\n              }\n              25% {\n                transform: translateX(-4px);\n              }\n              75% {\n                transform: translateX(4px);\n              }\n            }\n          `}\n        </style>\n        {children}\n        {dismissible && (\n          <button\n            className={`\n              absolute top-3 right-3 bg-transparent border-none text-current cursor-pointer\n              p-1 flex items-center justify-center rounded-none opacity-70 transition-all duration-100 ease-in-out\n              hover:opacity-100 hover:scale-110 active:scale-95\n              focus:outline focus:outline-2 focus:outline-current focus:outline-offset-1\n              motion-reduce:transition-none motion-reduce:hover:scale-100 motion-reduce:active:scale-100\n              ${size === 'sm' ? 'top-2 right-2 p-0.5' : size === 'lg' ? 'top-4 right-4' : ''}\n            `}\n            onClick={handleDismiss}\n            aria-label=\"Dismiss alert\"\n            type=\"button\"\n          >\n            <svg\n              width={size === 'sm' ? 14 : size === 'lg' ? 18 : 16}\n              height={size === 'sm' ? 14 : size === 'lg' ? 18 : 16}\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M12 4L4 12M4 4L12 12\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n              />\n            </svg>\n          </button>\n        )}\n      </div>\n    )\n  }\n)\n\nconst AlertIcon = forwardRef<HTMLDivElement, AlertIconProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={`\n          flex-shrink-0 flex items-center justify-center mt-1\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        {...props}\n      >\n        {children || <DefaultIcon />}\n      </div>\n    )\n  }\n)\n\nconst AlertContent = forwardRef<HTMLDivElement, AlertContentProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={`\n          flex-1 min-w-0\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst AlertTitle = forwardRef<HTMLHeadingElement, AlertTitleProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <h4\n        ref={ref}\n        className={`\n          font-bold text-inherit leading-tight uppercase tracking-wider\n          m-0 mb-1\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        style={{\n          fontFamily: \"'Space Grotesk', 'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n          letterSpacing: '0.05em',\n          ...props.style\n        }}\n        {...props}\n      >\n        {children}\n      </h4>\n    )\n  }\n)\n\nconst AlertDescription = forwardRef<HTMLParagraphElement, AlertDescriptionProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={`\n          m-0 leading-normal opacity-90\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\nconst AlertActions = forwardRef<HTMLDivElement, AlertActionsProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={`\n          flex items-center gap-2 mt-3 flex-wrap\n          max-md:flex-col max-md:items-stretch max-md:[&>button]:w-full\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Default icon component\nconst DefaultIcon = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle\n      cx=\"10\"\n      cy=\"10\"\n      r=\"8\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M10 6V10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n    />\n    <circle\n      cx=\"10\"\n      cy=\"14\"\n      r=\"1\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nAlert.displayName = 'Alert'\nAlertIcon.displayName = 'Alert.Icon'\nAlertContent.displayName = 'Alert.Content'\nAlertTitle.displayName = 'Alert.Title'\nAlertDescription.displayName = 'Alert.Description'\nAlertActions.displayName = 'Alert.Actions'\n\n// Compound component\nconst AlertComponent = Alert as typeof Alert & {\n  Icon: typeof AlertIcon\n  Content: typeof AlertContent\n  Title: typeof AlertTitle\n  Description: typeof AlertDescription\n  Actions: typeof AlertActions\n}\n\nAlertComponent.Icon = AlertIcon\nAlertComponent.Content = AlertContent\nAlertComponent.Title = AlertTitle\nAlertComponent.Description = AlertDescription\nAlertComponent.Actions = AlertActions\n\nexport { AlertComponent as Alert }","import React, { forwardRef, InputHTMLAttributes, useRef, useEffect } from 'react'\n\nexport interface CheckboxProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'size'> {\n  size?: 'sm' | 'md' | 'lg'\n  label?: React.ReactNode\n  indeterminate?: boolean\n  error?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  (\n    {\n      className = '',\n      size = 'md',\n      label,\n      indeterminate = false,\n      error = false,\n      brutalistShadow = true,\n      disabled,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    const internalRef = useRef<HTMLInputElement>(null)\n    const checkboxRef = ref || internalRef\n\n    // Handle indeterminate state\n    useEffect(() => {\n      const checkbox = typeof checkboxRef === 'function' ? null : checkboxRef.current\n      if (checkbox) {\n        checkbox.indeterminate = indeterminate\n      }\n    }, [indeterminate, checkboxRef])\n\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`\n\n    const sizeClasses = {\n      sm: 'w-4 h-4',\n      md: 'w-5 h-5', \n      lg: 'w-6 h-6'\n    }\n\n    const labelSizeClasses = {\n      sm: 'text-sm',\n      md: 'text-base',\n      lg: 'text-lg'\n    }\n\n    const containerClasses = `\n      inline-flex items-center gap-3 relative select-none\n      ${disabled ? 'cursor-not-allowed opacity-50' : ''}\n      ${className}\n    `\n\n    const checkboxClasses = `\n      flex items-center justify-center\n      bg-white border-[3px] border-solid rounded-none\n      cursor-pointer transition-all duration-150 ease-in-out\n      relative overflow-hidden\n      ${sizeClasses[size]}\n      ${brutalistShadow ? 'shadow-[4px_4px_0px_black]' : ''}\n      ${error ? 'border-red-500' : 'border-black'}\n      ${disabled ? 'cursor-not-allowed bg-gray-300' : ''}\n      hover:bg-gray-100 hover:-translate-x-0.5 hover:-translate-y-0.5\n      ${brutalistShadow ? 'hover:shadow-[6px_6px_0px_black]' : ''}\n      ${error && brutalistShadow ? 'hover:shadow-[6px_6px_0px_red-500]' : ''}\n      active:translate-x-0.5 active:translate-y-0.5\n      ${brutalistShadow ? 'active:shadow-[2px_2px_0px_black]' : ''}\n      ${error && brutalistShadow ? 'active:shadow-[2px_2px_0px_red-500]' : ''}\n      focus-within:outline focus-within:outline-2 focus-within:outline-red-500 focus-within:outline-offset-2\n      ${disabled ? 'hover:bg-gray-300 hover:translate-x-0 hover:translate-y-0 hover:shadow-[4px_4px_0px_black]' : ''}\n    `\n\n    const inputClasses = `\n      absolute opacity-0 w-full h-full cursor-pointer z-10\n      ${disabled ? 'cursor-not-allowed' : ''}\n    `\n\n    const checkmarkClasses = `\n      w-full h-full opacity-0 transform scale-75 transition-all duration-150 ease-in-out\n      ${error ? 'text-red-500' : 'text-black'}\n      ${indeterminate ? 'opacity-0' : ''}\n    `\n\n    const indeterminateLineClasses = `\n      absolute h-[3px] w-[60%] transition-opacity duration-150 ease-in-out\n      ${indeterminate ? 'opacity-100' : 'opacity-0'}\n      ${error ? 'bg-red-500' : 'bg-black'}\n    `\n\n    const labelClasses = `\n      font-medium text-black cursor-pointer transition-colors duration-150 ease-in-out\n      ${labelSizeClasses[size]}\n      ${disabled ? 'cursor-not-allowed text-gray-500' : 'hover:text-gray-700'}\n    `\n\n    return (\n      <div className={containerClasses}>\n        <div className=\"relative inline-block leading-[0]\">\n          <input\n            ref={checkboxRef as React.Ref<HTMLInputElement>}\n            type=\"checkbox\"\n            id={checkboxId}\n            className={`${inputClasses} checked:~[&+div>svg]:opacity-100 checked:~[&+div>svg]:scale-100`}\n            disabled={disabled}\n            aria-invalid={error}\n            {...props}\n          />\n          <div className={checkboxClasses}>\n            <svg \n              className={checkmarkClasses}\n              viewBox=\"0 0 24 24\" \n              fill=\"none\"\n              aria-hidden=\"true\"\n            >\n              <path \n                d=\"M5 13L9 17L19 7\" \n                stroke=\"currentColor\" \n                strokeWidth=\"4\" \n                strokeLinecap=\"square\" \n                strokeLinejoin=\"miter\"\n              />\n            </svg>\n            <div className={indeterminateLineClasses} />\n          </div>\n        </div>\n        {label && (\n          <label \n            htmlFor={checkboxId} \n            className={labelClasses}\n            style={{\n              fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\"\n            }}\n          >\n            {label}\n          </label>\n        )}\n        \n        <style>\n          {`\n            input:checked + div svg {\n              opacity: 1;\n              transform: scale(1);\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n)\n\nCheckbox.displayName = 'Checkbox'","import React, { useState, forwardRef, ImgHTMLAttributes } from 'react'\n\nexport interface AvatarProps extends Omit<ImgHTMLAttributes<HTMLImageElement>, 'size' | 'children'> {\n  /** Image source URL */\n  src?: string\n  /** Alt text for the image */\n  alt?: string\n  /** Initials to display when no image */\n  initials?: string\n  /** Icon to display as fallback */\n  icon?: React.ReactNode\n  /** Avatar size */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  /** Status indicator */\n  status?: 'online' | 'offline' | 'busy' | 'away'\n  /** Additional CSS classes */\n  className?: string\n  /** Custom click handler */\n  onClick?: () => void\n  /** Whether the avatar is clickable */\n  clickable?: boolean\n}\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>(\n  (\n    {\n      src,\n      alt,\n      initials,\n      icon,\n      size = 'md',\n      status,\n      className = '',\n      onClick,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) => {\n    const [imageError, setImageError] = useState(false)\n    const [imageLoaded, setImageLoaded] = useState(false)\n\n    const handleImageError = () => {\n      setImageError(true)\n    }\n\n    const handleImageLoad = () => {\n      setImageLoaded(true)\n      setImageError(false)\n    }\n\n    const hasImage = src && !imageError\n    const hasInitials = initials && initials.length > 0\n    const hasIcon = icon\n\n    // Determine what to display based on available data and fallback order\n    const showImage = hasImage\n    const showInitials = !hasImage && hasInitials\n    const showIcon = !hasImage && !hasInitials && hasIcon\n\n    // Get initials (first 2 characters max)\n    const displayInitials = initials ? initials.slice(0, 2).toUpperCase() : ''\n\n    // Default icon if no image, initials, or custom icon\n    const defaultIcon = (\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        className=\"w-full h-full\"\n      >\n        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n      </svg>\n    )\n\n    const isClickable = clickable || !!onClick\n\n    const sizeClasses = {\n      xs: 'w-6 h-6',\n      sm: 'w-8 h-8',\n      md: 'w-10 h-10',\n      lg: 'w-12 h-12',\n      xl: 'w-16 h-16'\n    }\n\n    const textSizeClasses = {\n      xs: 'text-xs',\n      sm: 'text-sm',\n      md: 'text-base',\n      lg: 'text-lg',\n      xl: 'text-xl'\n    }\n\n    const statusSizeClasses = {\n      xs: 'w-1.5 h-1.5',\n      sm: 'w-2 h-2',\n      md: 'w-2.5 h-2.5',\n      lg: 'w-3 h-3',\n      xl: 'w-4 h-4'\n    }\n\n    const statusColorClasses = {\n      online: 'bg-green-500',\n      offline: 'bg-gray-400',\n      busy: 'bg-red-500',\n      away: 'bg-yellow-500'\n    }\n\n    const containerClasses = `\n      relative inline-block\n      ${isClickable ? 'cursor-pointer' : ''}\n      ${className}\n    `\n\n    const avatarClasses = `\n      ${sizeClasses[size]}\n      bg-gray-100 border-[3px] border-solid border-black\n      rounded-none shadow-[4px_4px_0px_black]\n      flex items-center justify-center\n      overflow-hidden text-black font-bold\n      transition-all duration-150 ease-in-out\n      ${isClickable ? 'hover:shadow-[6px_6px_0px_black] hover:-translate-x-0.5 hover:-translate-y-0.5' : ''}\n      ${isClickable ? 'active:shadow-[2px_2px_0px_black] active:translate-x-0.5 active:translate-y-0.5' : ''}\n      ${isClickable ? 'focus:outline focus:outline-2 focus:outline-red-500 focus:outline-offset-2' : ''}\n    `\n\n    const statusClasses = `\n      absolute -bottom-0.5 -right-0.5 \n      ${statusSizeClasses[size]}\n      ${statusColorClasses[status!]}\n      border-2 border-white rounded-full\n      shadow-[2px_2px_0px_black]\n    `\n\n    return (\n      <div\n        ref={ref}\n        className={containerClasses}\n        onClick={isClickable ? onClick : undefined}\n        role={isClickable ? 'button' : undefined}\n        tabIndex={isClickable ? 0 : undefined}\n        onKeyDown={\n          isClickable\n            ? (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault()\n                  onClick?.()\n                }\n              }\n            : undefined\n        }\n        aria-label={alt || `Avatar${initials ? ` for ${initials}` : ''}`}\n      >\n        <div className={avatarClasses}>\n          {showImage && (\n            <img\n              src={src}\n              alt={alt}\n              className={`w-full h-full object-cover ${imageLoaded ? 'opacity-100' : 'opacity-0'} transition-opacity duration-200`}\n              onError={handleImageError}\n              onLoad={handleImageLoad}\n              {...props}\n            />\n          )}\n          \n          {showInitials && (\n            <span \n              className={`${textSizeClasses[size]} font-bold uppercase`}\n              style={{\n                fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\"\n              }}\n              aria-label={`Initials: ${displayInitials}`}\n            >\n              {displayInitials}\n            </span>\n          )}\n          \n          {showIcon && (\n            <span \n              className=\"w-3/5 h-3/5 flex items-center justify-center text-gray-600\" \n              aria-label=\"Avatar icon\"\n            >\n              {icon}\n            </span>\n          )}\n          \n          {!showImage && !showInitials && !showIcon && (\n            <span \n              className=\"w-3/5 h-3/5 flex items-center justify-center text-gray-600\" \n              aria-label=\"Default avatar\"\n            >\n              {defaultIcon}\n            </span>\n          )}\n        </div>\n        \n        {status && (\n          <div\n            className={statusClasses}\n            aria-label={`Status: ${status}`}\n            role=\"img\"\n          />\n        )}\n      </div>\n    )\n  }\n)\n\nAvatar.displayName = 'Avatar'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface ProgressProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  /** Progress value (0-max for determinate, undefined for indeterminate) */\n  value?: number\n  /** Maximum value */\n  max?: number\n  /** Progress type */\n  type?: 'linear' | 'circular'\n  /** Progress variant */\n  variant?: 'default' | 'striped' | 'animated'\n  /** Progress size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether to show the value label */\n  showLabel?: boolean\n  /** Custom label text (overrides default percentage) */\n  label?: string\n  /** Whether progress is indeterminate */\n  indeterminate?: boolean\n  /** Progress bar color */\n  color?: 'accent' | 'success' | 'warning' | 'error' | 'info'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  (\n    {\n      value,\n      max = 100,\n      type = 'linear',\n      variant = 'default', // eslint-disable-line @typescript-eslint/no-unused-vars\n      size = 'md',\n      showLabel = false,\n      label,\n      indeterminate = false,\n      color = 'accent',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Calculate progress percentage\n    const progressValue = indeterminate ? undefined : Math.min(Math.max((value ?? 0) / max * 100, 0), 100)\n    const isCircular = type === 'circular'\n    \n    // Calculate label text\n    const labelText = label || (progressValue !== undefined ? `${Math.round(progressValue)}%` : '')\n    \n    // Squared circular progress calculations\n    const boxSize = isCircular ? (size === 'sm' ? 40 : size === 'lg' ? 80 : 60) : 0\n    const pathLength = isCircular ? boxSize * 4 - 16 : 0 // Perimeter minus corners\n    const dashOffset = isCircular && progressValue !== undefined \n      ? pathLength - (progressValue / 100) * pathLength \n      : 0\n\n    // Accessibility props\n    const progressRole = 'progressbar'\n    const ariaValueNow = indeterminate ? undefined : value ?? 0\n    const ariaValueMin = 0\n    const ariaValueMax = max\n    const ariaLabel = label || (indeterminate ? 'Loading' : `${Math.round(progressValue ?? 0)} percent complete`)\n\n    // Base classes\n    const baseClasses = clsx(\n      'relative',\n      'font-mono font-bold text-black',\n      className\n    )\n\n    // Color variants\n    const colorClasses = {\n      accent: 'bg-yellow-400 border-yellow-400',\n      success: 'bg-green-400 border-green-400',\n      warning: 'bg-orange-400 border-orange-400',\n      error: 'bg-red-400 border-red-400',\n      info: 'bg-blue-400 border-blue-400'\n    }\n\n    const trackColorClasses = {\n      accent: 'bg-yellow-100 border-yellow-400',\n      success: 'bg-green-100 border-green-400',\n      warning: 'bg-orange-100 border-orange-400',\n      error: 'bg-red-100 border-red-400',\n      info: 'bg-blue-100 border-blue-400'\n    }\n\n    if (isCircular) {\n      const strokeWidth = size === 'sm' ? 3 : size === 'lg' ? 6 : 4\n      const padding = strokeWidth + 2\n      const svgSize = boxSize + padding * 2\n      const cornerSize = 4\n\n      const circularClasses = clsx(\n        baseClasses,\n        'inline-flex items-center justify-center'\n      )\n\n      const strokeColorClasses = {\n        accent: 'stroke-yellow-400',\n        success: 'stroke-green-400',\n        warning: 'stroke-orange-400',\n        error: 'stroke-red-400',\n        info: 'stroke-blue-400'\n      }\n\n      const trackStrokeClasses = {\n        accent: 'stroke-yellow-200',\n        success: 'stroke-green-200',\n        warning: 'stroke-orange-200',\n        error: 'stroke-red-200',\n        info: 'stroke-blue-200'\n      }\n\n      return (\n        <div\n          ref={ref}\n          className={circularClasses}\n          role={progressRole}\n          aria-valuenow={ariaValueNow}\n          aria-valuemin={ariaValueMin}\n          aria-valuemax={ariaValueMax}\n          aria-label={ariaLabel}\n          {...props}\n        >\n          <div className=\"relative flex items-center justify-center\">\n            <svg\n              className=\"transform rotate-0\"\n              width={svgSize}\n              height={svgSize}\n              viewBox={`0 0 ${svgSize} ${svgSize}`}\n              style={{\n                fontFamily: 'JetBrains Mono, monospace',\n                fontWeight: 'bold'\n              }}\n            >\n              {/* Background square track */}\n              <rect\n                className={clsx('fill-white', trackStrokeClasses[color])}\n                x={padding}\n                y={padding}\n                width={boxSize}\n                height={boxSize}\n                rx={cornerSize}\n                ry={cornerSize}\n                fill=\"none\"\n                strokeWidth={strokeWidth}\n              />\n              {/* Progress square */}\n              <rect\n                className={clsx('fill-none transition-all duration-300', strokeColorClasses[color])}\n                x={padding}\n                y={padding}\n                width={boxSize}\n                height={boxSize}\n                rx={cornerSize}\n                ry={cornerSize}\n                fill=\"none\"\n                strokeWidth={strokeWidth}\n                style={{\n                  strokeDasharray: pathLength,\n                  strokeDashoffset: dashOffset,\n                }}\n                strokeLinecap=\"square\"\n                transform={`rotate(-90 ${svgSize / 2} ${svgSize / 2})`}\n              />\n            </svg>\n            {showLabel && (\n              <div \n                className={clsx(\n                  'absolute text-center font-bold text-black leading-none',\n                  size === 'sm' ? 'text-xs' : size === 'lg' ? 'text-base' : 'text-sm'\n                )}\n                style={{\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              >\n                {labelText}\n              </div>\n            )}\n          </div>\n        </div>\n      )\n    }\n\n    // Linear progress\n    const linearClasses = clsx(\n      baseClasses,\n      'w-full',\n      showLabel && 'mb-6'\n    )\n\n    const sizeClasses = {\n      sm: 'h-2',\n      md: 'h-3',\n      lg: 'h-4'\n    }\n\n    const trackClasses = clsx(\n      'relative overflow-hidden border-2 border-black',\n      'shadow-[inset_2px_2px_0px_rgba(0,0,0,0.2),3px_3px_0px_black]',\n      'transform -translate-y-px',\n      sizeClasses[size],\n      trackColorClasses[color]\n    )\n\n    const barClasses = clsx(\n      'h-full relative transition-all duration-300',\n      'shadow-[inset_-2px_-2px_0px_rgba(0,0,0,0.2)]',\n      'after:absolute after:top-0 after:right-0 after:w-1 after:h-full after:bg-black',\n      colorClasses[color],\n      indeterminate && 'animate-pulse'\n    )\n\n    return (\n      <div\n        ref={ref}\n        className={linearClasses}\n        role={progressRole}\n        aria-valuenow={ariaValueNow}\n        aria-valuemin={ariaValueMin}\n        aria-valuemax={ariaValueMax}\n        aria-label={ariaLabel}\n        {...props}\n      >\n        <div className={trackClasses}>\n          <div\n            className={barClasses}\n            style={{\n              width: indeterminate ? '30%' : `${progressValue}%`,\n              fontFamily: 'JetBrains Mono, monospace'\n            }}\n            aria-hidden=\"true\"\n          />\n        </div>\n        {showLabel && (\n          <div \n            className=\"mt-2 text-sm font-bold text-center text-black\"\n            style={{\n              fontFamily: 'JetBrains Mono, monospace'\n            }}\n          >\n            {labelText}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nProgress.displayName = 'Progress'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface SpinnerProps extends Omit<HTMLAttributes<HTMLDivElement>, 'children'> {\n  /** Size of the spinner */\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  /** Color variant */\n  color?: 'default' | 'accent' | 'success' | 'warning' | 'error' | 'info'\n  /** Animation variant */\n  variant?: 'dots' | 'bars' | 'square' | 'glitch'\n  /** Speed of animation */\n  speed?: 'slow' | 'normal' | 'fast'\n  /** Label for accessibility */\n  label?: string\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>(\n  (\n    {\n      size = 'md',\n      color = 'default',\n      variant = 'dots',\n      speed = 'normal',\n      label = 'Loading',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Size classes\n    const sizeClasses = {\n      sm: {\n        container: 'w-4 h-4',\n        dot: 'w-1 h-1',\n        bar: 'w-0.5 h-2',\n        square: 'w-4 h-4',\n        glitch: 'w-4 h-4'\n      },\n      md: {\n        container: 'w-6 h-6',\n        dot: 'w-1.5 h-1.5',\n        bar: 'w-0.5 h-3',\n        square: 'w-6 h-6',\n        glitch: 'w-6 h-6'\n      },\n      lg: {\n        container: 'w-8 h-8',\n        dot: 'w-2 h-2',\n        bar: 'w-1 h-4',\n        square: 'w-8 h-8',\n        glitch: 'w-8 h-8'\n      },\n      xl: {\n        container: 'w-12 h-12',\n        dot: 'w-3 h-3',\n        bar: 'w-1.5 h-6',\n        square: 'w-12 h-12',\n        glitch: 'w-12 h-12'\n      }\n    }\n\n    // Color classes\n    const colorClasses = {\n      default: 'bg-black border-black',\n      accent: 'bg-yellow-400 border-yellow-400',\n      success: 'bg-green-400 border-green-400',\n      warning: 'bg-orange-400 border-orange-400',\n      error: 'bg-red-400 border-red-400',\n      info: 'bg-blue-400 border-blue-400'\n    }\n\n    // Animation speed classes\n    const speedClasses = {\n      slow: 'duration-2000',\n      normal: 'duration-1000',\n      fast: 'duration-500'\n    }\n\n    const renderSpinner = () => {\n      const baseClasses = clsx(\n        'border-2 border-black',\n        colorClasses[color],\n        speedClasses[speed]\n      )\n\n      switch (variant) {\n        case 'dots':\n          return (\n            <>\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].dot,\n                  'animate-pulse'\n                )}\n                style={{\n                  animationDelay: '0ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].dot,\n                  'animate-pulse'\n                )}\n                style={{\n                  animationDelay: '200ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].dot,\n                  'animate-pulse'\n                )}\n                style={{\n                  animationDelay: '400ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n            </>\n          )\n        case 'bars':\n          return (\n            <>\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].bar,\n                  'animate-bounce'\n                )}\n                style={{\n                  animationDelay: '0ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].bar,\n                  'animate-bounce'\n                )}\n                style={{\n                  animationDelay: '100ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].bar,\n                  'animate-bounce'\n                )}\n                style={{\n                  animationDelay: '200ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].bar,\n                  'animate-bounce'\n                )}\n                style={{\n                  animationDelay: '300ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n            </>\n          )\n        case 'square':\n          return (\n            <span \n              className={clsx(\n                baseClasses,\n                sizeClasses[size].square,\n                'animate-spin border-4'\n              )}\n              style={{\n                fontFamily: 'JetBrains Mono, monospace'\n              }}\n            />\n          )\n        case 'glitch':\n          return (\n            <>\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].glitch,\n                  'absolute animate-ping border-4'\n                )}\n                style={{\n                  animationDelay: '0ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  'absolute border-2 bg-transparent',\n                  colorClasses[color].replace('bg-', 'border-'),\n                  sizeClasses[size].glitch,\n                  'animate-pulse'\n                )}\n                style={{\n                  animationDelay: '100ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  'absolute bg-black border-none scale-75',\n                  sizeClasses[size].glitch,\n                  'animate-ping'\n                )}\n                style={{\n                  animationDelay: '200ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n            </>\n          )\n        default:\n          return null\n      }\n    }\n\n    const containerClasses = clsx(\n      'inline-flex items-center justify-center gap-2',\n      variant === 'glitch' && 'relative',\n      variant === 'bars' && sizeClasses[size].container,\n      className\n    )\n\n    return (\n      <div\n        ref={ref}\n        className={containerClasses}\n        role=\"status\"\n        aria-label={label}\n        style={{\n          fontFamily: 'JetBrains Mono, monospace',\n          fontWeight: 'bold'\n        }}\n        {...props}\n      >\n        {renderSpinner()}\n        <span className=\"sr-only\">{label}</span>\n      </div>\n    )\n  }\n)\n\nSpinner.displayName = 'Spinner'","import React from 'react'\nimport { clsx } from 'clsx'\n\nexport interface SeparatorProps {\n  /** Orientation of the separator */\n  orientation?: 'horizontal' | 'vertical'\n  /** Thickness variant */\n  thickness?: 'thin' | 'medium' | 'thick'\n  /** Style variant */\n  variant?: 'solid' | 'dashed' | 'dotted' | 'double'\n  /** Custom CSS class */\n  className?: string\n  /** Additional CSS properties */\n  style?: React.CSSProperties\n  /** Decorative element in the middle (horizontal only) */\n  label?: string | React.ReactNode\n  /** Position of the label */\n  labelPosition?: 'start' | 'center' | 'end'\n  /** ARIA label for accessibility */\n  ariaLabel?: string\n}\n\nexport const Separator: React.FC<SeparatorProps> = ({\n  orientation = 'horizontal',\n  thickness = 'medium',\n  variant = 'solid',\n  className,\n  style,\n  label,\n  labelPosition = 'center',\n  ariaLabel = 'Separator',\n}) => {\n  const isHorizontal = orientation === 'horizontal'\n  \n  // Base classes\n  const baseClasses = clsx(\n    'flex items-center relative text-black',\n    isHorizontal ? 'w-full my-6' : 'h-full mx-6 flex-col',\n    className\n  )\n\n  // Thickness classes\n  const thicknessClasses = {\n    thin: isHorizontal ? 'border-t' : 'border-l',\n    medium: isHorizontal ? 'border-t-2' : 'border-l-2',\n    thick: isHorizontal ? 'border-t-4' : 'border-l-4'\n  }\n\n  // Style classes\n  const styleClasses = {\n    solid: 'border-black',\n    dashed: 'border-black border-dashed',\n    dotted: 'border-black border-dotted',\n    double: 'border-black border-double'\n  }\n\n  // If there's a label and it's horizontal, use different layout\n  if (label && isHorizontal) {\n    const lineClasses = clsx(\n      'flex-1 bg-black',\n      thickness === 'thin' ? 'h-px' : thickness === 'thick' ? 'h-1' : 'h-0.5'\n    )\n\n    // Special handling for different line styles\n    const getLineStyle = () => {\n      switch (variant) {\n        case 'dashed':\n          return {\n            background: 'repeating-linear-gradient(to right, black 0, black 8px, transparent 8px, transparent 16px)',\n            backgroundSize: '16px 100%',\n            backgroundColor: 'transparent'\n          }\n        case 'dotted':\n          return {\n            background: 'repeating-linear-gradient(to right, black 0, black 4px, transparent 4px, transparent 8px)',\n            backgroundSize: '8px 100%',\n            backgroundColor: 'transparent'\n          }\n        case 'double':\n          return {\n            backgroundColor: 'transparent',\n            borderTop: '2px solid black',\n            borderBottom: '2px solid black',\n            height: '6px'\n          }\n        default:\n          return {}\n      }\n    }\n\n    const labelClasses = clsx(\n      'flex-shrink-0 px-2 font-mono text-sm font-bold uppercase tracking-wide',\n      'text-black'\n    )\n\n    return (\n      <div\n        className={clsx(baseClasses, 'gap-4 border-none')}\n        style={{\n          ...style,\n          fontFamily: 'JetBrains Mono, monospace',\n          fontWeight: 'bold'\n        }}\n        role=\"separator\"\n        aria-orientation={orientation}\n        aria-label={ariaLabel}\n      >\n        {labelPosition !== 'start' && (\n          <div className={lineClasses} style={getLineStyle()} />\n        )}\n        <div className={labelClasses}>\n          {typeof label === 'string' ? <span>{label}</span> : label}\n        </div>\n        {labelPosition !== 'end' && (\n          <div className={lineClasses} style={getLineStyle()} />\n        )}\n      </div>\n    )\n  }\n\n  // Simple separator without label\n  return (\n    <div\n      className={clsx(\n        baseClasses,\n        thicknessClasses[thickness],\n        styleClasses[variant]\n      )}\n      style={{\n        ...style,\n        fontFamily: 'JetBrains Mono, monospace',\n        fontWeight: 'bold'\n      }}\n      role=\"separator\"\n      aria-orientation={orientation}\n      aria-label={ariaLabel}\n    />\n  )\n}\n\nSeparator.displayName = 'Separator'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface SkeletonProps extends HTMLAttributes<HTMLDivElement> {\n  /** Shape of the skeleton */\n  shape?: 'text' | 'circular' | 'rectangular'\n  /** Animation type */\n  animation?: 'pulse' | 'wave' | 'none'\n  /** Width of the skeleton (for rectangular and circular) */\n  width?: number | string\n  /** Height of the skeleton (for rectangular and circular) */\n  height?: number | string\n  /** Number of text lines (only for text shape) */\n  lines?: 1 | 2 | 3 | 4 | 5\n  /** Variant style */\n  variant?: 'default' | 'rounded'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Skeleton = forwardRef<HTMLDivElement, SkeletonProps>(\n  (\n    {\n      shape = 'text',\n      animation = 'pulse',\n      width,\n      height,\n      lines = 1,\n      variant = 'default',\n      className,\n      style,\n      ...props\n    },\n    ref\n  ) => {\n    const isText = shape === 'text'\n    const isCircular = shape === 'circular'\n\n    // Generate styles for width and height\n    const dimensionStyles: React.CSSProperties = {\n      ...style,\n      ...(width && { width: typeof width === 'number' ? `${width}px` : width }),\n      ...(height && { height: typeof height === 'number' ? `${height}px` : height }),\n      fontFamily: 'JetBrains Mono, monospace',\n      fontWeight: 'bold'\n    }\n\n    // For circular, use width as diameter if height not specified\n    if (isCircular && width && !height) {\n      dimensionStyles.height = dimensionStyles.width\n    }\n\n    // Base classes\n    const baseClasses = clsx(\n      'bg-gray-200 border border-black block relative overflow-hidden',\n      // Shape classes\n      isText && 'h-5 leading-normal',\n      isCircular && 'rounded-full min-w-10 min-h-10',\n      shape === 'rectangular' && 'min-w-50 min-h-30',\n      // Variant classes\n      variant === 'rounded' && !isCircular && 'rounded',\n      // Animation classes\n      animation === 'pulse' && 'animate-pulse',\n      animation === 'wave' && 'bg-gradient-to-r from-gray-200 via-gray-100 to-gray-200 bg-[length:200%_100%] animate-[wave_1.6s_linear_infinite]',\n      className\n    )\n\n    // For text skeleton with multiple lines\n    if (isText && lines > 1) {\n      const textLines = Array.from({ length: lines }, (_, index) => {\n        const isLastLine = index === lines - 1\n        const lineWidth = isLastLine ? '75%' : '100%'\n        \n        return (\n          <div\n            key={index}\n            className={clsx(\n              'bg-gray-200 border border-black block relative overflow-hidden h-5 leading-normal',\n              animation === 'pulse' && 'animate-pulse',\n              animation === 'wave' && 'bg-gradient-to-r from-gray-200 via-gray-100 to-gray-200 bg-[length:200%_100%] animate-[wave_1.6s_linear_infinite]',\n              variant === 'rounded' && 'rounded'\n            )}\n            style={{ \n              width: lineWidth,\n              marginBottom: index < lines - 1 ? '8px' : 0,\n              fontFamily: 'JetBrains Mono, monospace',\n              fontWeight: 'bold'\n            }}\n            aria-hidden=\"true\"\n          />\n        )\n      })\n\n      return (\n        <div\n          ref={ref}\n          className=\"flex flex-col w-full\"\n          role=\"status\"\n          aria-label=\"Loading content\"\n          style={{\n            fontFamily: 'JetBrains Mono, monospace',\n            fontWeight: 'bold'\n          }}\n          {...props}\n        >\n          {textLines}\n        </div>\n      )\n    }\n\n    // Single skeleton element\n    return (\n      <div\n        ref={ref}\n        className={baseClasses}\n        style={dimensionStyles}\n        role=\"status\"\n        aria-label=\"Loading content\"\n        aria-hidden=\"true\"\n        {...props}\n      />\n    )\n  }\n)\n\nSkeleton.displayName = 'Skeleton'"],"names":["r","e","t","f","n","o","clsx","Button","forwardRef","children","className","variant","size","fullWidth","loading","leftIcon","rightIcon","brutalistShadow","glitch","disabled","props","ref","jsxs","styles","jsx","Input","readOnly","type","inputElement","InputOTP","length","value","onChange","onComplete","autoFocus","placeholder","otp","setOtp","useState","arr","inputRefs","useRef","useEffect","focusInput","index","_a","_b","handleChange","val","newOtp","otpValue","handleKeyDown","handlePaste","pastedData","char","i","lastFilledIndex","_","el","Textarea","autoResize","showCharacterCount","maxCharacters","minRows","maxRows","width","minWidth","maxWidth","defaultValue","internalValue","setInternalValue","textareaRef","isControlled","currentValue","charCount","setRefs","useCallback","element","adjustHeight","textarea","scrollHeight","minHeight","maxHeight","handleResize","newValue","isOverLimit","getWidthValue","wrapperStyle","isOptionGroup","option","CustomSelect","options","onBlur","onFocus","name","id","isOpen","setIsOpen","selectedValue","setSelectedValue","focusedIndex","setFocusedIndex","dropdownRef","triggerRef","useImperativeHandle","flatOptions","opt","handleClickOutside","event","handleToggle","handleOptionSelect","optionValue","prev","selectedOption","displayValue","groupIndex","flatIndex","fo","Select","customArrow","useCustomDropdown","onValueChange","processedOptions","React","child","label","groupLabel","groupOptions","optionChild","syntheticEvent","selectElement","Checkbox","indeterminate","error","internalRef","checkboxRef","checkbox","checkboxId","RadioGroupContext","createContext","RadioGroup","controlledValue","direction","uncontrolledValue","setUncontrolledValue","Radio","propSize","propDisabled","propError","propShadow","context","useContext","groupValue","groupDisabled","groupError","groupSize","groupShadow","isChecked","radioId","Switch","labelPosition","controlledChecked","defaultChecked","onCheckedChange","internalChecked","setInternalChecked","newChecked","switchId","isDisabled","switchElement","labelElement","Toggle","controlledPressed","defaultPressed","onPressedChange","onClick","asChild","internalPressed","setInternalPressed","isPressed","handleClick","newPressed","Comp","HoverCardContext","useHoverCard","HoverCard","defaultOpen","controlledOpen","onOpenChange","openDelay","closeDelay","internalOpen","setInternalOpen","open","openTimerRef","closeTimerRef","setOpen","newOpen","timer","HoverCardTrigger","_ref","triggerProps","HoverCardContent","side","align","sideOffset","alignOffset","collisionBoundary","hideWhenDetached","contentRef","position","setPosition","actualSide","setActualSide","handleMouseEnter","handleMouseLeave","updatePosition","trigger","content","triggerRect","contentRect","viewportWidth","viewportHeight","top","left","finalSide","variantElementMap","Typography","weight","transform","color","family","truncate","Component","TypographyH1","TypographyH2","TypographyH3","TypographyH4","TypographyP","TypographyLead","TypographyLarge","TypographySmall","TypographyMuted","TypographyBlockquote","TypographyCode","TypographyList","CommandContext","useCommand","Command","onSelect","filter","shouldFilter","search","setSearch","selectedIndex","setSelectedIndex","items","setItems","visibleCount","setVisibleCount","currentSearch","handleSearchChange","newSearch","CommandInput","CommandList","CommandEmpty","CommandGroup","heading","CommandItem","keywords","onItemSelect","itemIndex","item","newItems","isSelected","shouldShow","searchLower","keyword","CommandSeparator","Slider","orientation","showValue","marks","min","max","step","propValue","trackClassName","thumbClassName","valueClassName","setValue","sliderRef","percentage","renderMarks","normalizedMarks","mark","markPercentage","markStyle","sliderStyle","Avatar","src","alt","initials","icon","status","clickable","imageError","setImageError","imageLoaded","setImageLoaded","handleImageError","handleImageLoad","hasImage","hasInitials","hasIcon","showImage","showInitials","showIcon","displayInitials","defaultIcon","isClickable","Badge","dismissible","onDismiss","isDot","isDismissible","handleDismiss","dismissIcon","Card","padding","hover","CardHeader","CardBody","CardFooter","CardComponent","Alert","dismissed","setDismissed","isExiting","setIsExiting","AlertIcon","DefaultIcon","AlertContent","AlertTitle","AlertDescription","AlertActions","AlertComponent","AlertStack","gap","Progress","showLabel","progressValue","isCircular","labelText","boxSize","pathLength","dashOffset","progressBarStyles","commonClasses","progressRole","ariaValueNow","ariaValueMin","ariaValueMax","ariaLabel","strokeWidth","svgSize","cornerSize","Skeleton","shape","animation","height","lines","style","isText","dimensionStyles","baseClasses","textLines","lineWidth","Tooltip","showDelay","hideDelay","controlledVisible","onVisibilityChange","showArrow","visible","setVisible","actualPosition","setActualPosition","coords","setCoords","tooltipRef","showTimeoutRef","hideTimeoutRef","isVisible","calculatePosition","tooltipRect","scrollX","scrollY","finalPosition","x","y","spaceTop","spaceBottom","spaceLeft","spaceRight","showTooltip","hideTooltip","handleScroll","triggerElement","childRef","tooltipPortal","createPortal","Fragment","PopoverContext","Popover","closeOnClickOutside","closeOnEscape","initialFocus","popoverRef","previousActiveElementRef","popoverRect","openPopover","closePopover","target","handleFocusManagement","focusableElements","initialElement","handleFocusTrap","firstElement","lastElement","_e","contextValue","popoverPortal","PopoverContent","PopoverHeader","PopoverBody","PopoverFooter","usePopover","Separator","thickness","isHorizontal","CLASSIC_THEME","NEON_THEME","PASTEL_THEME","DARK_THEME","RETRO_THEME","NATURE_THEME","OCEAN_THEME","MONOCHROME_THEME","AVAILABLE_THEMES","DEFAULT_THEME","getThemeById","theme","CSS_VARIABLES_MAP","applyTheme","root","colorKey","colorValue","cssVariable","generateRandomTheme","randomId","randomColors","getRandomColorFromThemes","generateThemeCSS","generateThemeJS","generateCSSVariablesCode","generateReactThemeCode","generateThemeFile","generateAppFile","componentName","componentImport","componentUsage","generateMultiFileCode","componentCode","saveThemeToStorage","loadThemeFromStorage","savedTheme","isValidTheme","themeObj","prop","getCurrentThemeFromDOM","computedStyle","currentColors","resetToDefaultTheme","ThemeContext","ThemeProvider","initialTheme","enablePersistence","currentTheme","setCurrentTheme","randomTheme","useTheme","useThemeColors","useIsThemeActive","themeId","useThemeSwitcher","setTheme","ThemePicker","showCode","onThemeChange","availableThemes","randomizeTheme","resetToDefault","showCodeSection","setShowCodeSection","codeType","setCodeType","copyFeedback","setCopyFeedback","handleThemeSelect","handleRandomize","handleReset","copyToClipboard","text","generateCode","getPreviewColors","colorName","Table","hoverable","TableHead","sticky","TableBody","TableRow","TableHeader","sortable","sortDirection","onSort","TableCell","numeric","TableNamespace","Spinner","speed","renderSpinner","ToastContext","ToastProvider","maxToasts","toasts","setToasts","showToast","toast","newToast","hideToast","hideAllToasts","registerToastStore","toastStore","ToastContainer","ToastItem","title","message","duration","action","getIcon","useToast","store","DialogContext","Dialog","backdrop","closeOnBackdropClick","animate","dialogRef","close","handleBackdropClick","DialogHeader","DialogTitle","DialogBody","DialogFooter","DialogClose","useDialog","DialogNamespace","DrawerContext","useDrawer","Drawer","handleOpenChange","DrawerTrigger","DrawerContent","showOverlay","closeOnOverlayClick","handleEscape","originalStyle","activeElement","drawerContent","focusableElement","DrawerHeader","DrawerTitle","DrawerDescription","DrawerBody","DrawerFooter","DrawerClose","DrawerWithSubComponents","DropdownContext","Dropdown","offset","closeOnItemClick","menuContent","DropdownMenu","dropdownRect","main","alignment","toggleDropdown","closeDropdown","rect","DropdownItem","destructive","shortcut","DropdownSeparator","DropdownLabel","useDropdown","TabsContext","Tabs","activeTab","setActiveTab","TabsList","TabsTrigger","isActive","TabsContent","forceMount","useTabs","TabsNamespace","Container","centered","Stack","justify","wrap","Breadcrumb","separator","isLast","BreadcrumbItem","isCurrentPage","BreadcrumbLink","BreadcrumbPage","SidebarContext","Sidebar","collapsible","collapsed","_onCollapsedChange","SidebarHeader","SidebarContent","SidebarFooter","SidebarGroup","SidebarGroupLabel","SidebarGroupContent","SidebarMenu","SidebarMenuItem","SidebarMenuButton","useSidebar","Navigation","vertical","NavigationList","NavigationItem","NavigationLink","href","NavigationSeparator","TableOfContents","showTitle","TableOfContentsList","TableOfContentsItem","level","TableOfContentsLink","AccordionContext","AccordionItemContext","Accordion","handleValueChange","AccordionItem","itemDisabled","accordionValue","accordionDisabled","baseId","useId","triggerId","contentId","toggle","v","AccordionTrigger","hideIcon","itemContext","accordionContext","DefaultChevronIcon","AccordionContent","AccordionComponent","ComboboxContext","useCombobox","Combobox","emptyMessage","searchPlaceholder","searchValue","setSearchValue","highlightedIndex","setHighlightedIndex","filteredOptions","ComboboxTrigger","triggerPlaceholder","contextPlaceholder","finalPlaceholder","ComboboxContent","contentSearchPlaceholder","contentEmptyMessage","contextSearchPlaceholder","contextEmptyMessage","finalSearchPlaceholder","finalEmptyMessage","handleUpdate","ComboboxOption","optionIndex","isHighlighted","ComboboxWithSubComponents","BarChart","data","subtitle","showValues","showGrid","animated","showContainer","borderStyle","maxValue","d","config","headerHeight","actualChartHeight","defaultColors","barHeight","LineChart","lineColor","showDots","smooth","minValue","valueRange","pathData","points","point","path","cp1x","cp1y","cp2x","cp2y","dotSize","PieChart","showLabels","total","sum","radius","centerX","centerY","cumulativeAngle","slices","angle","startAngle","endAngle","startAngleRad","endAngleRad","x1","y1","x2","y2","largeArcFlag","labelAngle","labelRadius","labelX","labelY","slice","AreaChart","fillColor","fillOpacity","generateAreaPath","linePath","areaPath","AspectRatio","ratio","objectFit","backgroundColor","paddingBottom","DOTS","usePaginationRange","currentPage","totalPages","siblingCount","boundaryCount","useMemo","leftSiblingIndex","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPages","lastPages","leftItemCount","rightItemCount","rightRange","middleRange","Pagination","showPrevNext","showFirstLast","labels","paginationRange","page","pageNumber","ContextMenuContext","useContextMenu","ContextMenu","onOpen","onClose","ContextMenuTrigger","ContextMenuContent","collisionPadding","avoidCollisions","container","sizeProp","variantProp","rest","contextSize","contextVariant","adjustedPosition","setAdjustedPosition","node","ContextMenuItem","closeOnSelect","checked","dotted","setIsHighlighted","ContextMenuSeparator","ContextMenuLabel","ContextMenuSub","parentContext","hoverTimeoutRef","closeTimeoutRef","handleOpen","handleKeepOpen","handleClose","ContextMenuSubTrigger","ContextMenuSubContent","onMouseEnter","onMouseLeave","elementRef","ContextMenuNamespace","SheetContext","useSheet","Sheet","SheetTrigger","SheetContent","onEscapeKeyDown","onPointerDownOutside","onInteractOutside","onOpenAutoFocus","onCloseAutoFocus","overlayRef","previousActiveElement","firstFocusable","focusEvent","handlePointerDown","overlay","SheetHeader","SheetTitle","SheetDescription","SheetFooter","SheetClose","SheetNamespace","CarouselContext","useCarousel","Carousel","autoPlay","autoPlayInterval","loop","currentIndex","setCurrentIndexState","totalItems","setTotalItems","setCurrentIndex","newIndex","interval","CarouselContent","CarouselControls","CarouselPrevious","CarouselNext","CarouselIndicators","CarouselComponent","ChartContext","useChart","Chart","showBorder","showShadow","aspectRatio","chartStyle","ChartHeader","ChartTitle","ChartSubtitle","ChartContent","ChartLegend","ChartFooter","ChartComponent","shapes","shapesList","sizeClasses","variantClasses","shadowClasses","glitchClasses","widthClasses","loadingClasses","combinedClasses","paddingClasses","interactionClasses","headerClasses","bodyClasses","footerClasses","iconPadding","colorClasses","typeVariantClasses","dismissibleClasses","labelSizeClasses","containerClasses","checkboxClasses","inputClasses","checkmarkClasses","indeterminateLineClasses","labelClasses","textSizeClasses","statusSizeClasses","statusColorClasses","avatarClasses","statusClasses","trackColorClasses","circularClasses","strokeColorClasses","trackStrokeClasses","linearClasses","trackClasses","barClasses","speedClasses","thicknessClasses","styleClasses","lineClasses","getLineStyle"],"mappings":"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","x_google_ignoreList":[0]}