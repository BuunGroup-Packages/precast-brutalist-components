{"version":3,"file":"index.js","sources":["../../../node_modules/clsx/dist/clsx.mjs","../src/button/Button.tsx","../src/input/Input.tsx","../src/input-otp/InputOTP.tsx","../src/textarea/Textarea.tsx","../src/select/CustomSelect.tsx","../src/select/Select.tsx","../src/checkbox/Checkbox.tsx","../src/radio/Radio.tsx","../src/switch/Switch.tsx","../src/toggle/Toggle.tsx","../src/hover-card/HoverCard.tsx","../src/typography/Typography.tsx","../src/command/Command.tsx","../src/slider/Slider.tsx","../src/avatar/Avatar.tsx","../src/badge/Badge.tsx","../src/card/Card.tsx","../src/alert/Alert.tsx","../src/alert/AlertStack.tsx","../src/progress/Progress.tsx","../src/skeleton/Skeleton.tsx","../src/tooltip/Tooltip.tsx","../src/popover/Popover.tsx","../src/separator/Separator.tsx","../src/theme/themes.ts","../src/theme/types.ts","../src/theme/utils.ts","../src/theme/ThemeContext.tsx","../src/theme/ThemePicker.tsx","../src/table/Table.tsx","../src/spinner/Spinner.tsx","../src/toast/Toast.tsx","../src/dialog/Dialog.tsx","../src/drawer/Drawer.tsx","../src/dropdown/Dropdown.tsx","../src/tabs/Tabs.tsx","../src/container/Container.tsx","../src/stack/Stack.tsx","../src/breadcrumb/Breadcrumb.tsx","../src/sidebar/Sidebar.tsx","../src/navigation/Navigation.tsx","../src/table-of-contents/TableOfContents.tsx","../src/accordion/Accordion.tsx","../src/combobox/Combobox.tsx","../src/bar-chart/BarChart.tsx","../src/line-chart/LineChart.tsx","../src/pie-chart/PieChart.tsx","../src/area-chart/AreaChart.tsx","../src/aspect-ratio/AspectRatio.tsx","../src/pagination/Pagination.tsx","../src/context-menu/ContextMenu.tsx","../src/sheet/Sheet.tsx","../src/carousel/Carousel.tsx","../src/chart/Chart.tsx","../src/shapes/index.ts","../src/tailwind/button/Button.tsx","../src/tailwind/aspect-ratio/AspectRatio.tsx","../src/tailwind/card/Card.tsx","../src/tailwind/input/Input.tsx","../src/tailwind/badge/Badge.tsx","../src/tailwind/alert/Alert.tsx","../src/tailwind/checkbox/Checkbox.tsx","../src/tailwind/avatar/Avatar.tsx","../src/tailwind/progress/Progress.tsx","../src/tailwind/spinner/Spinner.tsx","../src/tailwind/separator/Separator.tsx","../src/tailwind/skeleton/Skeleton.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React, { forwardRef, ButtonHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Button.module.css'\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'default' | 'destructive' | 'outline' | 'ghost' | 'brutal' | 'primary' | 'secondary' | 'danger'\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  fullWidth?: boolean\n  loading?: boolean\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n  brutalistShadow?: boolean\n  glitch?: boolean\n}\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      children,\n      className,\n      variant = 'default',\n      size = 'md',\n      fullWidth = false,\n      loading = false,\n      leftIcon,\n      rightIcon,\n      brutalistShadow = true,\n      glitch = false,\n      disabled,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <button\n        ref={ref}\n        className={clsx(\n          styles.button,\n          styles[variant],\n          styles[size],\n          {\n            [styles.fullWidth]: fullWidth,\n            [styles.loading]: loading,\n            [styles.withShadow]: brutalistShadow,\n            [styles.glitch]: glitch,\n            [styles.disabled]: disabled || loading,\n          },\n          className\n        )}\n        disabled={disabled || loading}\n        data-text={glitch ? children : undefined}\n        {...props}\n      >\n        {loading && <span className={styles.loader} />}\n        {leftIcon && <span className={styles.icon}>{leftIcon}</span>}\n        <span className={styles.content}>{children}</span>\n        {rightIcon && <span className={styles.icon}>{rightIcon}</span>}\n      </button>\n    )\n  }\n)\n\nButton.displayName = 'Button'","import React, { forwardRef, InputHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Input.module.css'\n\nexport interface InputProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      leftIcon,\n      rightIcon,\n      fullWidth = false,\n      brutalistShadow = true,\n      disabled,\n      readOnly,\n      type = 'text',\n      ...props\n    },\n    ref\n  ) => {\n    const inputElement = (\n      <input\n        ref={ref}\n        type={type}\n        className={clsx(\n          styles.input,\n          styles[variant],\n          styles[size],\n          {\n            [styles.withLeftIcon]: leftIcon,\n            [styles.withRightIcon]: rightIcon,\n            [styles.disabled]: disabled,\n            [styles.readOnly]: readOnly,\n            [styles.withShadow]: brutalistShadow && !disabled && !readOnly,\n          },\n          className\n        )}\n        disabled={disabled}\n        readOnly={readOnly}\n        {...props}\n      />\n    )\n\n    if (leftIcon || rightIcon) {\n      return (\n        <div\n          className={clsx(\n            styles.inputWrapper,\n            styles[variant],\n            styles[size],\n            {\n              [styles.fullWidth]: fullWidth,\n              [styles.disabled]: disabled,\n              [styles.readOnly]: readOnly,\n              [styles.withShadow]: brutalistShadow && !disabled && !readOnly,\n            }\n          )}\n        >\n          {leftIcon && (\n            <span className={clsx(styles.icon, styles.leftIcon)}>{leftIcon}</span>\n          )}\n          {inputElement}\n          {rightIcon && (\n            <span className={clsx(styles.icon, styles.rightIcon)}>{rightIcon}</span>\n          )}\n        </div>\n      )\n    }\n\n    return inputElement\n  }\n)\n\nInput.displayName = 'Input'","import React, { forwardRef, useRef, useState, useEffect, KeyboardEvent, ClipboardEvent } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './InputOTP.module.css'\n\nexport interface InputOTPProps {\n  length?: number\n  value?: string\n  onChange?: (value: string) => void\n  onComplete?: (value: string) => void\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  disabled?: boolean\n  autoFocus?: boolean\n  type?: 'text' | 'number'\n  placeholder?: string\n  className?: string\n  brutalistShadow?: boolean\n}\n\nexport const InputOTP = forwardRef<HTMLDivElement, InputOTPProps>(\n  (\n    {\n      length = 6,\n      value = '',\n      onChange,\n      onComplete,\n      variant = 'default',\n      size = 'md',\n      disabled = false,\n      autoFocus = false,\n      type = 'text',\n      placeholder = 'â€¢',\n      className,\n      brutalistShadow = true,\n    },\n    ref\n  ) => {\n    const [otp, setOtp] = useState<string[]>(() => {\n      const arr = value.split('').slice(0, length)\n      return [...arr, ...Array(length - arr.length).fill('')]\n    })\n    const inputRefs = useRef<(HTMLInputElement | null)[]>([])\n\n    useEffect(() => {\n      const arr = value.split('').slice(0, length)\n      setOtp([...arr, ...Array(length - arr.length).fill('')])\n    }, [value, length])\n\n    const focusInput = (index: number) => {\n      if (inputRefs.current[index]) {\n        inputRefs.current[index]?.focus()\n        inputRefs.current[index]?.select()\n      }\n    }\n\n    const handleChange = (index: number, val: string) => {\n      if (type === 'number' && val && !/^\\d+$/.test(val)) return\n\n      const newOtp = [...otp]\n      newOtp[index] = val.slice(-1) // Only take last character\n\n      setOtp(newOtp)\n      const otpValue = newOtp.join('')\n      onChange?.(otpValue)\n\n      // Move to next input if value entered\n      if (val && index < length - 1) {\n        focusInput(index + 1)\n      }\n\n      // Check if complete\n      if (otpValue.length === length && !newOtp.includes('')) {\n        onComplete?.(otpValue)\n      }\n    }\n\n    const handleKeyDown = (index: number, e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Backspace' && !otp[index] && index > 0) {\n        e.preventDefault()\n        focusInput(index - 1)\n      } else if (e.key === 'ArrowLeft' && index > 0) {\n        e.preventDefault()\n        focusInput(index - 1)\n      } else if (e.key === 'ArrowRight' && index < length - 1) {\n        e.preventDefault()\n        focusInput(index + 1)\n      }\n    }\n\n    const handlePaste = (e: ClipboardEvent<HTMLInputElement>) => {\n      e.preventDefault()\n      const pastedData = e.clipboardData.getData('text/plain').slice(0, length)\n      \n      if (type === 'number' && !/^\\d+$/.test(pastedData)) return\n\n      const newOtp = [...otp]\n      pastedData.split('').forEach((char, i) => {\n        if (i < length) {\n          newOtp[i] = char\n        }\n      })\n\n      setOtp(newOtp)\n      const otpValue = newOtp.join('')\n      onChange?.(otpValue)\n\n      // Focus last filled input or last input\n      const lastFilledIndex = newOtp.findLastIndex(val => val !== '')\n      focusInput(Math.min(lastFilledIndex + 1, length - 1))\n\n      // Check if complete\n      if (otpValue.length === length && !newOtp.includes('')) {\n        onComplete?.(otpValue)\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.container,\n          styles[size],\n          className\n        )}\n      >\n        {Array.from({ length }).map((_, index) => (\n          <input\n            key={index}\n            ref={el => inputRefs.current[index] = el}\n            type=\"text\"\n            inputMode={type === 'number' ? 'numeric' : 'text'}\n            pattern={type === 'number' ? '\\\\d*' : undefined}\n            maxLength={1}\n            value={otp[index]}\n            onChange={e => handleChange(index, e.target.value)}\n            onKeyDown={e => handleKeyDown(index, e)}\n            onPaste={index === 0 ? handlePaste : undefined}\n            onFocus={e => e.target.select()}\n            placeholder={placeholder}\n            disabled={disabled}\n            autoFocus={autoFocus && index === 0}\n            className={clsx(\n              styles.input,\n              styles[variant],\n              styles[size],\n              {\n                [styles.filled]: otp[index],\n                [styles.disabled]: disabled,\n                [styles.withShadow]: brutalistShadow && !disabled,\n              }\n            )}\n          />\n        ))}\n      </div>\n    )\n  }\n)\n\nInputOTP.displayName = 'InputOTP'","import React, { forwardRef, TextareaHTMLAttributes, useEffect, useRef, useState, useCallback } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Textarea.module.css'\n\nexport interface TextareaProps extends Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'size'> {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  autoResize?: boolean\n  showCharacterCount?: boolean\n  maxCharacters?: number\n  minRows?: number\n  maxRows?: number\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n  width?: string | number\n  minWidth?: string | number\n  maxWidth?: string | number\n}\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      autoResize = false,\n      showCharacterCount = false,\n      maxCharacters,\n      minRows = 3,\n      maxRows = 10,\n      fullWidth = false,\n      brutalistShadow = true,\n      width,\n      minWidth,\n      maxWidth,\n      disabled,\n      readOnly,\n      value,\n      defaultValue,\n      onChange,\n      ...props\n    },\n    ref\n  ) => {\n    const [internalValue, setInternalValue] = useState(defaultValue || '')\n    const textareaRef = useRef<HTMLTextAreaElement | null>(null)\n\n    // Determine controlled vs uncontrolled\n    const isControlled = value !== undefined\n    const currentValue = isControlled ? value : internalValue\n    const charCount = String(currentValue).length\n\n    // Handle ref forwarding\n    const setRefs = useCallback(\n      (element: HTMLTextAreaElement | null) => {\n        textareaRef.current = element\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(element)\n          } else {\n            ref.current = element\n          }\n        }\n      },\n      [ref]\n    )\n\n    // Auto-resize functionality\n    const adjustHeight = useCallback(() => {\n      const textarea = textareaRef.current\n      if (!textarea || !autoResize) return\n\n      // Reset to auto to get natural scroll height\n      textarea.style.height = 'auto'\n      const scrollHeight = textarea.scrollHeight\n\n      // Set minimum height based on minRows  \n      const minHeight = `${minRows * 1.5}rem` // Simple rem-based calculation\n      const maxHeight = `${maxRows * 1.5}rem`\n\n      if (scrollHeight <= parseInt(minHeight) * 16) {\n        textarea.style.height = minHeight\n        textarea.style.overflowY = 'hidden'\n      } else if (scrollHeight >= parseInt(maxHeight) * 16) {\n        textarea.style.height = maxHeight\n        textarea.style.overflowY = 'auto'\n      } else {\n        textarea.style.height = `${scrollHeight}px`\n        textarea.style.overflowY = 'hidden'\n      }\n    }, [autoResize, minRows, maxRows])\n\n    // Adjust height on mount and when value changes\n    useEffect(() => {\n      adjustHeight()\n    }, [currentValue, adjustHeight])\n\n    // Adjust height on window resize\n    useEffect(() => {\n      if (!autoResize) return\n\n      const handleResize = () => adjustHeight()\n      window.addEventListener('resize', handleResize)\n      return () => window.removeEventListener('resize', handleResize)\n    }, [autoResize, adjustHeight])\n\n    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const newValue = e.target.value\n\n      // Enforce max characters if specified\n      if (maxCharacters && newValue.length > maxCharacters) {\n        return\n      }\n\n      if (!isControlled) {\n        setInternalValue(newValue)\n      }\n\n      onChange?.(e)\n      \n      // Trigger resize on change for better responsiveness\n      if (autoResize) {\n        setTimeout(() => adjustHeight(), 0)\n      }\n    }\n\n    const isOverLimit = maxCharacters ? charCount > maxCharacters : false\n\n    // Convert width values to CSS strings\n    const getWidthValue = (value: string | number | undefined) => {\n      if (value === undefined) return undefined\n      return typeof value === 'number' ? `${value}px` : value\n    }\n\n    const wrapperStyle: React.CSSProperties = {\n      width: getWidthValue(width),\n      minWidth: getWidthValue(minWidth),\n      maxWidth: getWidthValue(maxWidth),\n    }\n\n    return (\n      <div\n        className={clsx(\n          styles.wrapper,\n          {\n            [styles.fullWidth]: fullWidth,\n          }\n        )}\n        style={wrapperStyle}\n      >\n        <textarea\n          ref={setRefs}\n          className={clsx(\n            styles.textarea,\n            styles[variant],\n            styles[size],\n            {\n              [styles.disabled]: disabled,\n              [styles.readOnly]: readOnly,\n              [styles.withShadow]: brutalistShadow && !disabled && !readOnly,\n              [styles.autoResize]: autoResize,\n              [styles.overLimit]: isOverLimit,\n            },\n            className\n          )}\n          disabled={disabled}\n          readOnly={readOnly}\n          value={currentValue}\n          onChange={handleChange}\n          rows={!autoResize ? minRows : undefined}\n          {...props}\n        />\n        {showCharacterCount && (\n          <div\n            className={clsx(\n              styles.characterCount,\n              {\n                [styles.error]: isOverLimit || variant === 'error',\n                [styles.success]: variant === 'success',\n              }\n            )}\n          >\n            <span className={styles.count}>\n              {charCount}\n              {maxCharacters && ` / ${maxCharacters}`}\n            </span>\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nTextarea.displayName = 'Textarea'","import React, { useState, useRef, useEffect, forwardRef, useImperativeHandle } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './CustomSelect.module.css'\n\nexport interface SelectOption {\n  value: string\n  label: string\n  disabled?: boolean\n}\n\nexport interface SelectOptionGroup {\n  label: string\n  options: SelectOption[]\n}\n\nexport interface CustomSelectProps {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  options?: (SelectOption | SelectOptionGroup)[]\n  placeholder?: string\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n  disabled?: boolean\n  value?: string\n  defaultValue?: string\n  onChange?: (value: string) => void\n  onBlur?: () => void\n  onFocus?: () => void\n  className?: string\n  name?: string\n  id?: string\n}\n\nfunction isOptionGroup(option: SelectOption | SelectOptionGroup): option is SelectOptionGroup {\n  return 'options' in option\n}\n\nexport const CustomSelect = forwardRef<HTMLDivElement, CustomSelectProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      options = [],\n      placeholder = 'Select an option...',\n      fullWidth = false,\n      brutalistShadow = true,\n      disabled = false,\n      value,\n      defaultValue,\n      onChange,\n      onBlur,\n      onFocus,\n      name,\n      id,\n    },\n    ref\n  ) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [selectedValue, setSelectedValue] = useState(value || defaultValue || '')\n    const [focusedIndex, setFocusedIndex] = useState(-1)\n    const dropdownRef = useRef<HTMLDivElement>(null)\n    const triggerRef = useRef<HTMLButtonElement>(null)\n\n    useImperativeHandle(ref, () => dropdownRef.current!, [])\n\n    // Flatten options for keyboard navigation\n    const flatOptions: SelectOption[] = []\n    options.forEach(option => {\n      if (isOptionGroup(option)) {\n        flatOptions.push(...option.options.filter(opt => !opt.disabled))\n      } else if (!option.disabled) {\n        flatOptions.push(option)\n      }\n    })\n\n    // Update selectedValue when value prop changes\n    useEffect(() => {\n      if (value !== undefined) {\n        setSelectedValue(value)\n      }\n    }, [value])\n\n    // Close dropdown when clicking outside\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n          setIsOpen(false)\n          setFocusedIndex(-1)\n        }\n      }\n\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside)\n        return () => document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }, [isOpen])\n\n    const handleToggle = () => {\n      if (disabled) return\n      \n      setIsOpen(!isOpen)\n      setFocusedIndex(-1)\n      \n      if (!isOpen) {\n        onFocus?.()\n      } else {\n        onBlur?.()\n      }\n    }\n\n    const handleOptionSelect = (optionValue: string) => {\n      setSelectedValue(optionValue)\n      setIsOpen(false)\n      setFocusedIndex(-1)\n      onChange?.(optionValue)\n      onBlur?.()\n      triggerRef.current?.focus()\n    }\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      if (disabled) return\n\n      switch (event.key) {\n        case 'Enter':\n        case ' ':\n          event.preventDefault()\n          if (isOpen && focusedIndex >= 0) {\n            handleOptionSelect(flatOptions[focusedIndex].value)\n          } else {\n            setIsOpen(!isOpen)\n          }\n          break\n        case 'Escape':\n          setIsOpen(false)\n          setFocusedIndex(-1)\n          triggerRef.current?.focus()\n          break\n        case 'ArrowDown':\n          event.preventDefault()\n          if (!isOpen) {\n            setIsOpen(true)\n            setFocusedIndex(0)\n          } else {\n            setFocusedIndex(prev => \n              prev < flatOptions.length - 1 ? prev + 1 : prev\n            )\n          }\n          break\n        case 'ArrowUp':\n          event.preventDefault()\n          if (isOpen) {\n            setFocusedIndex(prev => prev > 0 ? prev - 1 : prev)\n          }\n          break\n      }\n    }\n\n    // Find selected option label\n    const selectedOption = flatOptions.find(opt => opt.value === selectedValue)\n    const displayValue = selectedOption?.label || placeholder\n\n    return (\n      <div\n        ref={dropdownRef}\n        className={clsx(\n          styles.selectWrapper,\n          styles[variant],\n          styles[size],\n          {\n            [styles.fullWidth]: fullWidth,\n            [styles.disabled]: disabled,\n            [styles.withShadow]: brutalistShadow && !disabled,\n            [styles.isOpen]: isOpen,\n          },\n          className\n        )}\n      >\n        {/* Hidden input for form submission */}\n        <input\n          type=\"hidden\"\n          name={name}\n          value={selectedValue}\n        />\n        \n        {/* Trigger button */}\n        <button\n          ref={triggerRef}\n          type=\"button\"\n          className={styles.trigger}\n          onClick={handleToggle}\n          onKeyDown={handleKeyDown}\n          disabled={disabled}\n          aria-haspopup=\"listbox\"\n          aria-expanded={isOpen}\n          aria-labelledby={id}\n          id={id}\n        >\n          <span className={clsx(styles.value, { [styles.placeholder]: !selectedOption })}>\n            {displayValue}\n          </span>\n          <div className={styles.arrow}>\n            <svg\n              width=\"12\"\n              height=\"8\"\n              viewBox=\"0 0 12 8\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className={clsx({ [styles.arrowOpen]: isOpen })}\n            >\n              <path\n                d=\"M1 1L6 6L11 1\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n                strokeLinejoin=\"miter\"\n              />\n            </svg>\n          </div>\n        </button>\n\n        {/* Dropdown */}\n        {isOpen && (\n          <div className={styles.dropdown} role=\"listbox\">\n            {options.map((option, groupIndex) => {\n              if (isOptionGroup(option)) {\n                return (\n                  <div key={`group-${groupIndex}`} className={styles.optionGroup}>\n                    <div className={styles.groupLabel}>{option.label}</div>\n                    {option.options.map((opt) => {\n                      const flatIndex = flatOptions.findIndex(fo => fo.value === opt.value)\n                      return (\n                        <button\n                          key={opt.value}\n                          type=\"button\"\n                          className={clsx(\n                            styles.option,\n                            {\n                              [styles.selected]: opt.value === selectedValue,\n                              [styles.focused]: flatIndex === focusedIndex,\n                              [styles.disabled]: opt.disabled,\n                            }\n                          )}\n                          onClick={() => !opt.disabled && handleOptionSelect(opt.value)}\n                          disabled={opt.disabled}\n                          role=\"option\"\n                          aria-selected={opt.value === selectedValue}\n                        >\n                          {opt.label}\n                        </button>\n                      )\n                    })}\n                  </div>\n                )\n              } else {\n                const flatIndex = flatOptions.findIndex(fo => fo.value === option.value)\n                return (\n                  <button\n                    key={option.value}\n                    type=\"button\"\n                    className={clsx(\n                      styles.option,\n                      {\n                        [styles.selected]: option.value === selectedValue,\n                        [styles.focused]: flatIndex === focusedIndex,\n                        [styles.disabled]: option.disabled,\n                      }\n                    )}\n                    onClick={() => !option.disabled && handleOptionSelect(option.value)}\n                    disabled={option.disabled}\n                    role=\"option\"\n                    aria-selected={option.value === selectedValue}\n                  >\n                    {option.label}\n                  </button>\n                )\n              }\n            })}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nCustomSelect.displayName = 'CustomSelect'","import React, { forwardRef, SelectHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport { CustomSelect } from './CustomSelect'\nimport styles from './Select.module.css'\n\nexport interface SelectOption {\n  value: string\n  label: string\n  disabled?: boolean\n}\n\nexport interface SelectOptionGroup {\n  label: string\n  options: SelectOption[]\n}\n\nexport interface SelectProps extends Omit<SelectHTMLAttributes<HTMLSelectElement>, 'size'> {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  options?: (SelectOption | SelectOptionGroup)[]\n  placeholder?: string\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n  customArrow?: boolean\n  useCustomDropdown?: boolean\n  onValueChange?: (value: string) => void\n}\n\nfunction isOptionGroup(option: SelectOption | SelectOptionGroup): option is SelectOptionGroup {\n  return 'options' in option\n}\n\nexport const Select = forwardRef<HTMLSelectElement, SelectProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      options = [],\n      placeholder,\n      fullWidth = false,\n      brutalistShadow = true,\n      customArrow = true,\n      useCustomDropdown = true,\n      onValueChange,\n      disabled,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    // Use custom dropdown by default for better styling\n    if (useCustomDropdown) {\n      // Convert JSX children to options array if options prop is empty\n      let processedOptions = options\n      \n      if (options.length === 0 && children) {\n        processedOptions = []\n        React.Children.forEach(children, (child) => {\n          if (React.isValidElement(child)) {\n            if (child.type === 'option') {\n              const value = child.props.value || ''\n              const label = child.props.children || ''\n              if (value && label) {\n                processedOptions.push({\n                  value: value,\n                  label: label,\n                  disabled: child.props.disabled\n                })\n              }\n            } else if (child.type === 'optgroup') {\n              const groupLabel = child.props.label || ''\n              const groupOptions: SelectOption[] = []\n              \n              React.Children.forEach(child.props.children, (optionChild) => {\n                if (React.isValidElement(optionChild) && optionChild.type === 'option') {\n                  const props = optionChild.props as React.OptionHTMLAttributes<HTMLOptionElement>\n                  const value = props.value || ''\n                  const label = props.children || ''\n                  if (value && label) {\n                    groupOptions.push({\n                      value: String(value),\n                      label: String(label),\n                      disabled: props.disabled\n                    })\n                  }\n                }\n              })\n              \n              if (groupOptions.length > 0) {\n                processedOptions.push({\n                  label: groupLabel,\n                  options: groupOptions\n                })\n              }\n            }\n          }\n        })\n      }\n      \n      return (\n        <CustomSelect\n          variant={variant}\n          size={size}\n          options={processedOptions}\n          placeholder={placeholder}\n          fullWidth={fullWidth}\n          brutalistShadow={brutalistShadow}\n          disabled={disabled}\n          value={props.value as string}\n          defaultValue={props.defaultValue as string}\n          onChange={onValueChange || ((value) => {\n            // Create a synthetic event for compatibility\n            const syntheticEvent = {\n              target: { value },\n              currentTarget: { value }\n            } as React.ChangeEvent<HTMLSelectElement>\n            props.onChange?.(syntheticEvent)\n          })}\n          onBlur={props.onBlur ? () => props.onBlur?.({} as React.FocusEvent<HTMLSelectElement>) : undefined}\n          onFocus={props.onFocus ? () => props.onFocus?.({} as React.FocusEvent<HTMLSelectElement>) : undefined}\n          className={className}\n          name={props.name}\n          id={props.id}\n        />\n      )\n    }\n    const selectElement = (\n      <select\n        ref={ref}\n        className={clsx(\n          styles.select,\n          styles[variant],\n          styles[size],\n          {\n            [styles.disabled]: disabled,\n            [styles.withShadow]: brutalistShadow && !disabled,\n            [styles.fullWidth]: fullWidth,\n            [styles.hasPlaceholder]: placeholder && !props.value && !props.defaultValue,\n          },\n          className\n        )}\n        disabled={disabled}\n        {...props}\n      >\n        {placeholder && (\n          <option value=\"\" disabled hidden>\n            {placeholder}\n          </option>\n        )}\n        {children\n          ? children\n          : options.map((option, index) => {\n              if (isOptionGroup(option)) {\n                return (\n                  <optgroup key={`group-${index}`} label={option.label}>\n                    {option.options.map((opt) => (\n                      <option\n                        key={opt.value}\n                        value={opt.value}\n                        disabled={opt.disabled}\n                      >\n                        {opt.label}\n                      </option>\n                    ))}\n                  </optgroup>\n                )\n              } else {\n                return (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                    disabled={option.disabled}\n                  >\n                    {option.label}\n                  </option>\n                )\n              }\n            })}\n      </select>\n    )\n\n    if (customArrow) {\n      return (\n        <div\n          className={clsx(\n            styles.selectWrapper,\n            styles[variant],\n            styles[size],\n            {\n              [styles.fullWidth]: fullWidth,\n              [styles.disabled]: disabled,\n              [styles.withShadow]: brutalistShadow && !disabled,\n            }\n          )}\n        >\n          {selectElement}\n          <div className={styles.arrow}>\n            <svg\n              width=\"12\"\n              height=\"8\"\n              viewBox=\"0 0 12 8\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M1 1L6 6L11 1\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n                strokeLinejoin=\"miter\"\n              />\n            </svg>\n          </div>\n        </div>\n      )\n    }\n\n    return selectElement\n  }\n)\n\nSelect.displayName = 'Select'","import React, { forwardRef, InputHTMLAttributes, useRef, useEffect } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Checkbox.module.css'\n\nexport interface CheckboxProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'size'> {\n  size?: 'sm' | 'md' | 'lg'\n  label?: React.ReactNode\n  indeterminate?: boolean\n  error?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  (\n    {\n      className,\n      size = 'md',\n      label,\n      indeterminate = false,\n      error = false,\n      brutalistShadow = true,\n      disabled,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    const internalRef = useRef<HTMLInputElement>(null)\n    const checkboxRef = ref || internalRef\n\n    // Handle indeterminate state\n    useEffect(() => {\n      const checkbox = typeof checkboxRef === 'function' ? null : checkboxRef.current\n      if (checkbox) {\n        checkbox.indeterminate = indeterminate\n      }\n    }, [indeterminate, checkboxRef])\n\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`\n\n    return (\n      <div \n        className={clsx(\n          styles.container,\n          styles[size],\n          {\n            [styles.disabled]: disabled,\n            [styles.error]: error,\n          },\n          className\n        )}\n      >\n        <div className={styles.checkboxWrapper}>\n          <input\n            ref={checkboxRef as React.Ref<HTMLInputElement>}\n            type=\"checkbox\"\n            id={checkboxId}\n            className={styles.input}\n            disabled={disabled}\n            aria-invalid={error}\n            {...props}\n          />\n          <div \n            className={clsx(\n              styles.checkbox,\n              {\n                [styles.withShadow]: brutalistShadow,\n                [styles.indeterminate]: indeterminate,\n              }\n            )}\n          >\n            <svg \n              className={styles.checkmark} \n              viewBox=\"0 0 24 24\" \n              fill=\"none\"\n              aria-hidden=\"true\"\n            >\n              <path \n                d=\"M5 13L9 17L19 7\" \n                stroke=\"currentColor\" \n                strokeWidth=\"4\" \n                strokeLinecap=\"square\" \n                strokeLinejoin=\"miter\"\n              />\n            </svg>\n            <div className={styles.indeterminateLine} />\n          </div>\n        </div>\n        {label && (\n          <label htmlFor={checkboxId} className={styles.label}>\n            {label}\n          </label>\n        )}\n      </div>\n    )\n  }\n)\n\nCheckbox.displayName = 'Checkbox'","import React, { forwardRef, InputHTMLAttributes, createContext, useContext, useState } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Radio.module.css'\n\n// RadioGroup Context\ninterface RadioGroupContextValue {\n  name: string\n  value: string | undefined\n  onChange: (value: string) => void\n  disabled?: boolean\n  error?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  brutalistShadow?: boolean\n}\n\nconst RadioGroupContext = createContext<RadioGroupContextValue | undefined>(undefined)\n\n// RadioGroup Component\nexport interface RadioGroupProps {\n  name: string\n  value?: string\n  defaultValue?: string\n  onChange?: (value: string) => void\n  children: React.ReactNode\n  direction?: 'horizontal' | 'vertical'\n  size?: 'sm' | 'md' | 'lg'\n  disabled?: boolean\n  error?: boolean\n  brutalistShadow?: boolean\n  className?: string\n}\n\nexport const RadioGroup: React.FC<RadioGroupProps> = ({\n  name,\n  value: controlledValue,\n  defaultValue,\n  onChange,\n  children,\n  direction = 'vertical',\n  size = 'md',\n  disabled = false,\n  error = false,\n  brutalistShadow = true,\n  className,\n}) => {\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue)\n  const isControlled = controlledValue !== undefined\n  const value = isControlled ? controlledValue : uncontrolledValue\n\n  const handleChange = (newValue: string) => {\n    if (!isControlled) {\n      setUncontrolledValue(newValue)\n    }\n    onChange?.(newValue)\n  }\n\n  return (\n    <RadioGroupContext.Provider \n      value={{ \n        name, \n        value, \n        onChange: handleChange, \n        disabled, \n        error,\n        size,\n        brutalistShadow\n      }}\n    >\n      <div \n        className={clsx(\n          styles.group,\n          styles[direction],\n          {\n            [styles.disabled]: disabled,\n            [styles.error]: error,\n          },\n          className\n        )}\n        role=\"radiogroup\"\n        aria-invalid={error}\n      >\n        {children}\n      </div>\n    </RadioGroupContext.Provider>\n  )\n}\n\n// Radio Component\nexport interface RadioProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'size' | 'onChange'> {\n  value: string\n  label?: React.ReactNode\n  size?: 'sm' | 'md' | 'lg'\n  disabled?: boolean\n  error?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Radio = forwardRef<HTMLInputElement, RadioProps>(\n  (\n    {\n      className,\n      value,\n      label,\n      size: propSize,\n      disabled: propDisabled,\n      error: propError,\n      brutalistShadow: propShadow,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    const context = useContext(RadioGroupContext)\n    \n    if (!context) {\n      throw new Error('Radio must be used within RadioGroup')\n    }\n\n    const { \n      name, \n      value: groupValue, \n      onChange, \n      disabled: groupDisabled, \n      error: groupError,\n      size: groupSize,\n      brutalistShadow: groupShadow\n    } = context\n\n    const size = propSize || groupSize || 'md'\n    const disabled = propDisabled || groupDisabled\n    const error = propError || groupError\n    const brutalistShadow = propShadow !== undefined ? propShadow : groupShadow\n    const isChecked = value === groupValue\n    const radioId = id || `radio-${name}-${value}`\n\n    const handleChange = () => {\n      if (!disabled) {\n        onChange(value)\n      }\n    }\n\n    return (\n      <div \n        className={clsx(\n          styles.container,\n          styles[size],\n          {\n            [styles.disabled]: disabled,\n            [styles.error]: error,\n            [styles.checked]: isChecked,\n          },\n          className\n        )}\n      >\n        <div className={styles.radioWrapper}>\n          <input\n            ref={ref}\n            type=\"radio\"\n            id={radioId}\n            name={name}\n            value={value}\n            checked={isChecked}\n            onChange={() => handleChange()}\n            className={styles.input}\n            disabled={disabled}\n            aria-invalid={error}\n            {...props}\n          />\n          <div \n            className={clsx(\n              styles.radio,\n              {\n                [styles.withShadow]: brutalistShadow,\n              }\n            )}\n          >\n            <div className={styles.indicator} />\n          </div>\n        </div>\n        {label && (\n          <label htmlFor={radioId} className={styles.label}>\n            {label}\n          </label>\n        )}\n      </div>\n    )\n  }\n)\n\nRadio.displayName = 'Radio'","import React, { forwardRef, InputHTMLAttributes, useState, useCallback } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Switch.module.css'\n\nexport interface SwitchProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'size'> {\n  size?: 'sm' | 'md' | 'lg'\n  label?: React.ReactNode\n  labelPosition?: 'left' | 'right'\n  loading?: boolean\n  brutalistShadow?: boolean\n  onCheckedChange?: (checked: boolean) => void\n}\n\nexport const Switch = forwardRef<HTMLInputElement, SwitchProps>(\n  (\n    {\n      className,\n      size = 'md',\n      label,\n      labelPosition = 'right',\n      loading = false,\n      brutalistShadow = true,\n      disabled,\n      checked: controlledChecked,\n      defaultChecked,\n      onChange,\n      onCheckedChange,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    // Handle controlled/uncontrolled state\n    const [internalChecked, setInternalChecked] = useState(defaultChecked ?? false)\n    const isControlled = controlledChecked !== undefined\n    const isChecked = isControlled ? controlledChecked : internalChecked\n\n    const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n      const newChecked = event.target.checked\n      \n      // Update internal state for uncontrolled mode\n      if (!isControlled) {\n        setInternalChecked(newChecked)\n      }\n      \n      // Call event handlers\n      onChange?.(event)\n      onCheckedChange?.(newChecked)\n    }, [isControlled, onChange, onCheckedChange])\n\n    const switchId = id || `switch-${Math.random().toString(36).substr(2, 9)}`\n    const isDisabled = disabled || loading\n\n    const switchElement = (\n      <div className={styles.switchWrapper}>\n        <input\n          ref={ref}\n          type=\"checkbox\"\n          id={switchId}\n          className={styles.input}\n          disabled={isDisabled}\n          checked={isChecked}\n          onChange={handleChange}\n          {...props}\n        />\n        <div \n          className={clsx(\n            styles.switch,\n            {\n              [styles.withShadow]: brutalistShadow,\n              [styles.checked]: isChecked,\n              [styles.loading]: loading,\n            }\n          )}\n        >\n          <div className={styles.thumb}>\n            {loading && (\n              <div className={styles.loadingIndicator} />\n            )}\n          </div>\n        </div>\n      </div>\n    )\n\n    const labelElement = label && (\n      <label htmlFor={switchId} className={styles.label}>\n        {label}\n      </label>\n    )\n\n    return (\n      <div \n        className={clsx(\n          styles.container,\n          styles[size],\n          {\n            [styles.disabled]: isDisabled,\n            [styles.labelLeft]: labelPosition === 'left',\n          },\n          className\n        )}\n      >\n        {labelPosition === 'left' && labelElement}\n        {switchElement}\n        {labelPosition === 'right' && labelElement}\n      </div>\n    )\n  }\n)\n\nSwitch.displayName = 'Switch'","import React, { forwardRef, ButtonHTMLAttributes, useState, useCallback } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Toggle.module.css'\n\nexport interface ToggleProps extends Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'type'> {\n  variant?: 'default' | 'brutal' | 'outline'\n  size?: 'sm' | 'md' | 'lg'\n  pressed?: boolean\n  defaultPressed?: boolean\n  onPressedChange?: (pressed: boolean) => void\n  brutalistShadow?: boolean\n  asChild?: boolean\n}\n\nexport const Toggle = forwardRef<HTMLButtonElement, ToggleProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      pressed: controlledPressed,\n      defaultPressed = false,\n      onPressedChange,\n      onClick,\n      disabled,\n      brutalistShadow = true,\n      children,\n      asChild = false,\n      ...props\n    },\n    ref\n  ) => {\n    // Handle controlled/uncontrolled state\n    const [internalPressed, setInternalPressed] = useState(defaultPressed)\n    const isControlled = controlledPressed !== undefined\n    const isPressed = isControlled ? controlledPressed : internalPressed\n\n    const handleClick = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n      if (disabled) return\n      \n      const newPressed = !isPressed\n      \n      // Update internal state for uncontrolled mode\n      if (!isControlled) {\n        setInternalPressed(newPressed)\n      }\n      \n      // Call event handlers\n      onClick?.(event)\n      onPressedChange?.(newPressed)\n    }, [isControlled, isPressed, onClick, onPressedChange, disabled])\n\n    const Comp = asChild ? 'span' : 'button'\n\n    return (\n      <Comp\n        ref={ref}\n        type={asChild ? undefined : 'button'}\n        role=\"button\"\n        aria-pressed={isPressed}\n        data-state={isPressed ? 'on' : 'off'}\n        className={clsx(\n          styles.toggle,\n          styles[variant],\n          styles[size],\n          {\n            [styles.pressed]: isPressed,\n            [styles.disabled]: disabled,\n            [styles.withShadow]: brutalistShadow && !disabled,\n          },\n          className\n        )}\n        onClick={handleClick}\n        disabled={disabled}\n        {...props}\n      >\n        {children}\n      </Comp>\n    )\n  }\n)\n\nToggle.displayName = 'Toggle'","import React, { forwardRef, useState, useRef, useEffect, ReactNode } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './HoverCard.module.css'\n\n// Context for compound components\nconst HoverCardContext = React.createContext<{\n  open: boolean\n  setOpen: (open: boolean) => void\n  triggerRef: React.RefObject<HTMLDivElement>\n} | null>(null)\n\nconst useHoverCard = () => {\n  const context = React.useContext(HoverCardContext)\n  if (!context) {\n    throw new Error('HoverCard components must be used within a HoverCard')\n  }\n  return context\n}\n\nexport interface HoverCardProps {\n  children: ReactNode\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  openDelay?: number\n  closeDelay?: number\n}\n\nexport const HoverCard: React.FC<HoverCardProps> & {\n  Trigger: typeof HoverCardTrigger\n  Content: typeof HoverCardContent\n} = ({\n  children,\n  defaultOpen = false,\n  open: controlledOpen,\n  onOpenChange,\n  openDelay = 700,\n  closeDelay = 300\n}) => {\n  const [internalOpen, setInternalOpen] = useState(defaultOpen)\n  const isControlled = controlledOpen !== undefined\n  const open = isControlled ? controlledOpen : internalOpen\n  const triggerRef = useRef<HTMLDivElement>(null)\n  const openTimerRef = useRef<NodeJS.Timeout>()\n  const closeTimerRef = useRef<NodeJS.Timeout>()\n\n  const setOpen = (newOpen: boolean) => {\n    // Clear any existing timers\n    if (openTimerRef.current) clearTimeout(openTimerRef.current)\n    if (closeTimerRef.current) clearTimeout(closeTimerRef.current)\n\n    const delay = newOpen ? openDelay : closeDelay\n\n    const timer = setTimeout(() => {\n      if (!isControlled) {\n        setInternalOpen(newOpen)\n      }\n      onOpenChange?.(newOpen)\n    }, delay)\n\n    if (newOpen) {\n      openTimerRef.current = timer\n    } else {\n      closeTimerRef.current = timer\n    }\n  }\n\n  // Cleanup timers on unmount\n  useEffect(() => {\n    return () => {\n      if (openTimerRef.current) clearTimeout(openTimerRef.current)\n      if (closeTimerRef.current) clearTimeout(closeTimerRef.current)\n    }\n  }, [])\n\n  return (\n    <HoverCardContext.Provider value={{ open, setOpen, triggerRef }}>\n      <div className={styles.root}>\n        {children}\n      </div>\n    </HoverCardContext.Provider>\n  )\n}\n\nexport interface HoverCardTriggerProps {\n  children: ReactNode\n  asChild?: boolean\n  className?: string\n}\n\nconst HoverCardTrigger = forwardRef<HTMLDivElement, HoverCardTriggerProps>(\n  ({ children, asChild = false, className }, _ref) => {\n    const { setOpen, triggerRef } = useHoverCard()\n\n    const handleMouseEnter = () => setOpen(true)\n    const handleMouseLeave = () => setOpen(false)\n    const handleFocus = () => setOpen(true)\n    const handleBlur = () => setOpen(false)\n\n    const triggerProps = {\n      ref: triggerRef,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      className: clsx(styles.trigger, className)\n    }\n\n    if (asChild && React.isValidElement(children)) {\n      return React.cloneElement(children as React.ReactElement<HTMLElement>, triggerProps)\n    }\n\n    return (\n      <div {...triggerProps}>\n        {children}\n      </div>\n    )\n  }\n)\n\nHoverCardTrigger.displayName = 'HoverCardTrigger'\n\nexport interface HoverCardContentProps {\n  children: ReactNode\n  className?: string\n  side?: 'top' | 'right' | 'bottom' | 'left'\n  align?: 'start' | 'center' | 'end'\n  sideOffset?: number\n  alignOffset?: number\n  collisionBoundary?: 'viewport' | 'parent' | HTMLElement\n  hideWhenDetached?: boolean\n  brutalistShadow?: boolean\n}\n\nconst HoverCardContent = forwardRef<HTMLDivElement, HoverCardContentProps>(\n  ({\n    children,\n    className,\n    side = 'bottom',\n    align = 'center',\n    sideOffset = 8,\n    alignOffset = 0,\n    collisionBoundary = 'viewport',\n    hideWhenDetached = true, // eslint-disable-line @typescript-eslint/no-unused-vars\n    brutalistShadow = true,\n    ...props\n  }, ref) => {\n    const { open, triggerRef, setOpen } = useHoverCard()\n    const internalRef = useRef<HTMLDivElement>(null)\n    const contentRef = (ref as React.RefObject<HTMLDivElement>) || internalRef\n    const [position, setPosition] = useState({ top: 0, left: 0 })\n    const [actualSide, setActualSide] = useState(side)\n\n    // Handle mouse events on content\n    const handleMouseEnter = () => setOpen(true)\n    const handleMouseLeave = () => setOpen(false)\n\n    // Update position when open or window resizes\n    useEffect(() => {\n      if (!open || !triggerRef.current || !contentRef.current) return\n\n      const updatePosition = () => {\n        const trigger = triggerRef.current\n        const content = contentRef.current\n        if (!trigger || !content) return\n\n        const triggerRect = trigger.getBoundingClientRect()\n        const contentRect = content.getBoundingClientRect()\n        const viewportWidth = window.innerWidth\n        const viewportHeight = window.innerHeight\n\n        let top = 0\n        let left = 0\n        let finalSide = side\n\n        // Calculate initial position based on side\n        switch (side) {\n          case 'top':\n            top = triggerRect.top - contentRect.height - sideOffset\n            left = triggerRect.left + triggerRect.width / 2 - contentRect.width / 2\n            break\n          case 'right':\n            top = triggerRect.top + triggerRect.height / 2 - contentRect.height / 2\n            left = triggerRect.right + sideOffset\n            break\n          case 'bottom':\n            top = triggerRect.bottom + sideOffset\n            left = triggerRect.left + triggerRect.width / 2 - contentRect.width / 2\n            break\n          case 'left':\n            top = triggerRect.top + triggerRect.height / 2 - contentRect.height / 2\n            left = triggerRect.left - contentRect.width - sideOffset\n            break\n        }\n\n        // Apply alignment offset\n        if (side === 'top' || side === 'bottom') {\n          if (align === 'start') {\n            left = triggerRect.left + alignOffset\n          } else if (align === 'end') {\n            left = triggerRect.right - contentRect.width - alignOffset\n          }\n        } else {\n          if (align === 'start') {\n            top = triggerRect.top + alignOffset\n          } else if (align === 'end') {\n            top = triggerRect.bottom - contentRect.height - alignOffset\n          }\n        }\n\n        // Collision detection and adjustment\n        if (collisionBoundary === 'viewport') {\n          // Check if content overflows viewport and flip if needed\n          if (side === 'bottom' && top + contentRect.height > viewportHeight) {\n            top = triggerRect.top - contentRect.height - sideOffset\n            finalSide = 'top'\n          } else if (side === 'top' && top < 0) {\n            top = triggerRect.bottom + sideOffset\n            finalSide = 'bottom'\n          } else if (side === 'right' && left + contentRect.width > viewportWidth) {\n            left = triggerRect.left - contentRect.width - sideOffset\n            finalSide = 'left'\n          } else if (side === 'left' && left < 0) {\n            left = triggerRect.right + sideOffset\n            finalSide = 'right'\n          }\n\n          // Ensure content stays within viewport\n          left = Math.max(8, Math.min(left, viewportWidth - contentRect.width - 8))\n          top = Math.max(8, Math.min(top, viewportHeight - contentRect.height - 8))\n        }\n\n        setPosition({ top, left })\n        setActualSide(finalSide)\n      }\n\n      updatePosition()\n      window.addEventListener('resize', updatePosition)\n      window.addEventListener('scroll', updatePosition, true)\n\n      return () => {\n        window.removeEventListener('resize', updatePosition)\n        window.removeEventListener('scroll', updatePosition, true)\n      }\n    }, [open, side, align, sideOffset, alignOffset, collisionBoundary, triggerRef, contentRef])\n\n    if (!open) return null\n\n    return (\n      <div\n        ref={contentRef}\n        className={clsx(\n          styles.content,\n          styles[actualSide],\n          {\n            [styles.withShadow]: brutalistShadow\n          },\n          className\n        )}\n        style={{\n          position: 'fixed',\n          top: `${position.top}px`,\n          left: `${position.left}px`,\n          zIndex: 50\n        }}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      >\n        <div className={styles.contentInner}>\n          {children}\n        </div>\n        <div className={styles.arrow} data-side={actualSide} />\n      </div>\n    )\n  }\n)\n\nHoverCardContent.displayName = 'HoverCardContent'\n\n// Attach compound components\nHoverCard.Trigger = HoverCardTrigger\nHoverCard.Content = HoverCardContent\n\nexport { HoverCardTrigger, HoverCardContent }","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Typography.module.css'\n\nexport interface TypographyProps extends HTMLAttributes<HTMLElement> {\n  variant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'lead' | 'large' | 'small' | 'muted' | 'blockquote' | 'code' | 'list'\n  size?: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl'\n  weight?: 'normal' | 'medium' | 'semibold' | 'bold' | 'black'\n  align?: 'left' | 'center' | 'right' | 'justify'\n  transform?: 'none' | 'uppercase' | 'lowercase' | 'capitalize'\n  color?: 'default' | 'muted' | 'accent' | 'destructive' | 'warning' | 'success'\n  family?: 'mono' | 'sans' | 'serif'\n  truncate?: boolean\n  children: ReactNode\n  asChild?: boolean\n}\n\nconst variantElementMap = {\n  h1: 'h1',\n  h2: 'h2', \n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  p: 'p',\n  lead: 'p',\n  large: 'p',\n  small: 'p',\n  muted: 'p',\n  blockquote: 'blockquote',\n  code: 'code',\n  list: 'ul'\n} as const\n\nexport const Typography = forwardRef<HTMLElement, TypographyProps>(\n  ({\n    variant = 'p',\n    size,\n    weight,\n    align,\n    transform,\n    color = 'default',\n    family,\n    truncate = false,\n    className,\n    children,\n    asChild = false,\n    ...props\n  }, ref) => {\n    const Component = asChild ? 'span' : variantElementMap[variant] as keyof JSX.IntrinsicElements\n\n    return (\n      <Component\n        ref={ref as React.Ref<HTMLElement>}\n        className={clsx(\n          styles.typography,\n          styles[variant],\n          size && styles[`size-${size}`],\n          weight && styles[`weight-${weight}`],\n          align && styles[`align-${align}`],\n          transform && styles[`transform-${transform}`],\n          color && styles[`color-${color}`],\n          family && styles[`family-${family}`],\n          {\n            [styles.truncate]: truncate\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Component>\n    )\n  }\n)\n\nTypography.displayName = 'Typography'\n\n// Convenience components for common use cases\nexport const TypographyH1 = forwardRef<HTMLHeadingElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"h1\" ref={ref} {...props} />\n)\nTypographyH1.displayName = 'TypographyH1'\n\nexport const TypographyH2 = forwardRef<HTMLHeadingElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"h2\" ref={ref} {...props} />\n)\nTypographyH2.displayName = 'TypographyH2'\n\nexport const TypographyH3 = forwardRef<HTMLHeadingElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"h3\" ref={ref} {...props} />\n)\nTypographyH3.displayName = 'TypographyH3'\n\nexport const TypographyH4 = forwardRef<HTMLHeadingElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"h4\" ref={ref} {...props} />\n)\nTypographyH4.displayName = 'TypographyH4'\n\nexport const TypographyP = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"p\" ref={ref} {...props} />\n)\nTypographyP.displayName = 'TypographyP'\n\nexport const TypographyLead = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"lead\" ref={ref} {...props} />\n)\nTypographyLead.displayName = 'TypographyLead'\n\nexport const TypographyLarge = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"large\" ref={ref} {...props} />\n)\nTypographyLarge.displayName = 'TypographyLarge'\n\nexport const TypographySmall = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"small\" ref={ref} {...props} />\n)\nTypographySmall.displayName = 'TypographySmall'\n\nexport const TypographyMuted = forwardRef<HTMLParagraphElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"muted\" ref={ref} {...props} />\n)\nTypographyMuted.displayName = 'TypographyMuted'\n\nexport const TypographyBlockquote = forwardRef<HTMLQuoteElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"blockquote\" ref={ref} {...props} />\n)\nTypographyBlockquote.displayName = 'TypographyBlockquote'\n\nexport const TypographyCode = forwardRef<HTMLElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"code\" ref={ref} {...props} />\n)\nTypographyCode.displayName = 'TypographyCode'\n\nexport const TypographyList = forwardRef<HTMLUListElement, Omit<TypographyProps, 'variant'>>(\n  (props, ref) => <Typography variant=\"list\" ref={ref} {...props} />\n)\nTypographyList.displayName = 'TypographyList'","import React, { forwardRef, useState, useRef, useEffect, ReactNode, KeyboardEvent } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Command.module.css'\n\n// Context for compound components\nconst CommandContext = React.createContext<{\n  search: string\n  setSearch: (search: string) => void\n  selectedIndex: number\n  setSelectedIndex: (index: number) => void\n  items: CommandItemData[]\n  setItems: (items: CommandItemData[]) => void\n  onSelect?: (value: string) => void\n  visibleCount: number\n  setVisibleCount: (count: number) => void\n} | null>(null)\n\nconst useCommand = () => {\n  const context = React.useContext(CommandContext)\n  if (!context) {\n    throw new Error('Command components must be used within a Command')\n  }\n  return context\n}\n\ninterface CommandItemData {\n  value: string\n  keywords?: string[]\n  disabled?: boolean\n}\n\nexport interface CommandProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: ReactNode\n  className?: string\n  onSelect?: (value: string) => void\n  defaultValue?: string\n  value?: string\n  onValueChange?: (value: string) => void\n  filter?: (value: string, search: string, keywords?: string[]) => number\n  shouldFilter?: boolean\n  placeholder?: string\n}\n\nexport const Command: React.FC<CommandProps> & {\n  Input: typeof CommandInput\n  List: typeof CommandList\n  Empty: typeof CommandEmpty\n  Group: typeof CommandGroup\n  Item: typeof CommandItem\n  Separator: typeof CommandSeparator\n} = ({\n  children,\n  className,\n  onSelect,\n  defaultValue = '',\n  value: controlledValue,\n  onValueChange,\n  filter,\n  shouldFilter = true, // eslint-disable-line @typescript-eslint/no-unused-vars\n  ...props\n}) => {\n  const [search, setSearch] = useState(defaultValue)\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const [items, setItems] = useState<CommandItemData[]>([])\n  const [visibleCount, setVisibleCount] = useState(0)\n  const isControlled = controlledValue !== undefined\n\n  const currentSearch = isControlled ? controlledValue : search\n\n  const handleSearchChange = (newSearch: string) => {\n    if (!isControlled) {\n      setSearch(newSearch)\n    }\n    onValueChange?.(newSearch)\n    setSelectedIndex(0)\n  }\n\n  // Default filter function\n  const defaultFilter = (value: string, search: string, keywords?: string[]) => {\n    const searchLower = search.toLowerCase()\n    const valueLower = value.toLowerCase()\n    \n    if (valueLower.includes(searchLower)) return 1\n    \n    if (keywords) {\n      for (const keyword of keywords) {\n        if (keyword.toLowerCase().includes(searchLower)) return 1\n      }\n    }\n    \n    return 0\n  }\n\n  const filterFunction = filter || defaultFilter // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  return (\n    <CommandContext.Provider \n      value={{\n        search: currentSearch,\n        setSearch: handleSearchChange,\n        selectedIndex,\n        setSelectedIndex,\n        items,\n        setItems,\n        onSelect,\n        visibleCount,\n        setVisibleCount\n      }}\n    >\n      <div\n        className={clsx(styles.command, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    </CommandContext.Provider>\n  )\n}\n\nexport interface CommandInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string\n}\n\nconst CommandInput = forwardRef<HTMLInputElement, CommandInputProps>(\n  ({ className, ...props }, ref) => {\n    const { search, setSearch, selectedIndex, setSelectedIndex, items, onSelect } = useCommand()\n\n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault()\n          setSelectedIndex(Math.min(selectedIndex + 1, items.length - 1))\n          break\n        case 'ArrowUp':\n          e.preventDefault()\n          setSelectedIndex(Math.max(selectedIndex - 1, 0))\n          break\n        case 'Enter':\n          e.preventDefault()\n          if (items[selectedIndex] && !items[selectedIndex].disabled) {\n            onSelect?.(items[selectedIndex].value)\n          }\n          break\n        case 'Escape':\n          e.preventDefault()\n          setSearch('')\n          break\n      }\n      props.onKeyDown?.(e)\n    }\n\n    return (\n      <div className={styles.inputWrapper}>\n        <input\n          ref={ref}\n          className={clsx(styles.input, className)}\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyDown={handleKeyDown}\n          {...props}\n        />\n      </div>\n    )\n  }\n)\n\nCommandInput.displayName = 'CommandInput'\n\nexport interface CommandListProps {\n  children: ReactNode\n  className?: string\n}\n\nconst CommandList = forwardRef<HTMLDivElement, CommandListProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.list, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCommandList.displayName = 'CommandList'\n\nexport interface CommandEmptyProps {\n  children: ReactNode\n  className?: string\n}\n\nconst CommandEmpty = forwardRef<HTMLDivElement, CommandEmptyProps>(\n  ({ children, className, ...props }, ref) => {\n    const { visibleCount, search } = useCommand()\n    \n    if (visibleCount > 0 || !search) return null\n    \n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.empty, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCommandEmpty.displayName = 'CommandEmpty'\n\nexport interface CommandGroupProps {\n  children: ReactNode\n  heading?: string\n  className?: string\n}\n\nconst CommandGroup = forwardRef<HTMLDivElement, CommandGroupProps>(\n  ({ children, heading, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.group, className)}\n        {...props}\n      >\n        {heading && (\n          <div className={styles.groupHeading}>\n            {heading}\n          </div>\n        )}\n        <div className={styles.groupItems}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n)\n\nCommandGroup.displayName = 'CommandGroup'\n\nexport interface CommandItemProps {\n  children: ReactNode\n  value: string\n  keywords?: string[]\n  disabled?: boolean\n  className?: string\n  onSelect?: (value: string) => void\n}\n\nconst CommandItem = forwardRef<HTMLDivElement, CommandItemProps>(\n  ({ children, value, keywords = [], disabled = false, className, onSelect: onItemSelect, ...props }, ref) => {\n    const { search, selectedIndex, setItems, onSelect, setVisibleCount } = useCommand()\n    const itemIndex = useRef<number>(-1)\n\n    // Register item with command context\n    useEffect(() => {\n      const item: CommandItemData = { value, keywords, disabled }\n      setItems((prev: CommandItemData[]) => {\n        const newItems = [...prev, item]\n        itemIndex.current = newItems.length - 1\n        return newItems\n      })\n\n      return () => {\n        setItems((prev: CommandItemData[]) => prev.filter((item: CommandItemData) => item.value !== value))\n      }\n    }, [value, keywords, disabled, setItems])\n\n    const isSelected = itemIndex.current === selectedIndex\n\n    const handleClick = () => {\n      if (!disabled) {\n        onItemSelect?.(value)\n        onSelect?.(value)\n      }\n    }\n\n    const handleMouseEnter = () => {\n      if (!disabled && itemIndex.current >= 0) {\n        // setSelectedIndex(itemIndex.current)\n      }\n    }\n\n    // Filter logic\n    const shouldShow = React.useMemo(() => {\n      if (!search) return true\n      \n      const searchLower = search.toLowerCase()\n      const valueLower = value.toLowerCase()\n      \n      if (valueLower.includes(searchLower)) return true\n      \n      return keywords.some(keyword => \n        keyword.toLowerCase().includes(searchLower)\n      )\n    }, [search, value, keywords])\n\n    // Update visible count when visibility changes\n    useEffect(() => {\n      if (shouldShow) {\n        setVisibleCount(prev => prev + 1)\n        return () => setVisibleCount(prev => prev - 1)\n      }\n    }, [shouldShow, setVisibleCount])\n\n    if (!shouldShow) return null\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.item,\n          {\n            [styles.itemSelected]: isSelected,\n            [styles.itemDisabled]: disabled\n          },\n          className\n        )}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        role=\"option\"\n        aria-selected={isSelected}\n        aria-disabled={disabled}\n        data-value={value}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCommandItem.displayName = 'CommandItem'\n\nexport interface CommandSeparatorProps {\n  className?: string\n}\n\nconst CommandSeparator = forwardRef<HTMLDivElement, CommandSeparatorProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.separator, className)}\n        role=\"separator\"\n        {...props}\n      />\n    )\n  }\n)\n\nCommandSeparator.displayName = 'CommandSeparator'\n\n// Attach compound components\nCommand.Input = CommandInput\nCommand.List = CommandList\nCommand.Empty = CommandEmpty\nCommand.Group = CommandGroup\nCommand.Item = CommandItem\nCommand.Separator = CommandSeparator\n\nexport { CommandInput, CommandList, CommandEmpty, CommandGroup, CommandItem, CommandSeparator }","import React, { forwardRef, InputHTMLAttributes, useState, useEffect, useRef } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Slider.module.css'\n\nexport interface SliderProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size' | 'type'> {\n  size?: 'sm' | 'md' | 'lg'\n  orientation?: 'horizontal' | 'vertical'\n  showValue?: boolean\n  marks?: number[] | { value: number; label?: string }[]\n  min?: number\n  max?: number\n  step?: number\n  disabled?: boolean\n  className?: string\n  trackClassName?: string\n  thumbClassName?: string\n  valueClassName?: string\n}\n\nexport const Slider = forwardRef<HTMLInputElement, SliderProps>(\n  (\n    {\n      size = 'md',\n      orientation = 'horizontal',\n      showValue = false,\n      marks,\n      min = 0,\n      max = 100,\n      step = 1,\n      disabled = false,\n      value: propValue,\n      defaultValue = min,\n      onChange,\n      className,\n      trackClassName,\n      thumbClassName,\n      valueClassName,\n      ...props\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState<number>(\n      propValue !== undefined ? Number(propValue) : Number(defaultValue)\n    )\n    const internalRef = useRef<HTMLInputElement>(null)\n    const sliderRef = ref || internalRef\n\n    useEffect(() => {\n      if (propValue !== undefined) {\n        setValue(Number(propValue))\n      }\n    }, [propValue])\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(e.target.value)\n      setValue(newValue)\n      onChange?.(e)\n    }\n\n    const percentage = ((value - min) / (max - min)) * 100\n\n    const renderMarks = () => {\n      if (!marks) return null\n\n      const normalizedMarks = marks.map((mark) =>\n        typeof mark === 'number' ? { value: mark } : mark\n      )\n\n      return (\n        <div className={styles.marks}>\n          {normalizedMarks.map((mark) => {\n            const markPercentage = ((mark.value - min) / (max - min)) * 100\n            const markStyle =\n              orientation === 'horizontal'\n                ? { left: `${markPercentage}%` }\n                : { bottom: `${markPercentage}%` }\n\n            return (\n              <div\n                key={mark.value}\n                className={clsx(styles.mark, {\n                  [styles.markActive]: value >= mark.value,\n                })}\n                style={markStyle}\n              >\n                <div className={styles.markTick} />\n                {mark.label && (\n                  <div className={styles.markLabel}>{mark.label}</div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      )\n    }\n\n    const sliderStyle =\n      orientation === 'horizontal'\n        ? {\n            '--slider-percentage': `${percentage}%`,\n          }\n        : {\n            '--slider-percentage': `${percentage}%`,\n            height: '200px',\n          }\n\n    return (\n      <div\n        className={clsx(\n          styles.container,\n          styles[size],\n          styles[orientation],\n          {\n            [styles.disabled]: disabled,\n            [styles.withValue]: showValue,\n          },\n          className\n        )}\n        style={sliderStyle as React.CSSProperties}\n      >\n        <div className={clsx(styles.track, trackClassName)}>\n          <div className={styles.progress} />\n          <input\n            ref={sliderRef}\n            type=\"range\"\n            min={min}\n            max={max}\n            step={step}\n            value={value}\n            disabled={disabled}\n            onChange={handleChange}\n            className={clsx(styles.input)}\n            {...props}\n          />\n          <div className={clsx(styles.thumb, thumbClassName)} />\n          {renderMarks()}\n        </div>\n        {showValue && (\n          <div className={clsx(styles.value, valueClassName)}>\n            {value}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nSlider.displayName = 'Slider'","import React, { useState, forwardRef, ImgHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Avatar.module.css'\n\nexport interface AvatarProps extends Omit<ImgHTMLAttributes<HTMLImageElement>, 'size' | 'children'> {\n  /** Image source URL */\n  src?: string\n  /** Alt text for the image */\n  alt?: string\n  /** Initials to display when no image */\n  initials?: string\n  /** Icon to display as fallback */\n  icon?: React.ReactNode\n  /** Avatar size */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  /** Status indicator */\n  status?: 'online' | 'offline' | 'busy' | 'away'\n  /** Additional CSS classes */\n  className?: string\n  /** Custom click handler */\n  onClick?: () => void\n  /** Whether the avatar is clickable */\n  clickable?: boolean\n}\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>(\n  (\n    {\n      src,\n      alt,\n      initials,\n      icon,\n      size = 'md',\n      status,\n      className,\n      onClick,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) => {\n    const [imageError, setImageError] = useState(false)\n    const [imageLoaded, setImageLoaded] = useState(false)\n\n    const handleImageError = () => {\n      setImageError(true)\n    }\n\n    const handleImageLoad = () => {\n      setImageLoaded(true)\n      setImageError(false)\n    }\n\n    const hasImage = src && !imageError\n    const hasInitials = initials && initials.length > 0\n    const hasIcon = icon\n\n    // Determine what to display based on available data and fallback order\n    const showImage = hasImage\n    const showInitials = !hasImage && hasInitials\n    const showIcon = !hasImage && !hasInitials && hasIcon\n\n    // Get initials (first 2 characters max)\n    const displayInitials = initials ? initials.slice(0, 2).toUpperCase() : ''\n\n    // Default icon if no image, initials, or custom icon\n    const defaultIcon = (\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        className={styles.defaultIcon}\n      >\n        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n      </svg>\n    )\n\n    const isClickable = clickable || !!onClick\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.container,\n          styles[size],\n          {\n            [styles.clickable]: isClickable,\n            [styles.hasStatus]: !!status,\n          },\n          className\n        )}\n        onClick={isClickable ? onClick : undefined}\n        role={isClickable ? 'button' : undefined}\n        tabIndex={isClickable ? 0 : undefined}\n        onKeyDown={\n          isClickable\n            ? (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault()\n                  onClick?.()\n                }\n              }\n            : undefined\n        }\n        aria-label={alt || `Avatar${initials ? ` for ${initials}` : ''}`}\n      >\n        <div className={styles.avatar}>\n          {showImage && (\n            <img\n              src={src}\n              alt={alt}\n              className={clsx(styles.image, {\n                [styles.loaded]: imageLoaded,\n              })}\n              onError={handleImageError}\n              onLoad={handleImageLoad}\n              {...props}\n            />\n          )}\n          \n          {showInitials && (\n            <span className={styles.initials} aria-label={`Initials: ${displayInitials}`}>\n              {displayInitials}\n            </span>\n          )}\n          \n          {showIcon && (\n            <span className={styles.iconWrapper} aria-label=\"Avatar icon\">\n              {icon}\n            </span>\n          )}\n          \n          {!showImage && !showInitials && !showIcon && (\n            <span className={styles.iconWrapper} aria-label=\"Default avatar\">\n              {defaultIcon}\n            </span>\n          )}\n        </div>\n        \n        {status && (\n          <div\n            className={clsx(styles.status, styles[status])}\n            aria-label={`Status: ${status}`}\n            role=\"img\"\n          />\n        )}\n      </div>\n    )\n  }\n)\n\nAvatar.displayName = 'Avatar'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Badge.module.css'\n\nexport interface BadgeProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Badge content */\n  children?: React.ReactNode\n  /** Badge variant */\n  variant?: 'solid' | 'outline' | 'dot' | 'secondary'\n  /** Badge color */\n  color?: 'accent' | 'success' | 'warning' | 'error' | 'info' | 'neutral'\n  /** Badge size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the badge is dismissible */\n  dismissible?: boolean\n  /** Click handler for dismissible badges */\n  onDismiss?: () => void\n  /** Additional CSS classes */\n  className?: string\n  /** Custom click handler */\n  onClick?: () => void\n  /** Whether the badge is clickable */\n  clickable?: boolean\n}\n\nexport const Badge = forwardRef<HTMLSpanElement, BadgeProps>(\n  (\n    {\n      children,\n      variant = 'solid',\n      color = 'accent',\n      size = 'md',\n      dismissible = false,\n      onDismiss,\n      className,\n      onClick,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) => {\n    const isDot = variant === 'dot'\n    const isClickable = clickable || !!onClick\n    const isDismissible = dismissible && !!onDismiss\n\n    const handleDismiss = (e: React.MouseEvent) => {\n      e.stopPropagation()\n      onDismiss?.()\n    }\n\n    const handleClick = () => {\n      if (isClickable) {\n        onClick?.()\n      }\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (isClickable && (e.key === 'Enter' || e.key === ' ')) {\n        e.preventDefault()\n        onClick?.()\n      }\n    }\n\n    // For dot variant, don't render children\n    const content = isDot ? null : children\n\n    // Dismiss icon\n    const dismissIcon = (\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        className={styles.dismissIcon}\n        aria-hidden=\"true\"\n      >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n      </svg>\n    )\n\n    return (\n      <span\n        ref={ref}\n        className={clsx(\n          styles.badge,\n          styles[variant],\n          styles[color],\n          styles[size],\n          {\n            [styles.clickable]: isClickable,\n            [styles.dismissible]: isDismissible,\n            [styles.dot]: isDot,\n          },\n          className\n        )}\n        onClick={isClickable ? handleClick : undefined}\n        onKeyDown={isClickable ? handleKeyDown : undefined}\n        role={isClickable ? 'button' : isDot ? 'status' : undefined}\n        tabIndex={isClickable ? 0 : undefined}\n        aria-label={\n          isDot \n            ? `${color} status indicator` \n            : typeof children === 'string' \n              ? children \n              : undefined\n        }\n        {...props}\n      >\n        {content}\n        \n        {isDismissible && (\n          <button\n            type=\"button\"\n            className={styles.dismissButton}\n            onClick={handleDismiss}\n            aria-label=\"Dismiss badge\"\n            tabIndex={-1}\n          >\n            {dismissIcon}\n          </button>\n        )}\n      </span>\n    )\n  }\n)\n\nBadge.displayName = 'Badge'","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Card.module.css'\n\nexport interface CardProps extends HTMLAttributes<HTMLDivElement> {\n  /** Visual variant of the card */\n  variant?: 'elevated' | 'flat' | 'outline'\n  /** Padding options */\n  padding?: 'none' | 'sm' | 'md' | 'lg'\n  /** Whether the card is clickable */\n  clickable?: boolean\n  /** Whether to show hover effects */\n  hover?: boolean\n}\n\nexport interface CardHeaderProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface CardBodyProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface CardFooterProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst Card = forwardRef<HTMLDivElement, CardProps>(\n  (\n    {\n      children,\n      className,\n      variant = 'elevated',\n      padding = 'md',\n      clickable = false,\n      hover = true,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.card,\n          styles[variant],\n          styles[`padding-${padding}`],\n          {\n            [styles.clickable]: clickable,\n            [styles.hover]: hover && !clickable,\n          },\n          className\n        )}\n        role={clickable ? 'button' : undefined}\n        tabIndex={clickable ? 0 : undefined}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardHeader = forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.header, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardBody = forwardRef<HTMLDivElement, CardBodyProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.body, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardFooter = forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.footer, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCard.displayName = 'Card'\nCardHeader.displayName = 'Card.Header'\nCardBody.displayName = 'Card.Body'\nCardFooter.displayName = 'Card.Footer'\n\n// Compound component\nconst CardComponent = Card as typeof Card & {\n  Header: typeof CardHeader\n  Body: typeof CardBody\n  Footer: typeof CardFooter\n}\n\nCardComponent.Header = CardHeader\nCardComponent.Body = CardBody\nCardComponent.Footer = CardFooter\n\nexport { CardComponent as Card }","import { forwardRef, HTMLAttributes, useState } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Alert.module.css'\n\nexport interface AlertProps extends HTMLAttributes<HTMLDivElement> {\n  /** Type of alert */\n  type?: 'info' | 'success' | 'warning' | 'error'\n  /** Visual variant */\n  variant?: 'filled' | 'outline'\n  /** Size of the alert */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the alert can be dismissed */\n  dismissible?: boolean\n  /** Callback when alert is dismissed */\n  onDismiss?: () => void\n}\n\nexport interface AlertIconProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface AlertContentProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface AlertTitleProps extends HTMLAttributes<HTMLHeadingElement> {}\nexport interface AlertDescriptionProps extends HTMLAttributes<HTMLParagraphElement> {}\nexport interface AlertActionsProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(\n  (\n    {\n      children,\n      className,\n      type = 'info',\n      variant = 'filled',\n      size = 'md',\n      dismissible = false,\n      onDismiss,\n      ...props\n    },\n    ref\n  ) => {\n    const [dismissed, setDismissed] = useState(false)\n    const [isExiting, setIsExiting] = useState(false)\n\n    const handleDismiss = () => {\n      setIsExiting(true)\n      // Wait for animation to complete before removing from DOM\n      setTimeout(() => {\n        setDismissed(true)\n        onDismiss?.()\n      }, 300) // Match animation duration\n    }\n\n    if (dismissed) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.alert,\n          styles[type],\n          styles[variant],\n          styles[size],\n          {\n            [styles.dismissible]: dismissible,\n            [styles.exiting]: isExiting,\n          },\n          className\n        )}\n        role=\"alert\"\n        aria-live=\"polite\"\n        {...props}\n      >\n        {children}\n        {dismissible && (\n          <button\n            className={styles.dismissButton}\n            onClick={handleDismiss}\n            aria-label=\"Dismiss alert\"\n            type=\"button\"\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M12 4L4 12M4 4L12 12\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n              />\n            </svg>\n          </button>\n        )}\n      </div>\n    )\n  }\n)\n\nconst AlertIcon = forwardRef<HTMLDivElement, AlertIconProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.icon, className)}\n        {...props}\n      >\n        {children || <DefaultIcon />}\n      </div>\n    )\n  }\n)\n\nconst AlertContent = forwardRef<HTMLDivElement, AlertContentProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.content, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst AlertTitle = forwardRef<HTMLHeadingElement, AlertTitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <h4\n        ref={ref}\n        className={clsx(styles.title, className)}\n        {...props}\n      >\n        {children}\n      </h4>\n    )\n  }\n)\n\nconst AlertDescription = forwardRef<HTMLParagraphElement, AlertDescriptionProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={clsx(styles.description, className)}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\nconst AlertActions = forwardRef<HTMLDivElement, AlertActionsProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.actions, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Default icon component\nconst DefaultIcon = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle\n      cx=\"10\"\n      cy=\"10\"\n      r=\"8\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M10 6V10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n    />\n    <circle\n      cx=\"10\"\n      cy=\"14\"\n      r=\"1\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nAlert.displayName = 'Alert'\nAlertIcon.displayName = 'Alert.Icon'\nAlertContent.displayName = 'Alert.Content'\nAlertTitle.displayName = 'Alert.Title'\nAlertDescription.displayName = 'Alert.Description'\nAlertActions.displayName = 'Alert.Actions'\n\n// Compound component\nconst AlertComponent = Alert as typeof Alert & {\n  Icon: typeof AlertIcon\n  Content: typeof AlertContent\n  Title: typeof AlertTitle\n  Description: typeof AlertDescription\n  Actions: typeof AlertActions\n}\n\nAlertComponent.Icon = AlertIcon\nAlertComponent.Content = AlertContent\nAlertComponent.Title = AlertTitle\nAlertComponent.Description = AlertDescription\nAlertComponent.Actions = AlertActions\n\nexport { AlertComponent as Alert }","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './AlertStack.module.css'\n\nexport interface AlertStackProps extends HTMLAttributes<HTMLDivElement> {\n  /** Direction of the stack */\n  direction?: 'vertical' | 'horizontal'\n  /** Gap between alerts */\n  gap?: 'sm' | 'md' | 'lg'\n}\n\nexport const AlertStack = forwardRef<HTMLDivElement, AlertStackProps>(\n  (\n    {\n      children,\n      className,\n      direction = 'vertical',\n      gap = 'md',\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.stack,\n          styles[direction],\n          styles[`gap-${gap}`],\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nAlertStack.displayName = 'AlertStack'","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Progress.module.css'\n\nexport interface ProgressProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  /** Progress value (0-max for determinate, undefined for indeterminate) */\n  value?: number\n  /** Maximum value */\n  max?: number\n  /** Progress type */\n  type?: 'linear' | 'circular'\n  /** Progress variant */\n  variant?: 'default' | 'striped' | 'animated'\n  /** Progress size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether to show the value label */\n  showLabel?: boolean\n  /** Custom label text (overrides default percentage) */\n  label?: string\n  /** Whether progress is indeterminate */\n  indeterminate?: boolean\n  /** Progress bar color */\n  color?: 'accent' | 'success' | 'warning' | 'error' | 'info'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  (\n    {\n      value,\n      max = 100,\n      type = 'linear',\n      variant = 'default',\n      size = 'md',\n      showLabel = false,\n      label,\n      indeterminate = false,\n      color = 'accent',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Calculate progress percentage\n    const progressValue = indeterminate ? undefined : Math.min(Math.max((value ?? 0) / max * 100, 0), 100)\n    const isCircular = type === 'circular'\n    \n    // Calculate label text\n    const labelText = label || (progressValue !== undefined ? `${Math.round(progressValue)}%` : '')\n    \n    // Squared circular progress calculations\n    const boxSize = isCircular ? (size === 'sm' ? 40 : size === 'lg' ? 80 : 60) : 0\n    const pathLength = isCircular ? boxSize * 4 - 16 : 0 // Perimeter minus corners\n    const dashOffset = isCircular && progressValue !== undefined \n      ? pathLength - (progressValue / 100) * pathLength \n      : 0\n\n    const progressBarStyles = {\n      ...(type === 'linear' && progressValue !== undefined && {\n        width: `${progressValue}%`,\n      }),\n      ...(isCircular && progressValue !== undefined && {\n        strokeDasharray: pathLength,\n        strokeDashoffset: dashOffset,\n      }),\n    }\n\n    const commonClasses = clsx(\n      styles.progress,\n      styles[type],\n      styles[variant],\n      styles[size],\n      styles[color],\n      {\n        [styles.indeterminate]: indeterminate,\n        [styles.withLabel]: showLabel,\n      },\n      className\n    )\n\n    // Accessibility props\n    const progressRole = 'progressbar'\n    const ariaValueNow = indeterminate ? undefined : value ?? 0\n    const ariaValueMin = 0\n    const ariaValueMax = max\n    const ariaLabel = label || (indeterminate ? 'Loading' : `${Math.round(progressValue ?? 0)} percent complete`)\n\n    if (isCircular) {\n      const strokeWidth = size === 'sm' ? 3 : size === 'lg' ? 6 : 4\n      const padding = strokeWidth + 2\n      const svgSize = boxSize + padding * 2\n      const cornerSize = 4\n\n      return (\n        <div\n          ref={ref}\n          className={commonClasses}\n          role={progressRole}\n          aria-valuenow={ariaValueNow}\n          aria-valuemin={ariaValueMin}\n          aria-valuemax={ariaValueMax}\n          aria-label={ariaLabel}\n          {...props}\n        >\n          <div className={styles.circularContainer}>\n            <svg\n              className={styles.circularSvg}\n              width={svgSize}\n              height={svgSize}\n              viewBox={`0 0 ${svgSize} ${svgSize}`}\n            >\n              {/* Background square track */}\n              <rect\n                className={styles.circularTrack}\n                x={padding}\n                y={padding}\n                width={boxSize}\n                height={boxSize}\n                rx={cornerSize}\n                ry={cornerSize}\n                fill=\"none\"\n                strokeWidth={strokeWidth}\n              />\n              {/* Progress square */}\n              <rect\n                className={styles.circularBar}\n                x={padding}\n                y={padding}\n                width={boxSize}\n                height={boxSize}\n                rx={cornerSize}\n                ry={cornerSize}\n                fill=\"none\"\n                strokeWidth={strokeWidth}\n                style={progressBarStyles}\n                strokeLinecap=\"square\"\n                transform={`rotate(-90 ${svgSize / 2} ${svgSize / 2})`}\n              />\n            </svg>\n            {showLabel && (\n              <div className={styles.circularLabel}>\n                {labelText}\n              </div>\n            )}\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={commonClasses}\n        role={progressRole}\n        aria-valuenow={ariaValueNow}\n        aria-valuemin={ariaValueMin}\n        aria-valuemax={ariaValueMax}\n        aria-label={ariaLabel}\n        {...props}\n      >\n        <div className={styles.track}>\n          <div\n            className={styles.bar}\n            style={progressBarStyles}\n            aria-hidden=\"true\"\n          />\n        </div>\n        {showLabel && (\n          <div className={styles.label}>\n            {labelText}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nProgress.displayName = 'Progress'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Skeleton.module.css'\n\nexport interface SkeletonProps extends HTMLAttributes<HTMLDivElement> {\n  /** Shape of the skeleton */\n  shape?: 'text' | 'circular' | 'rectangular'\n  /** Animation type */\n  animation?: 'pulse' | 'wave' | 'none'\n  /** Width of the skeleton (for rectangular and circular) */\n  width?: number | string\n  /** Height of the skeleton (for rectangular and circular) */\n  height?: number | string\n  /** Number of text lines (only for text shape) */\n  lines?: 1 | 2 | 3 | 4 | 5\n  /** Variant style */\n  variant?: 'default' | 'rounded'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Skeleton = forwardRef<HTMLDivElement, SkeletonProps>(\n  (\n    {\n      shape = 'text',\n      animation = 'pulse',\n      width,\n      height,\n      lines = 1,\n      variant = 'default',\n      className,\n      style,\n      ...props\n    },\n    ref\n  ) => {\n    const isText = shape === 'text'\n    const isCircular = shape === 'circular'\n\n    // Generate styles for width and height\n    const dimensionStyles: React.CSSProperties = {\n      ...style,\n      ...(width && { width: typeof width === 'number' ? `${width}px` : width }),\n      ...(height && { height: typeof height === 'number' ? `${height}px` : height }),\n    }\n\n    // For circular, use width as diameter if height not specified\n    if (isCircular && width && !height) {\n      dimensionStyles.height = dimensionStyles.width\n    }\n\n    const baseClasses = clsx(\n      styles.skeleton,\n      styles[shape],\n      styles[animation],\n      styles[variant],\n      className\n    )\n\n    // For text skeleton with multiple lines\n    if (isText && lines > 1) {\n      const textLines = Array.from({ length: lines }, (_, index) => {\n        const isLastLine = index === lines - 1\n        const lineWidth = isLastLine ? '75%' : '100%'\n        \n        return (\n          <div\n            key={index}\n            className={clsx(styles.skeleton, styles.text, styles[animation], styles[variant])}\n            style={{ \n              width: lineWidth,\n              marginBottom: index < lines - 1 ? 'var(--brutal-space-2)' : 0 \n            }}\n            aria-hidden=\"true\"\n          />\n        )\n      })\n\n      return (\n        <div\n          ref={ref}\n          className={styles.textContainer}\n          role=\"status\"\n          aria-label=\"Loading content\"\n          {...props}\n        >\n          {textLines}\n        </div>\n      )\n    }\n\n    // Single skeleton element\n    return (\n      <div\n        ref={ref}\n        className={baseClasses}\n        style={dimensionStyles}\n        role=\"status\"\n        aria-label=\"Loading content\"\n        aria-hidden=\"true\"\n        {...props}\n      />\n    )\n  }\n)\n\nSkeleton.displayName = 'Skeleton'","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Tooltip.module.css'\n\nexport type TooltipPosition = 'top' | 'bottom' | 'left' | 'right' | 'auto'\nexport type TooltipTrigger = 'hover' | 'click' | 'focus' | 'manual'\n\nexport interface TooltipProps {\n  /** The content to display inside the tooltip */\n  content: React.ReactNode\n  /** The element that triggers the tooltip */\n  children: React.ReactElement\n  /** Position of the tooltip relative to the trigger */\n  position?: TooltipPosition\n  /** How the tooltip is triggered */\n  trigger?: TooltipTrigger\n  /** Delay before showing tooltip (ms) */\n  showDelay?: number\n  /** Delay before hiding tooltip (ms) */\n  hideDelay?: number\n  /** Whether the tooltip is currently visible (for manual trigger) */\n  visible?: boolean\n  /** Callback when visibility changes (for manual trigger) */\n  onVisibilityChange?: (visible: boolean) => void\n  /** Whether to show an arrow pointing to the trigger */\n  showArrow?: boolean\n  /** Additional CSS classes */\n  className?: string\n  /** Whether the tooltip is disabled */\n  disabled?: boolean\n  /** Maximum width of the tooltip */\n  maxWidth?: number\n}\n\nexport const Tooltip: React.FC<TooltipProps> = ({\n  content,\n  children,\n  position = 'top',\n  trigger = 'hover',\n  showDelay = 0,\n  hideDelay = 0,\n  visible: controlledVisible,\n  onVisibilityChange,\n  showArrow = true,\n  className,\n  disabled = false,\n  maxWidth = 300,\n}) => {\n  const [visible, setVisible] = useState(false)\n  const [actualPosition, setActualPosition] = useState<TooltipPosition>(position)\n  const [coords, setCoords] = useState({ x: 0, y: 0 })\n  const triggerRef = useRef<HTMLElement>(null)\n  const tooltipRef = useRef<HTMLDivElement>(null)\n  const showTimeoutRef = useRef<NodeJS.Timeout>()\n  const hideTimeoutRef = useRef<NodeJS.Timeout>()\n\n  const isVisible = controlledVisible !== undefined ? controlledVisible : visible\n\n  // Calculate position and coordinates\n  const calculatePosition = useCallback(() => {\n    if (!triggerRef.current || !tooltipRef.current) return\n\n    const triggerRect = triggerRef.current.getBoundingClientRect()\n    const tooltipRect = tooltipRef.current.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    const scrollX = window.scrollX\n    const scrollY = window.scrollY\n\n    let finalPosition = position\n    let x = 0\n    let y = 0\n\n    // Auto positioning logic\n    if (position === 'auto') {\n      const spaceTop = triggerRect.top\n      const spaceBottom = viewportHeight - triggerRect.bottom\n      const spaceLeft = triggerRect.left\n      const spaceRight = viewportWidth - triggerRect.right\n\n      if (spaceTop >= tooltipRect.height + 10) {\n        finalPosition = 'top'\n      } else if (spaceBottom >= tooltipRect.height + 10) {\n        finalPosition = 'bottom'\n      } else if (spaceRight >= tooltipRect.width + 10) {\n        finalPosition = 'right'\n      } else if (spaceLeft >= tooltipRect.width + 10) {\n        finalPosition = 'left'\n      } else {\n        finalPosition = 'bottom' // fallback\n      }\n    }\n\n    // Calculate coordinates based on final position\n    switch (finalPosition) {\n      case 'top':\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2\n        y = triggerRect.top - tooltipRect.height - 8\n        break\n      case 'bottom':\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2\n        y = triggerRect.bottom + 8\n        break\n      case 'left':\n        x = triggerRect.left - tooltipRect.width - 8\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2\n        break\n      case 'right':\n        x = triggerRect.right + 8\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2\n        break\n    }\n\n    // Adjust for viewport boundaries\n    x = Math.max(8, Math.min(x, viewportWidth - tooltipRect.width - 8))\n    y = Math.max(8, Math.min(y, viewportHeight - tooltipRect.height - 8))\n\n    setActualPosition(finalPosition)\n    setCoords({\n      x: x + scrollX,\n      y: y + scrollY,\n    })\n  }, [position])\n\n  // Show tooltip\n  const showTooltip = useCallback(() => {\n    if (disabled) return\n    \n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current)\n      hideTimeoutRef.current = undefined\n    }\n\n    if (showDelay > 0) {\n      showTimeoutRef.current = setTimeout(() => {\n        if (controlledVisible === undefined) {\n          setVisible(true)\n        }\n        onVisibilityChange?.(true)\n      }, showDelay)\n    } else {\n      if (controlledVisible === undefined) {\n        setVisible(true)\n      }\n      onVisibilityChange?.(true)\n    }\n  }, [disabled, showDelay, controlledVisible, onVisibilityChange])\n\n  // Hide tooltip\n  const hideTooltip = useCallback(() => {\n    if (showTimeoutRef.current) {\n      clearTimeout(showTimeoutRef.current)\n      showTimeoutRef.current = undefined\n    }\n\n    if (hideDelay > 0) {\n      hideTimeoutRef.current = setTimeout(() => {\n        if (controlledVisible === undefined) {\n          setVisible(false)\n        }\n        onVisibilityChange?.(false)\n      }, hideDelay)\n    } else {\n      if (controlledVisible === undefined) {\n        setVisible(false)\n      }\n      onVisibilityChange?.(false)\n    }\n  }, [hideDelay, controlledVisible, onVisibilityChange])\n\n  // Handle keyboard events\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Escape' && isVisible) {\n      hideTooltip()\n    }\n  }, [isVisible, hideTooltip])\n\n  // Effect to handle position calculation\n  useEffect(() => {\n    if (isVisible && triggerRef.current) {\n      calculatePosition()\n      \n      const handleResize = () => calculatePosition()\n      const handleScroll = () => calculatePosition()\n      \n      window.addEventListener('resize', handleResize)\n      window.addEventListener('scroll', handleScroll)\n      document.addEventListener('keydown', handleKeyDown)\n      \n      return () => {\n        window.removeEventListener('resize', handleResize)\n        window.removeEventListener('scroll', handleScroll)\n        document.removeEventListener('keydown', handleKeyDown)\n      }\n    }\n  }, [isVisible, calculatePosition, handleKeyDown])\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (showTimeoutRef.current) {\n        clearTimeout(showTimeoutRef.current)\n      }\n      if (hideTimeoutRef.current) {\n        clearTimeout(hideTimeoutRef.current)\n      }\n    }\n  }, [])\n\n  // Create trigger event handlers\n  const triggerProps: Record<string, (() => void) | ((e: React.MouseEvent) => void)> = {}\n  \n  if (trigger === 'hover') {\n    triggerProps.onMouseEnter = showTooltip\n    triggerProps.onMouseLeave = hideTooltip\n  } else if (trigger === 'click') {\n    triggerProps.onClick = (e: React.MouseEvent) => {\n      e.preventDefault()\n      if (isVisible) {\n        hideTooltip()\n      } else {\n        showTooltip()\n      }\n    }\n  } else if (trigger === 'focus') {\n    triggerProps.onFocus = showTooltip\n    triggerProps.onBlur = hideTooltip\n  }\n\n  // Clone trigger element with event handlers\n  const triggerElement = React.cloneElement(children, {\n    ...triggerProps,\n    ref: (el: HTMLElement) => {\n      if (triggerRef) {\n        (triggerRef as React.MutableRefObject<HTMLElement | null>).current = el\n      }\n      const childRef = (children as React.ReactElement & { ref?: React.Ref<HTMLElement> }).ref\n      if (typeof childRef === 'function') {\n        childRef(el)\n      } else if (childRef && typeof childRef === 'object') {\n        (childRef as React.MutableRefObject<HTMLElement | null>).current = el\n      }\n    },\n    'aria-describedby': isVisible ? 'tooltip' : undefined,\n  })\n\n  // Render tooltip portal\n  const tooltipPortal = isVisible ? createPortal(\n    <div\n      ref={tooltipRef}\n      className={clsx(\n        styles.tooltip,\n        styles[actualPosition],\n        {\n          [styles.withArrow]: showArrow,\n        },\n        className\n      )}\n      style={{\n        position: 'absolute',\n        left: coords.x,\n        top: coords.y,\n        maxWidth,\n        zIndex: 'var(--brutal-z-tooltip)',\n      }}\n      role=\"tooltip\"\n      id=\"tooltip\"\n      onMouseEnter={trigger === 'hover' ? showTooltip : undefined}\n      onMouseLeave={trigger === 'hover' ? hideTooltip : undefined}\n    >\n      {showArrow && <div className={styles.arrow} />}\n      <div className={styles.content}>\n        {content}\n      </div>\n    </div>,\n    document.body\n  ) : null\n\n  return (\n    <>\n      {triggerElement}\n      {tooltipPortal}\n    </>\n  )\n}\n\nTooltip.displayName = 'Tooltip'","import React, { useState, useRef, useEffect, useCallback, useContext, createContext } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Popover.module.css'\n\nexport type PopoverPosition = \n  | 'top' | 'top-start' | 'top-end'\n  | 'bottom' | 'bottom-start' | 'bottom-end'\n  | 'left' | 'left-start' | 'left-end'\n  | 'right' | 'right-start' | 'right-end'\n  | 'auto'\n\nexport type PopoverTrigger = 'click' | 'focus' | 'manual'\n\nexport interface PopoverProps {\n  /** The element that triggers the popover */\n  children: React.ReactElement\n  /** The content to display inside the popover (when using simple mode) */\n  content?: React.ReactNode\n  /** Position of the popover relative to the trigger */\n  position?: PopoverPosition\n  /** How the popover is triggered */\n  trigger?: PopoverTrigger\n  /** Whether the popover is currently visible (for manual trigger) */\n  open?: boolean\n  /** Callback when visibility changes */\n  onOpenChange?: (open: boolean) => void\n  /** Whether to close when clicking outside */\n  closeOnClickOutside?: boolean\n  /** Whether to close when pressing escape */\n  closeOnEscape?: boolean\n  /** Whether to show an arrow pointing to the trigger */\n  showArrow?: boolean\n  /** Additional CSS classes */\n  className?: string\n  /** Whether the popover is disabled */\n  disabled?: boolean\n  /** Maximum width of the popover */\n  maxWidth?: number\n  /** Whether to manage focus automatically */\n  autoFocus?: boolean\n  /** Initial focus element selector */\n  initialFocus?: string\n}\n\ninterface PopoverContextValue {\n  close: () => void\n}\n\nconst PopoverContext = createContext<PopoverContextValue | null>(null)\n\nexport const Popover: React.FC<PopoverProps> & {\n  Content: typeof PopoverContent\n  Header: typeof PopoverHeader\n  Body: typeof PopoverBody\n  Footer: typeof PopoverFooter\n} = ({\n  children,\n  content,\n  position = 'bottom',\n  trigger = 'click',\n  open: controlledOpen,\n  onOpenChange,\n  closeOnClickOutside = true,\n  closeOnEscape = true,\n  showArrow = true,\n  className,\n  disabled = false,\n  maxWidth = 400,\n  autoFocus = true,\n  initialFocus,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [actualPosition, setActualPosition] = useState<PopoverPosition>(position)\n  const [coords, setCoords] = useState({ x: 0, y: 0 })\n  const triggerRef = useRef<HTMLElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n  const previousActiveElementRef = useRef<HTMLElement | null>(null)\n\n  const isOpen = controlledOpen !== undefined ? controlledOpen : open\n\n  // Calculate position and coordinates\n  const calculatePosition = useCallback(() => {\n    if (!triggerRef.current || !popoverRef.current) return\n\n    const triggerRect = triggerRef.current.getBoundingClientRect()\n    const popoverRect = popoverRef.current.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    const scrollX = window.scrollX\n    const scrollY = window.scrollY\n\n    let finalPosition = position\n    let x = 0\n    let y = 0\n\n    // Auto positioning logic\n    if (position === 'auto') {\n      const spaceTop = triggerRect.top\n      const spaceBottom = viewportHeight - triggerRect.bottom\n      const spaceLeft = triggerRect.left\n      const spaceRight = viewportWidth - triggerRect.right\n\n      if (spaceBottom >= popoverRect.height + 10) {\n        finalPosition = 'bottom'\n      } else if (spaceTop >= popoverRect.height + 10) {\n        finalPosition = 'top'\n      } else if (spaceRight >= popoverRect.width + 10) {\n        finalPosition = 'right'\n      } else if (spaceLeft >= popoverRect.width + 10) {\n        finalPosition = 'left'\n      } else {\n        finalPosition = 'bottom'\n      }\n    }\n\n    // Calculate coordinates based on final position\n    switch (finalPosition.split('-')[0]) {\n      case 'top':\n        y = triggerRect.top - popoverRect.height - 8\n        break\n      case 'bottom':\n        y = triggerRect.bottom + 8\n        break\n      case 'left':\n        x = triggerRect.left - popoverRect.width - 8\n        break\n      case 'right':\n        x = triggerRect.right + 8\n        break\n    }\n\n    // Handle alignment variants (start, end)\n    if (finalPosition.includes('top') || finalPosition.includes('bottom')) {\n      if (finalPosition.includes('start')) {\n        x = triggerRect.left\n      } else if (finalPosition.includes('end')) {\n        x = triggerRect.right - popoverRect.width\n      } else {\n        x = triggerRect.left + triggerRect.width / 2 - popoverRect.width / 2\n      }\n    } else if (finalPosition.includes('left') || finalPosition.includes('right')) {\n      if (finalPosition.includes('start')) {\n        y = triggerRect.top\n      } else if (finalPosition.includes('end')) {\n        y = triggerRect.bottom - popoverRect.height\n      } else {\n        y = triggerRect.top + triggerRect.height / 2 - popoverRect.height / 2\n      }\n    }\n\n    // Adjust for viewport boundaries\n    x = Math.max(8, Math.min(x, viewportWidth - popoverRect.width - 8))\n    y = Math.max(8, Math.min(y, viewportHeight - popoverRect.height - 8))\n\n    setActualPosition(finalPosition)\n    setCoords({\n      x: x + scrollX,\n      y: y + scrollY,\n    })\n  }, [position])\n\n  // Open popover\n  const openPopover = useCallback(() => {\n    if (disabled) return\n    \n    previousActiveElementRef.current = document.activeElement as HTMLElement\n    \n    if (controlledOpen === undefined) {\n      setOpen(true)\n    }\n    onOpenChange?.(true)\n  }, [disabled, controlledOpen, onOpenChange])\n\n  // Close popover\n  const closePopover = useCallback(() => {\n    if (controlledOpen === undefined) {\n      setOpen(false)\n    }\n    onOpenChange?.(false)\n    \n    // Restore focus to trigger element without scrolling\n    if (previousActiveElementRef.current) {\n      previousActiveElementRef.current.focus({ preventScroll: true })\n    }\n  }, [controlledOpen, onOpenChange])\n\n  // Handle click outside\n  const handleClickOutside = useCallback((event: MouseEvent) => {\n    if (!closeOnClickOutside || !isOpen) return\n    \n    const target = event.target as Node\n    if (\n      popoverRef.current &&\n      triggerRef.current &&\n      !popoverRef.current.contains(target) &&\n      !triggerRef.current.contains(target)\n    ) {\n      closePopover()\n    }\n  }, [closeOnClickOutside, isOpen, closePopover])\n\n  // Handle keyboard events\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Escape' && closeOnEscape && isOpen) {\n      closePopover()\n    }\n  }, [closeOnEscape, isOpen, closePopover])\n\n  // Handle focus management\n  const handleFocusManagement = useCallback(() => {\n    if (!autoFocus || !isOpen || !popoverRef.current) return\n\n    const focusableElements = popoverRef.current.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    )\n\n    if (initialFocus) {\n      const initialElement = popoverRef.current.querySelector(initialFocus) as HTMLElement\n      if (initialElement) {\n        initialElement.focus({ preventScroll: true })\n        return\n      }\n    }\n\n    if (focusableElements.length > 0) {\n      (focusableElements[0] as HTMLElement).focus({ preventScroll: true })\n    } else {\n      popoverRef.current.focus({ preventScroll: true })\n    }\n  }, [autoFocus, isOpen, initialFocus])\n\n  // Handle focus trap\n  const handleFocusTrap = useCallback((event: KeyboardEvent) => {\n    if (!isOpen || !popoverRef.current || event.key !== 'Tab') return\n\n    const focusableElements = popoverRef.current.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    )\n\n    if (focusableElements.length === 0) return\n\n    const firstElement = focusableElements[0] as HTMLElement\n    const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement\n\n    if (event.shiftKey) {\n      if (document.activeElement === firstElement) {\n        lastElement.focus({ preventScroll: true })\n        event.preventDefault()\n      }\n    } else {\n      if (document.activeElement === lastElement) {\n        firstElement.focus({ preventScroll: true })\n        event.preventDefault()\n      }\n    }\n  }, [isOpen])\n\n  // Effects\n  useEffect(() => {\n    if (isOpen) {\n      calculatePosition()\n      handleFocusManagement()\n      \n      const handleResize = () => calculatePosition()\n      const handleScroll = () => calculatePosition()\n      \n      window.addEventListener('resize', handleResize)\n      window.addEventListener('scroll', handleScroll)\n      document.addEventListener('mousedown', handleClickOutside)\n      document.addEventListener('keydown', handleKeyDown)\n      document.addEventListener('keydown', handleFocusTrap)\n      \n      return () => {\n        window.removeEventListener('resize', handleResize)\n        window.removeEventListener('scroll', handleScroll)\n        document.removeEventListener('mousedown', handleClickOutside)\n        document.removeEventListener('keydown', handleKeyDown)\n        document.removeEventListener('keydown', handleFocusTrap)\n      }\n    }\n  }, [isOpen, calculatePosition, handleFocusManagement, handleClickOutside, handleKeyDown, handleFocusTrap])\n\n  // Create trigger event handlers\n  const triggerProps: Record<string, (() => void) | ((e: React.MouseEvent) => void) | ((e: React.FocusEvent) => void)> = {}\n  \n  if (trigger === 'click') {\n    triggerProps.onClick = (e: React.MouseEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      if (isOpen) {\n        closePopover()\n      } else {\n        openPopover()\n      }\n    }\n  } else if (trigger === 'focus') {\n    triggerProps.onFocus = openPopover\n    triggerProps.onBlur = (_e: React.FocusEvent) => {\n      // Don't close if focus moved to popover\n      setTimeout(() => {\n        if (popoverRef.current && popoverRef.current.contains(document.activeElement)) {\n          return\n        }\n        closePopover()\n      }, 0)\n    }\n  }\n\n  // Clone trigger element with event handlers\n  const triggerElement = React.cloneElement(children, {\n    ...triggerProps,\n    ref: (el: HTMLElement | null) => {\n      if (el) {\n        triggerRef.current = el\n      }\n    },\n    'aria-expanded': isOpen,\n    'aria-haspopup': 'dialog',\n  })\n\n  // Context value\n  const contextValue: PopoverContextValue = {\n    close: closePopover,\n  }\n\n  // Render popover portal\n  const popoverPortal = isOpen ? createPortal(\n    <PopoverContext.Provider value={contextValue}>\n      <div\n        ref={popoverRef}\n        className={clsx(\n          styles.popover,\n          styles[actualPosition.split('-')[0]],\n          {\n            [styles.withArrow]: showArrow,\n          },\n          className\n        )}\n        style={{\n          position: 'absolute',\n          left: coords.x,\n          top: coords.y,\n          maxWidth,\n          zIndex: 'var(--brutal-z-popover)',\n        }}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabIndex={-1}\n      >\n        {showArrow && <div className={styles.arrow} />}\n        <div className={styles.content}>\n          {content || children.props.children}\n        </div>\n      </div>\n    </PopoverContext.Provider>,\n    document.body\n  ) : null\n\n  return (\n    <>\n      {triggerElement}\n      {popoverPortal}\n    </>\n  )\n}\n\n// Subcomponents\nexport const PopoverContent: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={clsx(styles.contentWrapper, className)}>\n      {children}\n    </div>\n  )\n}\n\nexport const PopoverHeader: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={clsx(styles.header, className)}>\n      {children}\n    </div>\n  )\n}\n\nexport const PopoverBody: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={clsx(styles.body, className)}>\n      {children}\n    </div>\n  )\n}\n\nexport const PopoverFooter: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={clsx(styles.footer, className)}>\n      {children}\n    </div>\n  )\n}\n\n// Hook to access popover context\nexport const usePopover = () => {\n  const context = useContext(PopoverContext)\n  if (!context) {\n    throw new Error('usePopover must be used within a Popover component')\n  }\n  return context\n}\n\n// Assign subcomponents\nPopover.Content = PopoverContent\nPopover.Header = PopoverHeader\nPopover.Body = PopoverBody\nPopover.Footer = PopoverFooter\n\nPopover.displayName = 'Popover'\nPopoverContent.displayName = 'PopoverContent'\nPopoverHeader.displayName = 'PopoverHeader'\nPopoverBody.displayName = 'PopoverBody'\nPopoverFooter.displayName = 'PopoverFooter'","import React from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Separator.module.css'\n\nexport interface SeparatorProps {\n  /** Orientation of the separator */\n  orientation?: 'horizontal' | 'vertical'\n  /** Thickness variant */\n  thickness?: 'thin' | 'medium' | 'thick'\n  /** Style variant */\n  variant?: 'solid' | 'dashed' | 'dotted' | 'double'\n  /** Custom CSS class */\n  className?: string\n  /** Additional CSS properties */\n  style?: React.CSSProperties\n  /** Decorative element in the middle (horizontal only) */\n  label?: string | React.ReactNode\n  /** Position of the label */\n  labelPosition?: 'start' | 'center' | 'end'\n  /** ARIA label for accessibility */\n  ariaLabel?: string\n}\n\nexport const Separator: React.FC<SeparatorProps> = ({\n  orientation = 'horizontal',\n  thickness = 'medium',\n  variant = 'solid',\n  className,\n  style,\n  label,\n  labelPosition = 'center',\n  ariaLabel = 'Separator',\n}) => {\n  const isHorizontal = orientation === 'horizontal'\n  \n  return (\n    <div\n      className={clsx(\n        styles.separator,\n        styles[orientation],\n        styles[thickness],\n        styles[variant],\n        {\n          [styles.withLabel]: label && isHorizontal,\n          [styles[`label-${labelPosition}`]]: label && isHorizontal,\n        },\n        className\n      )}\n      style={style}\n      role=\"separator\"\n      aria-orientation={orientation}\n      aria-label={ariaLabel}\n    >\n      {label && isHorizontal && (\n        <>\n          <div className={styles.line} />\n          <div className={styles.label}>\n            {typeof label === 'string' ? <span>{label}</span> : label}\n          </div>\n          <div className={styles.line} />\n        </>\n      )}\n    </div>\n  )\n}\n\nSeparator.displayName = 'Separator'\n\nexport default Separator","import { BrutalistTheme } from './types'\n\nexport const CLASSIC_THEME: BrutalistTheme = {\n  id: 'classic',\n  name: 'Classic Brutalist',\n  description: 'The original black, white, and red brutalist aesthetic',\n  colors: {\n    black: '#000000',\n    white: '#FFFFFF',\n    accent: '#FF0000',\n    accentDark: '#CC0000',\n    gray50: '#FAFAFA',\n    gray100: '#F5F5F5',\n    gray200: '#E5E5E5',\n    gray300: '#D4D4D4',\n    gray400: '#A3A3A3',\n    gray500: '#737373',\n    gray700: '#404040',\n    gray900: '#171717',\n    warning: '#FFC107',\n    success: '#22C55E',\n    error: '#FF0000',\n    info: '#0000FF',\n  }\n}\n\nexport const NEON_THEME: BrutalistTheme = {\n  id: 'neon',\n  name: 'Neon Cyber',\n  description: 'Electric cyberpunk brutalism with neon highlights',\n  colors: {\n    black: '#0A0A0A',\n    white: '#F0F0F0',\n    accent: '#00FF88',\n    accentDark: '#00CC6A',\n    gray50: '#F8F8F8',\n    gray100: '#E8E8E8',\n    gray200: '#D8D8D8',\n    gray300: '#C8C8C8',\n    gray400: '#888888',\n    gray500: '#555555',\n    gray700: '#333333',\n    gray900: '#111111',\n    warning: '#FFAA00',\n    success: '#00FF88',\n    error: '#FF0044',\n    info: '#00AAFF',\n  }\n}\n\nexport const PASTEL_THEME: BrutalistTheme = {\n  id: 'pastel',\n  name: 'Soft Brutalism',\n  description: 'Gentle pastel colors with brutalist structure',\n  colors: {\n    black: '#2D2D2D',\n    white: '#FFFBF7',\n    accent: '#FF6B9D',\n    accentDark: '#E85A8A',\n    gray50: '#FDF9F5',\n    gray100: '#F7F0E8',\n    gray200: '#F0E6DB',\n    gray300: '#E8DCCE',\n    gray400: '#C4B5A0',\n    gray500: '#9A8B7A',\n    gray700: '#5D4E42',\n    gray900: '#2D2D2D',\n    warning: '#FFB347',\n    success: '#77DD77',\n    error: '#FF6B9D',\n    info: '#87CEEB',\n  }\n}\n\nexport const DARK_THEME: BrutalistTheme = {\n  id: 'dark',\n  name: 'Dark Brutalism',\n  description: 'Dark mode brutalism with bright accents',\n  colors: {\n    black: '#FFFFFF',\n    white: '#0F0F0F',\n    accent: '#FF4444',\n    accentDark: '#DD2222',\n    gray50: '#1A1A1A',\n    gray100: '#242424',\n    gray200: '#2E2E2E',\n    gray300: '#383838',\n    gray400: '#666666',\n    gray500: '#999999',\n    gray700: '#CCCCCC',\n    gray900: '#F0F0F0',\n    warning: '#FFB000',\n    success: '#00DD55',\n    error: '#FF4444',\n    info: '#4488FF',\n  }\n}\n\nexport const RETRO_THEME: BrutalistTheme = {\n  id: 'retro',\n  name: 'Retro Future',\n  description: '80s-inspired brutalism with vintage computing vibes',\n  colors: {\n    black: '#1A0D1A',\n    white: '#F5F5DC',\n    accent: '#FF00FF',\n    accentDark: '#CC00CC',\n    gray50: '#F0F0E6',\n    gray100: '#E6E6DC',\n    gray200: '#DCDCD2',\n    gray300: '#C8C8BE',\n    gray400: '#A0A096',\n    gray500: '#78786E',\n    gray700: '#464640',\n    gray900: '#2D2D27',\n    warning: '#FFAA00',\n    success: '#00FF00',\n    error: '#FF00FF',\n    info: '#00FFFF',\n  }\n}\n\nexport const NATURE_THEME: BrutalistTheme = {\n  id: 'nature',\n  name: 'Earth Brutalism',\n  description: 'Natural earth tones with brutalist structure',\n  colors: {\n    black: '#2F2F23',\n    white: '#F7F5F0',\n    accent: '#8B4513',\n    accentDark: '#6B3410',\n    gray50: '#F5F3EE',\n    gray100: '#EBE7DD',\n    gray200: '#E1DBCC',\n    gray300: '#D7CFBB',\n    gray400: '#B8A990',\n    gray500: '#998365',\n    gray700: '#5C5140',\n    gray900: '#3A3328',\n    warning: '#DAA520',\n    success: '#228B22',\n    error: '#A0522D',\n    info: '#4682B4',\n  }\n}\n\nexport const OCEAN_THEME: BrutalistTheme = {\n  id: 'ocean',\n  name: 'Ocean Brutalism',\n  description: 'Deep blue ocean-inspired color palette',\n  colors: {\n    black: '#0F1419',\n    white: '#F0F8FF',\n    accent: '#1E90FF',\n    accentDark: '#1874CD',\n    gray50: '#F8FBFF',\n    gray100: '#E6F2FF',\n    gray200: '#D4E9FF',\n    gray300: '#C2E0FF',\n    gray400: '#85C1F5',\n    gray500: '#4A90E2',\n    gray700: '#2E5984',\n    gray900: '#1A3A5C',\n    warning: '#FF8C00',\n    success: '#00CED1',\n    error: '#DC143C',\n    info: '#1E90FF',\n  }\n}\n\nexport const MONOCHROME_THEME: BrutalistTheme = {\n  id: 'monochrome',\n  name: 'Pure Monochrome',\n  description: 'Strict black and white with minimal color',\n  colors: {\n    black: '#000000',\n    white: '#FFFFFF',\n    accent: '#000000',\n    accentDark: '#333333',\n    gray50: '#FAFAFA',\n    gray100: '#F0F0F0',\n    gray200: '#E0E0E0',\n    gray300: '#D0D0D0',\n    gray400: '#A0A0A0',\n    gray500: '#707070',\n    gray700: '#404040',\n    gray900: '#101010',\n    warning: '#666666',\n    success: '#444444',\n    error: '#000000',\n    info: '#888888',\n  }\n}\n\n// Collection of all available themes\nexport const AVAILABLE_THEMES: BrutalistTheme[] = [\n  CLASSIC_THEME,\n  NEON_THEME,\n  PASTEL_THEME,\n  DARK_THEME,\n  RETRO_THEME,\n  NATURE_THEME,\n  OCEAN_THEME,\n  MONOCHROME_THEME,\n]\n\n// Default theme\nexport const DEFAULT_THEME = CLASSIC_THEME\n\n// Helper to get theme by ID\nexport const getThemeById = (id: string): BrutalistTheme | undefined => {\n  return AVAILABLE_THEMES.find(theme => theme.id === id)\n}","export interface BrutalistTheme {\n  id: string\n  name: string\n  description: string\n  colors: {\n    // Primary colors\n    black: string\n    white: string\n    accent: string\n    accentDark: string\n    \n    // Gray scale\n    gray50: string\n    gray100: string\n    gray200: string\n    gray300: string\n    gray400: string\n    gray500: string\n    gray700: string\n    gray900: string\n    \n    // Status colors\n    warning: string\n    success: string\n    error: string\n    info: string\n  }\n}\n\nexport interface ThemeContextValue {\n  currentTheme: BrutalistTheme\n  setTheme: (theme: BrutalistTheme) => void\n  availableThemes: BrutalistTheme[]\n  randomizeTheme: () => void\n  resetToDefault: () => void\n}\n\nexport type ThemeColors = BrutalistTheme['colors']\n\n// CSS custom properties mapping\nexport const CSS_VARIABLES_MAP = {\n  black: '--brutal-black',\n  white: '--brutal-white',\n  accent: '--brutal-accent',\n  accentDark: '--brutal-accent-dark',\n  gray50: '--brutal-gray-50',\n  gray100: '--brutal-gray-100',\n  gray200: '--brutal-gray-200',\n  gray300: '--brutal-gray-300',\n  gray400: '--brutal-gray-400',\n  gray500: '--brutal-gray-500',\n  gray700: '--brutal-gray-700',\n  gray900: '--brutal-gray-900',\n  warning: '--brutal-warning',\n  success: '--brutal-success',\n  error: '--brutal-error',\n  info: '--brutal-info',\n} as const\n\nexport type CSSVariableKey = keyof typeof CSS_VARIABLES_MAP","import { BrutalistTheme, ThemeColors, CSS_VARIABLES_MAP, CSSVariableKey } from './types'\nimport { AVAILABLE_THEMES, DEFAULT_THEME } from './themes'\n\n/**\n * Applies a theme by setting CSS custom properties on the document root\n */\nexport const applyTheme = (theme: BrutalistTheme): void => {\n  const root = document.documentElement\n  \n  Object.entries(theme.colors).forEach(([colorKey, colorValue]) => {\n    const cssVariable = CSS_VARIABLES_MAP[colorKey as CSSVariableKey]\n    if (cssVariable) {\n      root.style.setProperty(cssVariable, colorValue)\n    }\n  })\n}\n\n/**\n * Generates a random theme by mixing colors from existing themes\n */\nexport const generateRandomTheme = (): BrutalistTheme => {\n  const randomId = `random-${Date.now()}`\n  \n  // Get random colors from different themes\n  const randomColors: ThemeColors = {\n    black: getRandomColorFromThemes('black'),\n    white: getRandomColorFromThemes('white'),\n    accent: getRandomColorFromThemes('accent'),\n    accentDark: getRandomColorFromThemes('accentDark'),\n    gray50: getRandomColorFromThemes('gray50'),\n    gray100: getRandomColorFromThemes('gray100'),\n    gray200: getRandomColorFromThemes('gray200'),\n    gray300: getRandomColorFromThemes('gray300'),\n    gray400: getRandomColorFromThemes('gray400'),\n    gray500: getRandomColorFromThemes('gray500'),\n    gray700: getRandomColorFromThemes('gray700'),\n    gray900: getRandomColorFromThemes('gray900'),\n    warning: getRandomColorFromThemes('warning'),\n    success: getRandomColorFromThemes('success'),\n    error: getRandomColorFromThemes('error'),\n    info: getRandomColorFromThemes('info'),\n  }\n\n  return {\n    id: randomId,\n    name: 'Random Theme',\n    description: 'Randomly generated color combination',\n    colors: randomColors\n  }\n}\n\n/**\n * Gets a random color value for a specific color key from all available themes\n */\nconst getRandomColorFromThemes = (colorKey: keyof ThemeColors): string => {\n  const randomTheme = AVAILABLE_THEMES[Math.floor(Math.random() * AVAILABLE_THEMES.length)]\n  return randomTheme.colors[colorKey]\n}\n\n/**\n * Generates CSS custom properties string for a theme\n */\nexport const generateThemeCSS = (theme: BrutalistTheme): string => {\n  const cssLines = Object.entries(theme.colors).map(([colorKey, colorValue]) => {\n    const cssVariable = CSS_VARIABLES_MAP[colorKey as CSSVariableKey]\n    return `  ${cssVariable}: ${colorValue};`\n  })\n  \n  return `:root {\\n${cssLines.join('\\n')}\\n}`\n}\n\n/**\n * Generates JavaScript object for theme colors\n */\nexport const generateThemeJS = (theme: BrutalistTheme): string => {\n  const jsObject = JSON.stringify(theme.colors, null, 2)\n  return `const theme = ${jsObject}`\n}\n\n/**\n * Creates a copy-ready CSS variables snippet\n */\nexport const generateCSSVariablesCode = (theme: BrutalistTheme): string => {\n  return `/* ${theme.name} Theme */\\n${generateThemeCSS(theme)}`\n}\n\n/**\n * Creates a copy-ready React theme provider code\n */\nexport const generateReactThemeCode = (theme: BrutalistTheme): string => {\n  return `import { ThemeProvider } from '@brutalist-ui/components'\n\nconst ${theme.id}Theme = ${JSON.stringify(theme, null, 2)}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={${theme.id}Theme}>\n      {/* Your components */}\n    </ThemeProvider>\n  )\n}`\n}\n\n/**\n * Generates separate theme definition file\n */\nexport const generateThemeFile = (theme: BrutalistTheme): string => {\n  return `import { BrutalistTheme } from '@brutalist-ui/components'\n\nexport const ${theme.id}Theme: BrutalistTheme = ${JSON.stringify(theme, null, 2)}\n\nexport default ${theme.id}Theme`\n}\n\n/**\n * Generates App.tsx with theme provider\n */\nexport const generateAppFile = (theme: BrutalistTheme, componentName?: string): string => {\n  const componentImport = componentName ? `import ${componentName} from './components/${componentName}'` : \"import YourComponent from './components/YourComponent'\"\n  const componentUsage = componentName ? `<${componentName} />` : '<YourComponent />'\n  \n  return `import React from 'react'\nimport { ThemeProvider } from '@brutalist-ui/components'\nimport { ${theme.id}Theme } from './theme'\n${componentImport}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={${theme.id}Theme}>\n      <div className=\"app\">\n        ${componentUsage}\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App`\n}\n\n/**\n * Generates multi-file code examples\n */\nexport const generateMultiFileCode = (theme: BrutalistTheme, componentCode?: string, componentName?: string): {\n  'theme.ts': string\n  'App.tsx': string\n  'component.tsx': string\n} => {\n  return {\n    'theme.ts': generateThemeFile(theme),\n    'App.tsx': generateAppFile(theme, componentName),\n    'component.tsx': componentCode || '// Your component code goes here'\n  }\n}\n\n/**\n * Saves theme to localStorage\n */\nexport const saveThemeToStorage = (theme: BrutalistTheme): void => {\n  try {\n    localStorage.setItem('brutalist-theme', JSON.stringify(theme))\n  } catch (error) {\n    console.warn('Failed to save theme to localStorage:', error)\n  }\n}\n\n/**\n * Loads theme from localStorage\n */\nexport const loadThemeFromStorage = (): BrutalistTheme | null => {\n  try {\n    const savedTheme = localStorage.getItem('brutalist-theme')\n    if (savedTheme) {\n      return JSON.parse(savedTheme)\n    }\n  } catch (error) {\n    console.warn('Failed to load theme from localStorage:', error)\n  }\n  return null\n}\n\n/**\n * Validates if a theme object has all required properties\n */\nexport const isValidTheme = (theme: unknown): theme is BrutalistTheme => {\n  if (!theme || typeof theme !== 'object') return false\n  \n  const themeObj = theme as Record<string, unknown>\n  \n  const requiredProps = ['id', 'name', 'description', 'colors']\n  const hasRequiredProps = requiredProps.every(prop => prop in themeObj)\n  \n  if (!hasRequiredProps) return false\n  \n  // Check if colors object exists and has all required color properties\n  if (!themeObj.colors || typeof themeObj.colors !== 'object') return false\n  \n  const requiredColors = Object.keys(CSS_VARIABLES_MAP)\n  const hasRequiredColors = requiredColors.every(color => color in (themeObj.colors as Record<string, unknown>))\n  \n  return hasRequiredColors\n}\n\n/**\n * Gets the current theme from CSS custom properties\n */\nexport const getCurrentThemeFromDOM = (): Partial<ThemeColors> => {\n  const root = document.documentElement\n  const computedStyle = getComputedStyle(root)\n  \n  const currentColors: Partial<ThemeColors> = {}\n  \n  Object.entries(CSS_VARIABLES_MAP).forEach(([colorKey, cssVariable]) => {\n    const value = computedStyle.getPropertyValue(cssVariable).trim()\n    if (value) {\n      currentColors[colorKey as keyof ThemeColors] = value\n    }\n  })\n  \n  return currentColors\n}\n\n/**\n * Resets theme to default\n */\nexport const resetToDefaultTheme = (): void => {\n  applyTheme(DEFAULT_THEME)\n  localStorage.removeItem('brutalist-theme')\n}","import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react'\nimport { BrutalistTheme, ThemeContextValue } from './types'\nimport { \n  DEFAULT_THEME, \n  AVAILABLE_THEMES,\n  getThemeById \n} from './themes'\nimport { \n  applyTheme, \n  generateRandomTheme, \n  saveThemeToStorage, \n  loadThemeFromStorage, \n  resetToDefaultTheme,\n  isValidTheme \n} from './utils'\n\n// Create the theme context\nconst ThemeContext = createContext<ThemeContextValue | undefined>(undefined)\n\n// Theme provider props\nexport interface ThemeProviderProps {\n  children: ReactNode\n  /** Initial theme to use. If not provided, will try to load from localStorage or use default */\n  initialTheme?: BrutalistTheme\n  /** Whether to persist theme changes to localStorage */\n  enablePersistence?: boolean\n}\n\n/**\n * ThemeProvider component that manages theme state and provides theme functionality\n */\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\n  children,\n  initialTheme,\n  enablePersistence = true,\n}) => {\n  // Initialize theme state\n  const [currentTheme, setCurrentTheme] = useState<BrutalistTheme>(() => {\n    // Priority: initialTheme > localStorage > default\n    if (initialTheme && isValidTheme(initialTheme)) {\n      return initialTheme\n    }\n    \n    if (enablePersistence) {\n      const savedTheme = loadThemeFromStorage()\n      if (savedTheme && isValidTheme(savedTheme)) {\n        return savedTheme\n      }\n    }\n    \n    return DEFAULT_THEME\n  })\n\n  // Apply theme when currentTheme changes\n  useEffect(() => {\n    applyTheme(currentTheme)\n    \n    if (enablePersistence) {\n      saveThemeToStorage(currentTheme)\n    }\n  }, [currentTheme, enablePersistence])\n\n  // Theme management functions\n  const setTheme = (theme: BrutalistTheme) => {\n    if (isValidTheme(theme)) {\n      setCurrentTheme(theme)\n    } else {\n      console.warn('Invalid theme provided to setTheme:', theme)\n    }\n  }\n\n  const randomizeTheme = () => {\n    const randomTheme = generateRandomTheme()\n    setCurrentTheme(randomTheme)\n  }\n\n  const resetToDefault = () => {\n    setCurrentTheme(DEFAULT_THEME)\n    if (enablePersistence) {\n      resetToDefaultTheme()\n    }\n  }\n\n  // Context value\n  const contextValue: ThemeContextValue = {\n    currentTheme,\n    setTheme,\n    availableThemes: AVAILABLE_THEMES,\n    randomizeTheme,\n    resetToDefault,\n  }\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\n/**\n * Hook to consume theme context\n * @returns ThemeContextValue\n * @throws Error if used outside of ThemeProvider\n */\nexport const useTheme = (): ThemeContextValue => {\n  const context = useContext(ThemeContext)\n  \n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  \n  return context\n}\n\n/**\n * Hook to get current theme colors\n * @returns Current theme colors\n */\nexport const useThemeColors = () => {\n  const { currentTheme } = useTheme()\n  return currentTheme.colors\n}\n\n/**\n * Hook to check if a specific theme is currently active\n * @param themeId - Theme ID to check\n * @returns boolean indicating if theme is active\n */\nexport const useIsThemeActive = (themeId: string): boolean => {\n  const { currentTheme } = useTheme()\n  return currentTheme.id === themeId\n}\n\n/**\n * Hook to switch to a theme by ID\n * @returns Function to switch theme by ID\n */\nexport const useThemeSwitcher = () => {\n  const { setTheme } = useTheme()\n  \n  return (themeId: string) => {\n    const theme = getThemeById(themeId)\n    if (theme) {\n      setTheme(theme)\n    } else {\n      console.warn(`Theme with ID \"${themeId}\" not found`)\n    }\n  }\n}","import React, { useState } from 'react'\nimport { clsx } from 'clsx'\nimport { useTheme } from './ThemeContext'\nimport { BrutalistTheme } from './types'\nimport { generateCSSVariablesCode, generateReactThemeCode } from './utils'\nimport styles from './ThemePicker.module.css'\n\nexport interface ThemePickerProps {\n  /** Compact mode for smaller spaces */\n  variant?: 'default' | 'compact'\n  /** Show shadow */\n  brutalistShadow?: boolean\n  /** Show code examples */\n  showCode?: boolean\n  /** Custom className */\n  className?: string\n  /** Callback when theme changes */\n  onThemeChange?: (theme: BrutalistTheme) => void\n}\n\nexport const ThemePicker: React.FC<ThemePickerProps> = ({\n  variant = 'default',\n  brutalistShadow = true,\n  showCode = true,\n  className,\n  onThemeChange,\n}) => {\n  const { currentTheme, setTheme, availableThemes, randomizeTheme, resetToDefault } = useTheme()\n  const [showCodeSection, setShowCodeSection] = useState(false)\n  const [codeType, setCodeType] = useState<'css' | 'react'>('css')\n  const [copyFeedback, setCopyFeedback] = useState('')\n\n  const handleThemeSelect = (theme: BrutalistTheme) => {\n    setTheme(theme)\n    onThemeChange?.(theme)\n  }\n\n  const handleRandomize = () => {\n    randomizeTheme()\n    onThemeChange?.(currentTheme)\n  }\n\n  const handleReset = () => {\n    resetToDefault()\n    onThemeChange?.(currentTheme)\n  }\n\n  const copyToClipboard = async (text: string, type: string) => {\n    try {\n      await navigator.clipboard.writeText(text)\n      setCopyFeedback(`${type} copied!`)\n      setTimeout(() => setCopyFeedback(''), 2000)\n    } catch (error) {\n      console.error('Failed to copy to clipboard:', error)\n      setCopyFeedback('Copy failed')\n      setTimeout(() => setCopyFeedback(''), 2000)\n    }\n  }\n\n  const generateCode = () => {\n    return codeType === 'css' \n      ? generateCSSVariablesCode(currentTheme)\n      : generateReactThemeCode(currentTheme)\n  }\n\n  // Get key colors for theme preview\n  const getPreviewColors = (theme: BrutalistTheme) => [\n    theme.colors.black,\n    theme.colors.white,\n    theme.colors.accent,\n    theme.colors.gray500,\n  ]\n\n  return (\n    <div \n      className={clsx(\n        styles.container,\n        {\n          [styles.compact]: variant === 'compact',\n          [styles.withShadow]: brutalistShadow,\n        },\n        className\n      )}\n    >\n      {/* Header */}\n      <div className={styles.header}>\n        <h3 className={styles.title}>Theme Picker</h3>\n        <div className={styles.actions}>\n          <button \n            className={styles.actionButton}\n            onClick={handleRandomize}\n            title=\"Generate random theme\"\n          >\n            ðŸŽ² Random\n          </button>\n          <button \n            className={styles.actionButton}\n            onClick={handleReset}\n            title=\"Reset to default theme\"\n          >\n            ðŸ”„ Reset\n          </button>\n        </div>\n      </div>\n\n      {/* Current Theme Info */}\n      <div className={styles.currentTheme}>\n        <h4 className={styles.currentThemeTitle}>Current Theme</h4>\n        <div className={styles.currentThemeInfo}>\n          <span className={styles.currentThemeName}>{currentTheme.name}</span>\n          <button\n            className={styles.copyButton}\n            onClick={() => copyToClipboard(JSON.stringify(currentTheme, null, 2), 'Theme')}\n          >\n            {copyFeedback || 'Copy Theme'}\n          </button>\n        </div>\n        \n        {/* Color Palette */}\n        <div className={styles.colorPalette}>\n          {Object.entries(currentTheme.colors).map(([colorName, colorValue]) => (\n            <div\n              key={colorName}\n              className={styles.paletteColor}\n              style={{ backgroundColor: colorValue }}\n              title={`${colorName}: ${colorValue}`}\n              onClick={() => copyToClipboard(colorValue, colorName)}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Theme Grid */}\n      <div className={styles.themeGrid}>\n        {availableThemes.map((theme) => (\n          <div\n            key={theme.id}\n            className={clsx(styles.themeCard, {\n              [styles.active]: currentTheme.id === theme.id,\n            })}\n            onClick={() => handleThemeSelect(theme)}\n          >\n            {/* Color Preview */}\n            <div className={styles.colorPreview}>\n              {getPreviewColors(theme).map((color, index) => (\n                <div\n                  key={index}\n                  className={styles.colorSwatch}\n                  style={{ backgroundColor: color }}\n                />\n              ))}\n            </div>\n            \n            {/* Theme Info */}\n            <div className={styles.themeInfo}>\n              <h4 className={styles.themeName}>{theme.name}</h4>\n              {variant !== 'compact' && (\n                <p className={styles.themeDescription}>{theme.description}</p>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Code Section */}\n      {showCode && (\n        <div className={styles.codeSection}>\n          <button\n            className={styles.codeToggle}\n            onClick={() => setShowCodeSection(!showCodeSection)}\n          >\n            {showCodeSection ? 'ðŸ”» Hide Code' : 'ðŸ”º Show Code'}\n          </button>\n          \n          {showCodeSection && (\n            <>\n              {/* Code Type Selector */}\n              <div className={styles.actions} style={{ marginBottom: 'var(--brutal-space-3)' }}>\n                <button\n                  className={clsx(styles.actionButton, {\n                    [styles.active]: codeType === 'css'\n                  })}\n                  onClick={() => setCodeType('css')}\n                >\n                  CSS\n                </button>\n                <button\n                  className={clsx(styles.actionButton, {\n                    [styles.active]: codeType === 'react'\n                  })}\n                  onClick={() => setCodeType('react')}\n                >\n                  React\n                </button>\n              </div>\n\n              {/* Code Block */}\n              <div className={styles.codeBlock}>\n                <button\n                  className={styles.codeCopyButton}\n                  onClick={() => copyToClipboard(generateCode(), codeType.toUpperCase())}\n                >\n                  {copyFeedback || 'Copy'}\n                </button>\n                <pre>{generateCode()}</pre>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}","import { forwardRef, HTMLAttributes, ThHTMLAttributes, TdHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Table.module.css'\n\nexport interface TableProps extends HTMLAttributes<HTMLTableElement> {\n  /** Table variant */\n  variant?: 'default' | 'striped' | 'bordered'\n  /** Table size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the table is hoverable */\n  hoverable?: boolean\n  /** Whether the table should be full width */\n  fullWidth?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableHeadProps extends HTMLAttributes<HTMLTableSectionElement> {\n  /** Whether the header is sticky */\n  sticky?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableHeaderProps extends ThHTMLAttributes<HTMLTableCellElement> {\n  /** Alignment of the header */\n  align?: 'left' | 'center' | 'right'\n  /** Whether the column is sortable */\n  sortable?: boolean\n  /** Sort direction if sortable */\n  sortDirection?: 'asc' | 'desc' | 'none'\n  /** Callback when sort is clicked */\n  onSort?: () => void\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableCellProps extends TdHTMLAttributes<HTMLTableCellElement> {\n  /** Alignment of the cell */\n  align?: 'left' | 'center' | 'right'\n  /** Whether the cell contains numeric data */\n  numeric?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Table = forwardRef<HTMLTableElement, TableProps>(\n  (\n    {\n      variant = 'default',\n      size = 'md',\n      hoverable = false,\n      fullWidth = true,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div className={clsx(styles.tableWrapper, { [styles.fullWidth]: fullWidth })}>\n        <table\n          ref={ref}\n          className={clsx(\n            styles.table,\n            styles[variant],\n            styles[size],\n            {\n              [styles.hoverable]: hoverable,\n              [styles.fullWidth]: fullWidth,\n            },\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </table>\n      </div>\n    )\n  }\n)\n\nexport const TableHead = forwardRef<HTMLTableSectionElement, TableHeadProps>(\n  ({ sticky = false, className, children, ...props }, ref) => {\n    return (\n      <thead\n        ref={ref}\n        className={clsx(\n          styles.thead,\n          {\n            [styles.sticky]: sticky,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </thead>\n    )\n  }\n)\n\nexport const TableBody = forwardRef<HTMLTableSectionElement, HTMLAttributes<HTMLTableSectionElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <tbody ref={ref} className={clsx(styles.tbody, className)} {...props}>\n        {children}\n      </tbody>\n    )\n  }\n)\n\nexport const TableRow = forwardRef<HTMLTableRowElement, HTMLAttributes<HTMLTableRowElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <tr ref={ref} className={clsx(styles.tr, className)} {...props}>\n        {children}\n      </tr>\n    )\n  }\n)\n\nexport const TableHeader = forwardRef<HTMLTableCellElement, TableHeaderProps>(\n  (\n    {\n      align = 'left',\n      sortable = false,\n      sortDirection = 'none',\n      onSort,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const handleClick = () => {\n      if (sortable && onSort) {\n        onSort()\n      }\n    }\n\n    return (\n      <th\n        ref={ref}\n        className={clsx(\n          styles.th,\n          styles[`align-${align}`],\n          {\n            [styles.sortable]: sortable,\n            [styles.sorted]: sortDirection !== 'none',\n          },\n          className\n        )}\n        onClick={handleClick}\n        role={sortable ? 'button' : undefined}\n        tabIndex={sortable ? 0 : undefined}\n        aria-sort={\n          sortDirection === 'asc'\n            ? 'ascending'\n            : sortDirection === 'desc'\n            ? 'descending'\n            : 'none'\n        }\n        {...props}\n      >\n        <div className={styles.thContent}>\n          {children}\n          {sortable && (\n            <span className={clsx(styles.sortIcon, styles[`sort-${sortDirection}`])}>\n              {sortDirection === 'asc' && 'â†‘'}\n              {sortDirection === 'desc' && 'â†“'}\n              {sortDirection === 'none' && 'â†•'}\n            </span>\n          )}\n        </div>\n      </th>\n    )\n  }\n)\n\nexport const TableCell = forwardRef<HTMLTableCellElement, TableCellProps>(\n  ({ align = 'left', numeric = false, className, children, ...props }, ref) => {\n    return (\n      <td\n        ref={ref}\n        className={clsx(\n          styles.td,\n          styles[`align-${align}`],\n          {\n            [styles.numeric]: numeric,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </td>\n    )\n  }\n)\n\n// Export compound components\nTable.displayName = 'Table'\nTableHead.displayName = 'TableHead'\nTableBody.displayName = 'TableBody'\nTableRow.displayName = 'TableRow'\nTableHeader.displayName = 'TableHeader'\nTableCell.displayName = 'TableCell'\n\n// Attach subcomponents\nconst TableNamespace = Object.assign(Table, {\n  Head: TableHead,\n  Body: TableBody,\n  Row: TableRow,\n  Header: TableHeader,\n  Cell: TableCell,\n})\n\nexport default TableNamespace","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Spinner.module.css'\n\nexport interface SpinnerProps extends Omit<HTMLAttributes<HTMLDivElement>, 'children'> {\n  /** Size of the spinner */\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  /** Color variant */\n  color?: 'default' | 'accent' | 'success' | 'warning' | 'error' | 'info'\n  /** Animation variant */\n  variant?: 'dots' | 'bars' | 'square' | 'glitch'\n  /** Speed of animation */\n  speed?: 'slow' | 'normal' | 'fast'\n  /** Label for accessibility */\n  label?: string\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>(\n  (\n    {\n      size = 'md',\n      color = 'default',\n      variant = 'dots',\n      speed = 'normal',\n      label = 'Loading',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const renderSpinner = () => {\n      switch (variant) {\n        case 'dots':\n          return (\n            <>\n              <span className={styles.dot} />\n              <span className={styles.dot} />\n              <span className={styles.dot} />\n            </>\n          )\n        case 'bars':\n          return (\n            <>\n              <span className={styles.bar} />\n              <span className={styles.bar} />\n              <span className={styles.bar} />\n              <span className={styles.bar} />\n            </>\n          )\n        case 'square':\n          return <span className={styles.square} />\n        case 'glitch':\n          return (\n            <>\n              <span className={styles.glitchSquare} />\n              <span className={styles.glitchSquare} />\n              <span className={styles.glitchSquare} />\n            </>\n          )\n        default:\n          return null\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.spinner,\n          styles[size],\n          styles[color],\n          styles[variant],\n          styles[`speed-${speed}`],\n          className\n        )}\n        role=\"status\"\n        aria-label={label}\n        {...props}\n      >\n        {renderSpinner()}\n        <span className={styles.srOnly}>{label}</span>\n      </div>\n    )\n  }\n)\n\nSpinner.displayName = 'Spinner'","import React, { useState, useEffect, createContext, useContext, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Toast.module.css'\n\nexport type ToastType = 'info' | 'success' | 'warning' | 'error'\nexport type ToastPosition = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right'\n\nexport interface ToastData {\n  id: string\n  type: ToastType\n  title?: string\n  message: string\n  duration?: number\n  dismissible?: boolean\n  action?: {\n    label: string\n    onClick: () => void\n  }\n}\n\ninterface ToastContextValue {\n  toasts: ToastData[]\n  showToast: (toast: Omit<ToastData, 'id'>) => string\n  hideToast: (id: string) => void\n  hideAllToasts: () => void\n}\n\nconst ToastContext = createContext<ToastContextValue | null>(null)\n\nexport interface ToastProviderProps {\n  children: React.ReactNode\n  position?: ToastPosition\n  maxToasts?: number\n}\n\nexport const ToastProvider: React.FC<ToastProviderProps> = ({ \n  children, \n  position = 'bottom-right',\n  maxToasts = 5 \n}) => {\n  const [toasts, setToasts] = useState<ToastData[]>([])\n\n  const showToast = useCallback((toast: Omit<ToastData, 'id'>) => {\n    const id = `toast-${Date.now()}-${Math.random()}`\n    const newToast = { ...toast, id }\n    \n    setToasts(prev => {\n      const updated = [...prev, newToast]\n      // Keep only the latest maxToasts\n      return updated.slice(-maxToasts)\n    })\n    \n    return id\n  }, [maxToasts])\n\n  const hideToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id))\n  }, [])\n\n  const hideAllToasts = useCallback(() => {\n    setToasts([])\n  }, [])\n\n  const contextValue = { toasts, showToast, hideToast, hideAllToasts }\n\n  // Register the store for imperative API\n  useEffect(() => {\n    registerToastStore(contextValue)\n    return () => {\n      toastStore = null\n    }\n  }, [contextValue])\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <ToastContainer position={position} />\n    </ToastContext.Provider>\n  )\n}\n\ninterface ToastContainerProps {\n  position: ToastPosition\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ position }) => {\n  const context = useContext(ToastContext)\n  if (!context) return null\n\n  const { toasts } = context\n\n  if (toasts.length === 0) return null\n\n  return createPortal(\n    <div className={clsx(styles.container, styles[position])}>\n      {toasts.map(toast => (\n        <ToastItem key={toast.id} {...toast} />\n      ))}\n    </div>,\n    document.body\n  )\n}\n\ninterface ToastItemProps extends ToastData {}\n\nconst ToastItem: React.FC<ToastItemProps> = ({\n  id,\n  type,\n  title,\n  message,\n  duration = 5000,\n  dismissible = true,\n  action\n}) => {\n  const context = useContext(ToastContext)\n  const [isExiting, setIsExiting] = useState(false)\n\n  const handleDismiss = useCallback(() => {\n    setIsExiting(true)\n    setTimeout(() => {\n      context?.hideToast(id)\n    }, 300) // Match animation duration\n  }, [context, id])\n\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        handleDismiss()\n      }, duration)\n\n      return () => clearTimeout(timer)\n    }\n  }, [duration, handleDismiss])\n\n  const getIcon = () => {\n    switch (type) {\n      case 'success':\n        return 'âœ“'\n      case 'error':\n        return 'âœ•'\n      case 'warning':\n        return '!'\n      case 'info':\n      default:\n        return 'i'\n    }\n  }\n\n  return (\n    <div\n      className={clsx(\n        styles.toast,\n        styles[type],\n        {\n          [styles.exiting]: isExiting\n        }\n      )}\n      role=\"alert\"\n      aria-live=\"polite\"\n    >\n      <div className={styles.icon}>\n        <span>{getIcon()}</span>\n      </div>\n      \n      <div className={styles.content}>\n        {title && <div className={styles.title}>{title}</div>}\n        <div className={styles.message}>{message}</div>\n        {action && (\n          <button\n            className={styles.action}\n            onClick={() => {\n              action.onClick()\n              handleDismiss()\n            }}\n          >\n            {action.label}\n          </button>\n        )}\n      </div>\n\n      {dismissible && (\n        <button\n          className={styles.dismiss}\n          onClick={handleDismiss}\n          aria-label=\"Dismiss\"\n        >\n          âœ•\n        </button>\n      )}\n    </div>\n  )\n}\n\n// Hook to use toast\nexport const useToast = () => {\n  const context = useContext(ToastContext)\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider')\n  }\n  return context\n}\n\n// Store for imperative toast API\nlet toastStore: ToastContextValue | null = null\n\n// Register toast store (called by provider)\nexport const registerToastStore = (store: ToastContextValue) => {\n  toastStore = store\n}\n\n// Convenience methods\nexport const toast = {\n  info: (message: string, options?: Partial<Omit<ToastData, 'id' | 'type' | 'message'>>) => {\n    if (!toastStore) {\n      console.warn('ToastProvider not found. Make sure to wrap your app with ToastProvider.')\n      return ''\n    }\n    return toastStore.showToast({ ...options, type: 'info', message })\n  },\n  success: (message: string, options?: Partial<Omit<ToastData, 'id' | 'type' | 'message'>>) => {\n    if (!toastStore) {\n      console.warn('ToastProvider not found. Make sure to wrap your app with ToastProvider.')\n      return ''\n    }\n    return toastStore.showToast({ ...options, type: 'success', message })\n  },\n  warning: (message: string, options?: Partial<Omit<ToastData, 'id' | 'type' | 'message'>>) => {\n    if (!toastStore) {\n      console.warn('ToastProvider not found. Make sure to wrap your app with ToastProvider.')\n      return ''\n    }\n    return toastStore.showToast({ ...options, type: 'warning', message })\n  },\n  error: (message: string, options?: Partial<Omit<ToastData, 'id' | 'type' | 'message'>>) => {\n    if (!toastStore) {\n      console.warn('ToastProvider not found. Make sure to wrap your app with ToastProvider.')\n      return ''\n    }\n    return toastStore.showToast({ ...options, type: 'error', message })\n  }\n}","import React, { forwardRef, HTMLAttributes, useEffect, useRef, useCallback, useState, createContext, useContext } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Dialog.module.css'\n\nexport interface DialogProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /** Whether the dialog is open */\n  open?: boolean\n  /** Callback when open state changes */\n  onOpenChange?: (open: boolean) => void\n  /** Whether to show backdrop */\n  backdrop?: boolean\n  /** Whether clicking backdrop closes dialog */\n  closeOnBackdropClick?: boolean\n  /** Whether pressing escape closes dialog */\n  closeOnEscape?: boolean\n  /** Dialog size */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  /** Dialog position */\n  position?: 'center' | 'top' | 'bottom'\n  /** Whether to animate the dialog */\n  animate?: boolean\n  /** Whether to manage focus automatically */\n  autoFocus?: boolean\n  /** Initial focus element selector */\n  initialFocus?: string\n  /** Additional CSS classes */\n  className?: string\n}\n\ninterface DialogContextValue {\n  close: () => void\n}\n\nconst DialogContext = createContext<DialogContextValue | null>(null)\n\nexport const Dialog = forwardRef<HTMLDivElement, DialogProps>(\n  (\n    {\n      open = false,\n      onOpenChange,\n      backdrop = true,\n      closeOnBackdropClick = true,\n      closeOnEscape = true,\n      size = 'md',\n      position = 'center',\n      animate = true,\n      autoFocus = true,\n      initialFocus,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [isExiting, setIsExiting] = useState(false)\n    const dialogRef = useRef<HTMLDivElement | null>(null)\n    const previousActiveElementRef = useRef<HTMLElement | null>(null)\n\n    // Combine refs\n    const setRefs = useCallback(\n      (element: HTMLDivElement | null) => {\n        dialogRef.current = element\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(element)\n          } else {\n            ref.current = element\n          }\n        }\n      },\n      [ref]\n    )\n\n    // Close dialog\n    const close = useCallback(() => {\n      if (animate) {\n        setIsExiting(true)\n        setTimeout(() => {\n          onOpenChange?.(false)\n          setIsExiting(false)\n        }, 300) // Match animation duration\n      } else {\n        onOpenChange?.(false)\n      }\n    }, [animate, onOpenChange])\n\n    // Handle backdrop click\n    const handleBackdropClick = useCallback(\n      (event: React.MouseEvent) => {\n        if (closeOnBackdropClick && event.target === event.currentTarget) {\n          close()\n        }\n      },\n      [closeOnBackdropClick, close]\n    )\n\n    // Handle keyboard events\n    const handleKeyDown = useCallback(\n      (event: KeyboardEvent) => {\n        if (event.key === 'Escape' && closeOnEscape) {\n          close()\n        }\n      },\n      [closeOnEscape, close]\n    )\n\n    // Focus management\n    const handleFocusManagement = useCallback(() => {\n      if (!autoFocus || !dialogRef.current) return\n\n      const focusableElements = dialogRef.current.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      )\n\n      if (initialFocus) {\n        const initialElement = dialogRef.current.querySelector(initialFocus) as HTMLElement\n        if (initialElement) {\n          initialElement.focus({ preventScroll: true })\n          return\n        }\n      }\n\n      if (focusableElements.length > 0) {\n        (focusableElements[0] as HTMLElement).focus({ preventScroll: true })\n      } else {\n        dialogRef.current.focus({ preventScroll: true })\n      }\n    }, [autoFocus, initialFocus])\n\n    // Focus trap\n    const handleFocusTrap = useCallback((event: KeyboardEvent) => {\n      if (!dialogRef.current || event.key !== 'Tab') return\n\n      const focusableElements = dialogRef.current.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      )\n\n      if (focusableElements.length === 0) return\n\n      const firstElement = focusableElements[0] as HTMLElement\n      const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement\n\n      if (event.shiftKey) {\n        if (document.activeElement === firstElement) {\n          lastElement.focus({ preventScroll: true })\n          event.preventDefault()\n        }\n      } else {\n        if (document.activeElement === lastElement) {\n          firstElement.focus({ preventScroll: true })\n          event.preventDefault()\n        }\n      }\n    }, [])\n\n    // Effects\n    useEffect(() => {\n      if (open) {\n        previousActiveElementRef.current = document.activeElement as HTMLElement\n        handleFocusManagement()\n\n        document.addEventListener('keydown', handleKeyDown)\n        document.addEventListener('keydown', handleFocusTrap)\n\n        // Prevent body scroll\n        document.body.style.overflow = 'hidden'\n\n        return () => {\n          document.removeEventListener('keydown', handleKeyDown)\n          document.removeEventListener('keydown', handleFocusTrap)\n          document.body.style.overflow = ''\n\n          // Restore focus\n          if (previousActiveElementRef.current) {\n            previousActiveElementRef.current.focus({ preventScroll: true })\n          }\n        }\n      }\n    }, [open, handleKeyDown, handleFocusTrap, handleFocusManagement])\n\n    const contextValue: DialogContextValue = {\n      close,\n    }\n\n    if (!open && !isExiting) return null\n\n    return createPortal(\n      <DialogContext.Provider value={contextValue}>\n        <div\n          className={clsx(\n            styles.backdrop,\n            {\n              [styles.visible]: backdrop,\n              [styles.exiting]: isExiting,\n            }\n          )}\n          onClick={handleBackdropClick}\n        >\n          <div\n            ref={setRefs}\n            className={clsx(\n              styles.dialog,\n              styles[size],\n              styles[position],\n              {\n                [styles.animate]: animate,\n                [styles.exiting]: isExiting,\n              },\n              className\n            )}\n            role=\"dialog\"\n            aria-modal=\"true\"\n            tabIndex={-1}\n            {...props}\n          >\n            {children}\n          </div>\n        </div>\n      </DialogContext.Provider>,\n      document.body\n    )\n  }\n)\n\n// Dialog subcomponents\nexport const DialogHeader = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={clsx(styles.header, className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const DialogTitle = forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <h2 ref={ref} className={clsx(styles.title, className)} {...props}>\n        {children}\n      </h2>\n    )\n  }\n)\n\nexport const DialogBody = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={clsx(styles.body, className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const DialogFooter = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={clsx(styles.footer, className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface DialogCloseProps extends HTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean\n}\n\nexport const DialogClose = forwardRef<HTMLButtonElement, DialogCloseProps>(\n  ({ className, children, asChild, onClick, ...props }, ref) => {\n    const context = useContext(DialogContext)\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      onClick?.(e)\n      context?.close()\n    }\n\n    if (asChild && React.isValidElement(children)) {\n      return React.cloneElement(children as React.ReactElement<React.HTMLAttributes<HTMLElement>>, {\n        onClick: handleClick,\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.close, className)}\n        onClick={handleClick}\n        aria-label=\"Close dialog\"\n        {...props}\n      >\n        {children || 'âœ•'}\n      </button>\n    )\n  }\n)\n\n// Hook to use dialog context\nexport const useDialog = () => {\n  const context = useContext(DialogContext)\n  if (!context) {\n    throw new Error('useDialog must be used within a Dialog component')\n  }\n  return context\n}\n\n// Display names\nDialog.displayName = 'Dialog'\nDialogHeader.displayName = 'DialogHeader'\nDialogTitle.displayName = 'DialogTitle'\nDialogBody.displayName = 'DialogBody'\nDialogFooter.displayName = 'DialogFooter'\nDialogClose.displayName = 'DialogClose'\n\n// Attach subcomponents\nconst DialogNamespace = Object.assign(Dialog, {\n  Header: DialogHeader,\n  Title: DialogTitle,\n  Body: DialogBody,\n  Footer: DialogFooter,\n  Close: DialogClose,\n})\n\nexport default DialogNamespace","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport clsx from 'clsx'\nimport styles from './Drawer.module.css'\n\ninterface DrawerProps {\n  open?: boolean\n  defaultOpen?: boolean\n  onOpenChange?: (open: boolean) => void\n  direction?: 'left' | 'right' | 'top' | 'bottom'\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  variant?: 'default' | 'brutal' | 'outline'\n  className?: string\n  children?: React.ReactNode\n}\n\ninterface DrawerContextValue {\n  open: boolean\n  setOpen: (open: boolean) => void\n  direction: 'left' | 'right' | 'top' | 'bottom'\n  size: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  variant: 'default' | 'brutal' | 'outline'\n}\n\nconst DrawerContext = createContext<DrawerContextValue | null>(null)\n\nconst useDrawer = () => {\n  const context = useContext(DrawerContext)\n  if (!context) {\n    throw new Error('Drawer components must be used within a Drawer')\n  }\n  return context\n}\n\nconst Drawer = React.forwardRef<HTMLDivElement, DrawerProps>(\n  ({ \n    open, \n    defaultOpen = false, \n    onOpenChange, \n    direction = 'right',\n    size = 'md',\n    variant = 'default',\n    className, \n    children, \n    ...props \n  }, ref) => {\n    const [isOpen, setIsOpen] = useState(open ?? defaultOpen)\n\n    // Handle controlled state\n    useEffect(() => {\n      if (open !== undefined) {\n        setIsOpen(open)\n      }\n    }, [open])\n\n    const handleOpenChange = useCallback((newOpen: boolean) => {\n      setIsOpen(newOpen)\n      onOpenChange?.(newOpen)\n    }, [onOpenChange])\n\n    const contextValue: DrawerContextValue = {\n      open: isOpen,\n      setOpen: handleOpenChange,\n      direction,\n      size,\n      variant\n    }\n\n    return (\n      <DrawerContext.Provider value={contextValue}>\n        <div ref={ref} className={className} {...props}>\n          {children}\n        </div>\n      </DrawerContext.Provider>\n    )\n  }\n)\n\ninterface DrawerTriggerProps {\n  children: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst DrawerTrigger = React.forwardRef<HTMLButtonElement, DrawerTriggerProps>(\n  ({ children, className, asChild = false, ...props }, ref) => {\n    const { setOpen } = useDrawer()\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, {\n        onClick: () => setOpen(true),\n        ...props\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.trigger, className)}\n        onClick={() => setOpen(true)}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\n\ninterface DrawerContentProps {\n  children: React.ReactNode\n  className?: string\n  showOverlay?: boolean\n  closeOnOverlayClick?: boolean\n  closeOnEscape?: boolean\n}\n\nconst DrawerContent = React.forwardRef<HTMLDivElement, DrawerContentProps>(\n  ({ \n    children, \n    className, \n    showOverlay = true,\n    closeOnOverlayClick = true,\n    closeOnEscape = true,\n    ...props \n  }, ref) => {\n    const { open, setOpen, direction, size, variant } = useDrawer()\n\n    // Handle escape key\n    useEffect(() => {\n      if (!closeOnEscape || !open) return\n\n      const handleEscape = (e: KeyboardEvent) => {\n        if (e.key === 'Escape') {\n          setOpen(false)\n        }\n      }\n\n      document.addEventListener('keydown', handleEscape)\n      return () => document.removeEventListener('keydown', handleEscape)\n    }, [open, closeOnEscape, setOpen])\n\n    // Handle body scroll\n    useEffect(() => {\n      if (open) {\n        const originalStyle = window.getComputedStyle(document.body).overflow\n        document.body.style.overflow = 'hidden'\n        return () => {\n          document.body.style.overflow = originalStyle\n        }\n      }\n    }, [open])\n\n    // Focus management\n    useEffect(() => {\n      if (open) {\n        const activeElement = document.activeElement as HTMLElement\n        const drawerContent = document.querySelector('[data-drawer-content]') as HTMLElement\n        if (drawerContent) {\n          const focusableElement = drawerContent.querySelector(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n          ) as HTMLElement\n          if (focusableElement) {\n            focusableElement.focus()\n          }\n        }\n        return () => {\n          if (activeElement) {\n            activeElement.focus()\n          }\n        }\n      }\n    }, [open])\n\n    if (!open) return null\n\n    const content = (\n      <>\n        {showOverlay && (\n          <div \n            className={styles.overlay}\n            onClick={() => closeOnOverlayClick && setOpen(false)}\n            aria-hidden=\"true\"\n          />\n        )}\n        <div\n          ref={ref}\n          className={clsx(\n            styles.content,\n            styles[`content--${direction}`],\n            styles[`content--${size}`],\n            styles[`content--${variant}`],\n            className\n          )}\n          role=\"dialog\"\n          aria-modal=\"true\"\n          data-drawer-content\n          data-state={open ? 'open' : 'closed'}\n          {...props}\n        >\n          {children}\n        </div>\n      </>\n    )\n\n    return createPortal(content, document.body)\n  }\n)\n\ninterface DrawerHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerHeader = React.forwardRef<HTMLDivElement, DrawerHeaderProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.header, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface DrawerTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerTitle = React.forwardRef<HTMLHeadingElement, DrawerTitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <h2\n        ref={ref}\n        className={clsx(styles.title, className)}\n        {...props}\n      >\n        {children}\n      </h2>\n    )\n  }\n)\n\ninterface DrawerDescriptionProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerDescription = React.forwardRef<HTMLParagraphElement, DrawerDescriptionProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={clsx(styles.description, className)}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\ninterface DrawerBodyProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerBody = React.forwardRef<HTMLDivElement, DrawerBodyProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.body, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface DrawerFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst DrawerFooter = React.forwardRef<HTMLDivElement, DrawerFooterProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.footer, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface DrawerCloseProps {\n  children?: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst DrawerClose = React.forwardRef<HTMLButtonElement, DrawerCloseProps>(\n  ({ children, className, asChild = false, ...props }, ref) => {\n    const { setOpen } = useDrawer()\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, {\n        onClick: () => setOpen(false),\n        ...props\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.close, className)}\n        onClick={() => setOpen(false)}\n        aria-label=\"Close drawer\"\n        {...props}\n      >\n        {children || (\n          <svg\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M12 4L4 12M4 4L12 12\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        )}\n      </button>\n    )\n  }\n)\n\n// Display names\nDrawer.displayName = 'Drawer'\nDrawerTrigger.displayName = 'DrawerTrigger'\nDrawerContent.displayName = 'DrawerContent'\nDrawerHeader.displayName = 'DrawerHeader'\nDrawerTitle.displayName = 'DrawerTitle'\nDrawerDescription.displayName = 'DrawerDescription'\nDrawerBody.displayName = 'DrawerBody'\nDrawerFooter.displayName = 'DrawerFooter'\nDrawerClose.displayName = 'DrawerClose'\n\n// Compound component pattern with proper typing\ninterface DrawerCompound extends React.ForwardRefExoticComponent<DrawerProps & React.RefAttributes<HTMLDivElement>> {\n  Trigger: typeof DrawerTrigger\n  Content: typeof DrawerContent\n  Header: typeof DrawerHeader\n  Title: typeof DrawerTitle\n  Description: typeof DrawerDescription\n  Body: typeof DrawerBody\n  Footer: typeof DrawerFooter\n  Close: typeof DrawerClose\n}\n\nconst DrawerWithSubComponents = Drawer as DrawerCompound\nDrawerWithSubComponents.Trigger = DrawerTrigger\nDrawerWithSubComponents.Content = DrawerContent\nDrawerWithSubComponents.Header = DrawerHeader\nDrawerWithSubComponents.Title = DrawerTitle\nDrawerWithSubComponents.Description = DrawerDescription\nDrawerWithSubComponents.Body = DrawerBody\nDrawerWithSubComponents.Footer = DrawerFooter\nDrawerWithSubComponents.Close = DrawerClose\n\nexport { DrawerWithSubComponents as Drawer }\nexport type { \n  DrawerProps, \n  DrawerTriggerProps, \n  DrawerContentProps, \n  DrawerHeaderProps,\n  DrawerTitleProps,\n  DrawerDescriptionProps,\n  DrawerBodyProps,\n  DrawerFooterProps,\n  DrawerCloseProps\n}","import React, { useState, useRef, useEffect, useCallback, createContext, useContext, forwardRef, HTMLAttributes } from 'react'\nimport { createPortal } from 'react-dom'\nimport { clsx } from 'clsx'\nimport styles from './Dropdown.module.css'\n\nexport type DropdownPosition = \n  | 'bottom' | 'bottom-start' | 'bottom-end'\n  | 'top' | 'top-start' | 'top-end'\n  | 'left' | 'left-start' | 'left-end'\n  | 'right' | 'right-start' | 'right-end'\n\nexport interface DropdownProps {\n  /** The trigger element */\n  children: React.ReactNode\n  /** Whether the dropdown is open */\n  open?: boolean\n  /** Callback when open state changes */\n  onOpenChange?: (open: boolean) => void\n  /** Position of the dropdown */\n  position?: DropdownPosition\n  /** Alignment offset */\n  offset?: number\n  /** Whether to close on item click */\n  closeOnItemClick?: boolean\n  /** Whether to close when clicking outside */\n  closeOnClickOutside?: boolean\n  /** Whether to close when pressing escape */\n  closeOnEscape?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\ninterface DropdownContextValue {\n  close: () => void\n  closeOnItemClick: boolean\n}\n\nconst DropdownContext = createContext<DropdownContextValue | null>(null)\n\nexport const Dropdown: React.FC<DropdownProps> & {\n  Menu: typeof DropdownMenu\n  Item: typeof DropdownItem\n  Separator: typeof DropdownSeparator\n  Label: typeof DropdownLabel\n} = ({\n  children,\n  open: controlledOpen,\n  onOpenChange,\n  position = 'bottom',\n  offset = 8,\n  closeOnItemClick = true,\n  closeOnClickOutside = true,\n  closeOnEscape = true,\n  className,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [actualPosition, setActualPosition] = useState<DropdownPosition>(position)\n  const [coords, setCoords] = useState({ x: 0, y: 0 })\n  const triggerRef = useRef<HTMLElement | null>(null)\n  const dropdownRef = useRef<HTMLDivElement | null>(null)\n\n  const isOpen = controlledOpen !== undefined ? controlledOpen : open\n\n  // Extract trigger and menu from children\n  let triggerElement: React.ReactElement | null = null\n  let menuContent: React.ReactNode = null\n\n  React.Children.forEach(children, (child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === DropdownMenu) {\n        menuContent = child.props.children\n      } else {\n        triggerElement = child\n      }\n    }\n  })\n\n  // Calculate position\n  const calculatePosition = useCallback(() => {\n    if (!triggerRef.current || !dropdownRef.current) return\n\n    const triggerRect = triggerRef.current.getBoundingClientRect()\n    const dropdownRect = dropdownRef.current.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n\n    let x = 0\n    let y = 0\n\n    // Calculate base position\n    const [main, alignment] = position.split('-') as [string, string?]\n\n    switch (main) {\n      case 'bottom':\n        y = triggerRect.bottom + offset\n        break\n      case 'top':\n        y = triggerRect.top - dropdownRect.height - offset\n        break\n      case 'left':\n        x = triggerRect.left - dropdownRect.width - offset\n        break\n      case 'right':\n        x = triggerRect.right + offset\n        break\n    }\n\n    // Handle alignment\n    if (main === 'bottom' || main === 'top') {\n      switch (alignment) {\n        case 'start':\n          x = triggerRect.left\n          break\n        case 'end':\n          x = triggerRect.right - dropdownRect.width\n          break\n        default:\n          x = triggerRect.left + triggerRect.width / 2 - dropdownRect.width / 2\n      }\n    } else if (main === 'left' || main === 'right') {\n      switch (alignment) {\n        case 'start':\n          y = triggerRect.top\n          break\n        case 'end':\n          y = triggerRect.bottom - dropdownRect.height\n          break\n        default:\n          y = triggerRect.top + triggerRect.height / 2 - dropdownRect.height / 2\n      }\n    }\n\n    // Adjust for viewport boundaries\n    x = Math.max(8, Math.min(x, viewportWidth - dropdownRect.width - 8))\n    y = Math.max(8, Math.min(y, viewportHeight - dropdownRect.height - 8))\n\n    setActualPosition(position)\n    setCoords({\n      x: x,\n      y: y,\n    })\n  }, [position, offset])\n\n  // Toggle dropdown\n  const toggleDropdown = useCallback(() => {\n    if (controlledOpen === undefined) {\n      setOpen(prev => !prev)\n    }\n    onOpenChange?.(!isOpen)\n  }, [controlledOpen, isOpen, onOpenChange])\n\n  // Close dropdown\n  const closeDropdown = useCallback(() => {\n    if (controlledOpen === undefined) {\n      setOpen(false)\n    }\n    onOpenChange?.(false)\n  }, [controlledOpen, onOpenChange])\n\n  // Handle click outside\n  const handleClickOutside = useCallback((event: MouseEvent) => {\n    if (!closeOnClickOutside || !isOpen) return\n\n    const target = event.target as Node\n    if (\n      dropdownRef.current &&\n      triggerRef.current &&\n      !dropdownRef.current.contains(target) &&\n      !triggerRef.current.contains(target)\n    ) {\n      closeDropdown()\n    }\n  }, [closeOnClickOutside, isOpen, closeDropdown])\n\n  // Handle escape key\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Escape' && closeOnEscape && isOpen) {\n      closeDropdown()\n    }\n  }, [closeOnEscape, isOpen, closeDropdown])\n\n  // Effects\n  useEffect(() => {\n    if (isOpen) {\n      calculatePosition()\n\n      const handleResize = () => calculatePosition()\n      const handleScroll = () => {\n        calculatePosition()\n        // Optional: Close dropdown if trigger is scrolled out of view\n        if (triggerRef.current) {\n          const rect = triggerRef.current.getBoundingClientRect()\n          if (rect.bottom < 0 || rect.top > window.innerHeight) {\n            closeDropdown()\n          }\n        }\n      }\n\n      window.addEventListener('resize', handleResize)\n      window.addEventListener('scroll', handleScroll, true) // Use capture to catch all scroll events\n      document.addEventListener('mousedown', handleClickOutside)\n      document.addEventListener('keydown', handleKeyDown)\n\n      return () => {\n        window.removeEventListener('resize', handleResize)\n        window.removeEventListener('scroll', handleScroll, true)\n        document.removeEventListener('mousedown', handleClickOutside)\n        document.removeEventListener('keydown', handleKeyDown)\n      }\n    }\n  }, [isOpen, calculatePosition, handleClickOutside, handleKeyDown])\n\n  // Clone trigger with ref and click handler\n  const trigger = triggerElement && React.isValidElement(triggerElement) ? React.cloneElement(triggerElement, {\n    ref: (el: HTMLElement | null) => {\n      triggerRef.current = el\n    },\n    onClick: (e: React.MouseEvent) => {\n      triggerElement?.props.onClick?.(e)\n      toggleDropdown()\n    },\n    'aria-expanded': isOpen,\n    'aria-haspopup': 'menu',\n  }) : null\n\n  const contextValue: DropdownContextValue = {\n    close: closeDropdown,\n    closeOnItemClick,\n  }\n\n  return (\n    <>\n      {trigger}\n      {isOpen && createPortal(\n        <DropdownContext.Provider value={contextValue}>\n          <div\n            ref={dropdownRef}\n            className={clsx(\n              styles.dropdown,\n              styles[actualPosition.split('-')[0]],\n              className\n            )}\n            style={{\n              position: 'fixed',\n              left: coords.x,\n              top: coords.y,\n              zIndex: 'var(--brutal-z-dropdown)',\n            }}\n            role=\"menu\"\n            aria-orientation=\"vertical\"\n          >\n            {menuContent}\n          </div>\n        </DropdownContext.Provider>,\n        document.body\n      )}\n    </>\n  )\n}\n\n// Dropdown Menu container\nexport const DropdownMenu = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={clsx(styles.menu, className)} {...props}>\n        {children}\n      </div>\n    )\n  }\n)\n\n// Dropdown Item\ninterface DropdownItemProps extends HTMLAttributes<HTMLDivElement> {\n  /** Whether the item is disabled */\n  disabled?: boolean\n  /** Whether the item is destructive */\n  destructive?: boolean\n  /** Icon to display before the text */\n  icon?: React.ReactNode\n  /** Shortcut to display */\n  shortcut?: string\n}\n\nexport const DropdownItem = forwardRef<HTMLDivElement, DropdownItemProps>(\n  ({ className, disabled, destructive, icon, shortcut, children, onClick, ...props }, ref) => {\n    const context = useContext(DropdownContext)\n\n    const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n      if (disabled) return\n      \n      onClick?.(e)\n      if (context?.closeOnItemClick) {\n        context.close()\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.item,\n          {\n            [styles.disabled]: disabled,\n            [styles.destructive]: destructive,\n          },\n          className\n        )}\n        role=\"menuitem\"\n        tabIndex={disabled ? -1 : 0}\n        onClick={handleClick}\n        {...props}\n      >\n        {icon && <span className={styles.icon}>{icon}</span>}\n        <span className={styles.text}>{children}</span>\n        {shortcut && <span className={styles.shortcut}>{shortcut}</span>}\n      </div>\n    )\n  }\n)\n\n// Dropdown Separator\nexport const DropdownSeparator = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.separator, className)}\n        role=\"separator\"\n        {...props}\n      />\n    )\n  }\n)\n\n// Dropdown Label\nexport const DropdownLabel = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.label, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Hook to use dropdown context\nexport const useDropdown = () => {\n  const context = useContext(DropdownContext)\n  if (!context) {\n    throw new Error('useDropdown must be used within a Dropdown component')\n  }\n  return context\n}\n\n// Display names\nDropdownMenu.displayName = 'DropdownMenu'\nDropdownItem.displayName = 'DropdownItem'\nDropdownSeparator.displayName = 'DropdownSeparator'\nDropdownLabel.displayName = 'DropdownLabel'\n\n// Attach subcomponents\nDropdown.Menu = DropdownMenu\nDropdown.Item = DropdownItem\nDropdown.Separator = DropdownSeparator\nDropdown.Label = DropdownLabel","import React, { forwardRef, HTMLAttributes, useState, useCallback, createContext, useContext } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Tabs.module.css'\n\nexport interface TabsProps extends HTMLAttributes<HTMLDivElement> {\n  /** The default active tab */\n  defaultValue?: string\n  /** The controlled active tab */\n  value?: string\n  /** Callback when active tab changes */\n  onValueChange?: (value: string) => void\n  /** Orientation of the tabs */\n  orientation?: 'horizontal' | 'vertical'\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether tabs should be full width */\n  fullWidth?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\ninterface TabsContextValue {\n  activeTab: string\n  setActiveTab: (value: string) => void\n  orientation: 'horizontal' | 'vertical'\n  size: 'sm' | 'md' | 'lg'\n}\n\nconst TabsContext = createContext<TabsContextValue | null>(null)\n\nexport const Tabs = forwardRef<HTMLDivElement, TabsProps>(\n  (\n    {\n      defaultValue = '',\n      value: controlledValue,\n      onValueChange,\n      orientation = 'horizontal',\n      size = 'md',\n      fullWidth = false,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [internalValue, setInternalValue] = useState(defaultValue)\n    const activeTab = controlledValue !== undefined ? controlledValue : internalValue\n\n    const setActiveTab = useCallback((newValue: string) => {\n      if (controlledValue === undefined) {\n        setInternalValue(newValue)\n      }\n      onValueChange?.(newValue)\n    }, [controlledValue, onValueChange])\n\n    const contextValue: TabsContextValue = {\n      activeTab,\n      setActiveTab,\n      orientation,\n      size,\n    }\n\n    return (\n      <TabsContext.Provider value={contextValue}>\n        <div\n          ref={ref}\n          className={clsx(\n            styles.tabs,\n            styles[orientation],\n            styles[size],\n            {\n              [styles.fullWidth]: fullWidth,\n            },\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TabsContext.Provider>\n    )\n  }\n)\n\n// Tabs List container\ninterface TabsListProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const TabsList = forwardRef<HTMLDivElement, TabsListProps>(\n  ({ className, children, ...props }, ref) => {\n    const context = useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsList must be used within Tabs')\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.list,\n          styles[context.orientation],\n          className\n        )}\n        role=\"tablist\"\n        aria-orientation={context.orientation}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Tab Trigger\ninterface TabsTriggerProps extends HTMLAttributes<HTMLButtonElement> {\n  /** The value of the tab */\n  value: string\n  /** Whether the tab is disabled */\n  disabled?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const TabsTrigger = forwardRef<HTMLButtonElement, TabsTriggerProps>(\n  ({ value, disabled, className, children, onClick, ...props }, ref) => {\n    const context = useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsTrigger must be used within Tabs')\n    }\n\n    const isActive = context.activeTab === value\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      if (!disabled) {\n        context.setActiveTab(value)\n        onClick?.(e)\n      }\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(\n          styles.trigger,\n          styles[context.size],\n          {\n            [styles.active]: isActive,\n            [styles.disabled]: disabled,\n          },\n          className\n        )}\n        role=\"tab\"\n        aria-selected={isActive}\n        aria-controls={`tabpanel-${value}`}\n        id={`tab-${value}`}\n        tabIndex={isActive ? 0 : -1}\n        disabled={disabled}\n        onClick={handleClick}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\n\n// Tab Content\ninterface TabsContentProps extends HTMLAttributes<HTMLDivElement> {\n  /** The value of the tab */\n  value: string\n  /** Whether to force mount the content */\n  forceMount?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const TabsContent = forwardRef<HTMLDivElement, TabsContentProps>(\n  ({ value, forceMount = false, className, children, ...props }, ref) => {\n    const context = useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsContent must be used within Tabs')\n    }\n\n    const isActive = context.activeTab === value\n\n    if (!isActive && !forceMount) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.content,\n          {\n            [styles.active]: isActive,\n            [styles.inactive]: !isActive,\n          },\n          className\n        )}\n        role=\"tabpanel\"\n        aria-labelledby={`tab-${value}`}\n        id={`tabpanel-${value}`}\n        tabIndex={0}\n        hidden={!isActive}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Hook to use tabs context\nexport const useTabs = () => {\n  const context = useContext(TabsContext)\n  if (!context) {\n    throw new Error('useTabs must be used within Tabs')\n  }\n  return context\n}\n\n// Display names\nTabs.displayName = 'Tabs'\nTabsList.displayName = 'TabsList'\nTabsTrigger.displayName = 'TabsTrigger'\nTabsContent.displayName = 'TabsContent'\n\n// Attach subcomponents\nconst TabsNamespace = Object.assign(Tabs, {\n  List: TabsList,\n  Trigger: TabsTrigger,\n  Content: TabsContent,\n})\n\nexport default TabsNamespace","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Container.module.css'\n\nexport interface ContainerProps extends HTMLAttributes<HTMLDivElement> {\n  /** Container size */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  /** Whether the container should be centered */\n  centered?: boolean\n  /** Container padding */\n  padding?: 'none' | 'sm' | 'md' | 'lg'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Container = forwardRef<HTMLDivElement, ContainerProps>(\n  (\n    {\n      size = 'lg',\n      centered = true,\n      padding = 'md',\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.container,\n          styles[size],\n          styles[`padding-${padding}`],\n          {\n            [styles.centered]: centered,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nContainer.displayName = 'Container'","import { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Stack.module.css'\n\nexport interface StackProps extends HTMLAttributes<HTMLDivElement> {\n  /** Stack direction */\n  direction?: 'horizontal' | 'vertical'\n  /** Gap between items */\n  gap?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  /** Alignment of items */\n  align?: 'start' | 'center' | 'end' | 'stretch'\n  /** Justification of items */\n  justify?: 'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'\n  /** Whether items should wrap */\n  wrap?: boolean\n  /** Stack element type */\n  as?: 'div' | 'section' | 'article' | 'aside' | 'header' | 'footer' | 'main' | 'nav'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Stack = forwardRef<HTMLDivElement, StackProps>(\n  (\n    {\n      direction = 'vertical',\n      gap = 'md',\n      align = 'stretch',\n      justify = 'start',\n      wrap = false,\n      as: Component = 'div',\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <Component\n        ref={ref}\n        className={clsx(\n          styles.stack,\n          styles[direction],\n          styles[`gap-${gap}`],\n          styles[`align-${align}`],\n          styles[`justify-${justify}`],\n          {\n            [styles.wrap]: wrap,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Component>\n    )\n  }\n)\n\nStack.displayName = 'Stack'","import React, { forwardRef, HTMLAttributes, AnchorHTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Breadcrumb.module.css'\n\nexport interface BreadcrumbProps extends HTMLAttributes<HTMLElement> {\n  /** Separator between breadcrumb items */\n  separator?: React.ReactNode\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface BreadcrumbItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Whether this item is the current page */\n  isCurrentPage?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface BreadcrumbLinkProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Breadcrumb = forwardRef<HTMLElement, BreadcrumbProps>(\n  ({ separator = '/', className, children, ...props }, ref) => {\n    return (\n      <nav\n        ref={ref}\n        aria-label=\"Breadcrumb\"\n        className={clsx(styles.breadcrumb, className)}\n        {...props}\n      >\n        <ol className={styles.list}>\n          {React.Children.map(children, (child, index) => {\n            if (!React.isValidElement(child)) return null\n            \n            const isLast = index === React.Children.count(children) - 1\n            \n            return (\n              <>\n                {child}\n                {!isLast && (\n                  <li className={styles.separator} aria-hidden=\"true\">\n                    {separator}\n                  </li>\n                )}\n              </>\n            )\n          })}\n        </ol>\n      </nav>\n    )\n  }\n)\n\nexport const BreadcrumbItem = forwardRef<HTMLLIElement, BreadcrumbItemProps>(\n  ({ isCurrentPage = false, className, children, ...props }, ref) => {\n    return (\n      <li\n        ref={ref}\n        className={clsx(\n          styles.item,\n          {\n            [styles.current]: isCurrentPage,\n          },\n          className\n        )}\n        aria-current={isCurrentPage ? 'page' : undefined}\n        {...props}\n      >\n        {children}\n      </li>\n    )\n  }\n)\n\nexport const BreadcrumbLink = forwardRef<HTMLAnchorElement, BreadcrumbLinkProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <a\n        ref={ref}\n        className={clsx(styles.link, className)}\n        {...props}\n      >\n        {children}\n      </a>\n    )\n  }\n)\n\nexport const BreadcrumbPage = forwardRef<HTMLSpanElement, HTMLAttributes<HTMLSpanElement>>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <span\n        ref={ref}\n        className={clsx(styles.page, className)}\n        {...props}\n      >\n        {children}\n      </span>\n    )\n  }\n)\n\n// Display names\nBreadcrumb.displayName = 'Breadcrumb'\nBreadcrumbItem.displayName = 'BreadcrumbItem'\nBreadcrumbLink.displayName = 'BreadcrumbLink'\nBreadcrumbPage.displayName = 'BreadcrumbPage'\n\n// Attach subcomponents\nconst BreadcrumbNamespace = Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem,\n  Link: BreadcrumbLink,\n  Page: BreadcrumbPage,\n})\n\nexport default BreadcrumbNamespace","import React, { forwardRef, HTMLAttributes, createContext, useContext } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Sidebar.module.css'\n\nexport interface SidebarProps extends HTMLAttributes<HTMLDivElement> {\n  /** Whether the sidebar is collapsible */\n  collapsible?: boolean\n  /** Whether the sidebar is collapsed */\n  collapsed?: boolean\n  /** Callback when collapse state changes */\n  onCollapsedChange?: (collapsed: boolean) => void\n  /** Sidebar position */\n  side?: 'left' | 'right'\n  /** Sidebar variant */\n  variant?: 'default' | 'floating' | 'inset'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarContentProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarGroupLabelProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarGroupContentProps extends HTMLAttributes<HTMLDivElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarMenuProps extends HTMLAttributes<HTMLUListElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarMenuItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface SidebarMenuButtonProps extends HTMLAttributes<HTMLButtonElement> {\n  /** Whether the menu item is active */\n  isActive?: boolean\n  /** Icon to display */\n  icon?: React.ReactNode\n  /** Additional CSS classes */\n  className?: string\n}\n\ninterface SidebarContextValue {\n  collapsed: boolean\n  collapsible: boolean\n}\n\nconst SidebarContext = createContext<SidebarContextValue | null>(null)\n\nexport const Sidebar = forwardRef<HTMLDivElement, SidebarProps>(\n  (\n    {\n      collapsible = false,\n      collapsed = false,\n      onCollapsedChange: _onCollapsedChange,\n      side = 'left',\n      variant = 'default',\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const contextValue: SidebarContextValue = {\n      collapsed,\n      collapsible,\n    }\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <div\n          ref={ref}\n          className={clsx(\n            styles.sidebar,\n            styles[side],\n            styles[variant],\n            {\n              [styles.collapsed]: collapsed,\n              [styles.collapsible]: collapsible,\n            },\n            className\n          )}\n          data-sidebar=\"sidebar\"\n          data-collapsed={collapsed}\n          {...props}\n        >\n          {children}\n        </div>\n      </SidebarContext.Provider>\n    )\n  }\n)\n\nexport const SidebarHeader = forwardRef<HTMLDivElement, SidebarHeaderProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.header, className)}\n        data-sidebar=\"header\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarContent = forwardRef<HTMLDivElement, SidebarContentProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.content, className)}\n        data-sidebar=\"content\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarFooter = forwardRef<HTMLDivElement, SidebarFooterProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.footer, className)}\n        data-sidebar=\"footer\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarGroup = forwardRef<HTMLDivElement, SidebarGroupProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.group, className)}\n        data-sidebar=\"group\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarGroupLabel = forwardRef<HTMLDivElement, SidebarGroupLabelProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.groupLabel, className)}\n        data-sidebar=\"group-label\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarGroupContent = forwardRef<HTMLDivElement, SidebarGroupContentProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.groupContent, className)}\n        data-sidebar=\"group-content\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport const SidebarMenu = forwardRef<HTMLUListElement, SidebarMenuProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <ul\n        ref={ref}\n        className={clsx(styles.menu, className)}\n        data-sidebar=\"menu\"\n        {...props}\n      >\n        {children}\n      </ul>\n    )\n  }\n)\n\nexport const SidebarMenuItem = forwardRef<HTMLLIElement, SidebarMenuItemProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <li\n        ref={ref}\n        className={clsx(styles.menuItem, className)}\n        data-sidebar=\"menu-item\"\n        {...props}\n      >\n        {children}\n      </li>\n    )\n  }\n)\n\nexport const SidebarMenuButton = forwardRef<HTMLButtonElement, SidebarMenuButtonProps>(\n  ({ isActive = false, icon, className, children, ...props }, ref) => {\n    const context = useContext(SidebarContext)\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(\n          styles.menuButton,\n          {\n            [styles.active]: isActive,\n            [styles.withIcon]: !!icon,\n          },\n          className\n        )}\n        data-sidebar=\"menu-button\"\n        data-active={isActive}\n        {...props}\n      >\n        {icon && (\n          <span className={styles.icon} data-sidebar=\"icon\">\n            {icon}\n          </span>\n        )}\n        {(!context?.collapsed || !context?.collapsible) && (\n          <span className={styles.text} data-sidebar=\"text\">\n            {children}\n          </span>\n        )}\n      </button>\n    )\n  }\n)\n\n// Hook to use sidebar context\nexport const useSidebar = () => {\n  const context = useContext(SidebarContext)\n  if (!context) {\n    throw new Error('useSidebar must be used within a Sidebar component')\n  }\n  return context\n}\n\n// Display names\nSidebar.displayName = 'Sidebar'\nSidebarHeader.displayName = 'SidebarHeader'\nSidebarContent.displayName = 'SidebarContent'\nSidebarFooter.displayName = 'SidebarFooter'\nSidebarGroup.displayName = 'SidebarGroup'\nSidebarGroupLabel.displayName = 'SidebarGroupLabel'\nSidebarGroupContent.displayName = 'SidebarGroupContent'\nSidebarMenu.displayName = 'SidebarMenu'\nSidebarMenuItem.displayName = 'SidebarMenuItem'\nSidebarMenuButton.displayName = 'SidebarMenuButton'\n\n// Attach subcomponents\nconst SidebarNamespace = Object.assign(Sidebar, {\n  Header: SidebarHeader,\n  Content: SidebarContent,\n  Footer: SidebarFooter,\n  Group: SidebarGroup,\n  GroupLabel: SidebarGroupLabel,\n  GroupContent: SidebarGroupContent,\n  Menu: SidebarMenu,\n  MenuItem: SidebarMenuItem,\n  MenuButton: SidebarMenuButton,\n})\n\nexport default SidebarNamespace","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Navigation.module.css'\n\nexport interface NavigationProps extends HTMLAttributes<HTMLElement> {\n  /** Whether the navigation is vertical */\n  vertical?: boolean\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface NavigationListProps extends HTMLAttributes<HTMLUListElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface NavigationItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Whether the item is active */\n  isActive?: boolean\n  /** Whether the item is disabled */\n  disabled?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface NavigationLinkProps extends HTMLAttributes<HTMLAnchorElement> {\n  /** Link href */\n  href?: string\n  /** Whether the link is active */\n  isActive?: boolean\n  /** Whether the link is disabled */\n  disabled?: boolean\n  /** Icon to display */\n  icon?: React.ReactNode\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface NavigationSeparatorProps extends HTMLAttributes<HTMLHRElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\n// Create compound component interface\ninterface NavigationComponent extends React.ForwardRefExoticComponent<NavigationProps & React.RefAttributes<HTMLElement>> {\n  List: typeof NavigationList;\n  Item: typeof NavigationItem;\n  Link: typeof NavigationLink;\n  Separator: typeof NavigationSeparator;\n}\n\nexport const Navigation = forwardRef<HTMLElement, NavigationProps>(\n  ({ vertical = false, size = 'md', className, children, ...props }, ref) => {\n    return (\n      <nav\n        ref={ref}\n        className={clsx(\n          styles.navigation,\n          {\n            [styles.vertical]: vertical,\n            [styles[size]]: size,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </nav>\n    )\n  }\n) as NavigationComponent\n\nexport const NavigationList = forwardRef<HTMLUListElement, NavigationListProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <ul\n        ref={ref}\n        className={clsx(styles.list, className)}\n        {...props}\n      >\n        {children}\n      </ul>\n    )\n  }\n)\n\nexport const NavigationItem = forwardRef<HTMLLIElement, NavigationItemProps>(\n  ({ isActive, disabled, className, children, ...props }, ref) => {\n    return (\n      <li\n        ref={ref}\n        className={clsx(\n          styles.item,\n          {\n            [styles.active]: isActive,\n            [styles.disabled]: disabled,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </li>\n    )\n  }\n)\n\nexport const NavigationLink = forwardRef<HTMLAnchorElement, NavigationLinkProps>(\n  ({ href, isActive, disabled, icon, className, children, ...props }, ref) => {\n    return (\n      <a\n        ref={ref}\n        href={disabled ? undefined : href}\n        className={clsx(\n          styles.link,\n          {\n            [styles.active]: isActive,\n            [styles.disabled]: disabled,\n          },\n          className\n        )}\n        aria-current={isActive ? 'page' : undefined}\n        tabIndex={disabled ? -1 : undefined}\n        {...props}\n      >\n        {icon && <span className={styles.icon}>{icon}</span>}\n        <span className={styles.text}>{children}</span>\n      </a>\n    )\n  }\n)\n\nexport const NavigationSeparator = forwardRef<HTMLHRElement, NavigationSeparatorProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <hr\n        ref={ref}\n        className={clsx(styles.separator, className)}\n        {...props}\n      />\n    )\n  }\n)\n\n// Display names\nNavigation.displayName = 'Navigation'\nNavigationList.displayName = 'NavigationList'\nNavigationItem.displayName = 'NavigationItem'\nNavigationLink.displayName = 'NavigationLink'\nNavigationSeparator.displayName = 'NavigationSeparator'\n\n// Attach subcomponents\nNavigation.List = NavigationList\nNavigation.Item = NavigationItem\nNavigation.Link = NavigationLink\nNavigation.Separator = NavigationSeparator","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './TableOfContents.module.css'\n\nexport interface TableOfContentsProps extends HTMLAttributes<HTMLElement> {\n  /** Title for the table of contents */\n  title?: string\n  /** Whether to show the title */\n  showTitle?: boolean\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Position variant */\n  position?: 'default' | 'sticky' | 'floating'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableOfContentsListProps extends HTMLAttributes<HTMLOListElement> {\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableOfContentsItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Heading level (1-6) */\n  level?: 1 | 2 | 3 | 4 | 5 | 6\n  /** Whether the item is active */\n  isActive?: boolean\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport interface TableOfContentsLinkProps extends HTMLAttributes<HTMLAnchorElement> {\n  /** Link href (usually an anchor) */\n  href: string\n  /** Whether the link is active */\n  isActive?: boolean\n  /** Heading level for styling */\n  level?: 1 | 2 | 3 | 4 | 5 | 6\n  /** Additional CSS classes */\n  className?: string\n}\n\n// Create compound component type interface\nexport interface TableOfContentsComponent extends React.ForwardRefExoticComponent<TableOfContentsProps & React.RefAttributes<HTMLElement>> {\n  List: typeof TableOfContentsList;\n  Item: typeof TableOfContentsItem;\n  Link: typeof TableOfContentsLink;\n}\n\nexport const TableOfContents = forwardRef<HTMLElement, TableOfContentsProps>(\n  ({ \n    title = 'Table of Contents', \n    showTitle = true, \n    size = 'md', \n    position = 'default',\n    className, \n    children, \n    ...props \n  }, ref) => {\n    return (\n      <nav\n        ref={ref}\n        className={clsx(\n          styles.tableOfContents,\n          styles[size],\n          styles[position],\n          className\n        )}\n        aria-label=\"Table of contents\"\n        {...props}\n      >\n        {showTitle && (\n          <h2 className={styles.title}>\n            {title}\n          </h2>\n        )}\n        {children}\n      </nav>\n    )\n  }\n) as TableOfContentsComponent\n\nexport const TableOfContentsList = forwardRef<HTMLOListElement, TableOfContentsListProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <ol\n        ref={ref}\n        className={clsx(styles.list, className)}\n        {...props}\n      >\n        {children}\n      </ol>\n    )\n  }\n)\n\nexport const TableOfContentsItem = forwardRef<HTMLLIElement, TableOfContentsItemProps>(\n  ({ level = 1, isActive, className, children, ...props }, ref) => {\n    return (\n      <li\n        ref={ref}\n        className={clsx(\n          styles.item,\n          styles[`level${level}`],\n          {\n            [styles.active]: isActive,\n          },\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </li>\n    )\n  }\n)\n\nexport const TableOfContentsLink = forwardRef<HTMLAnchorElement, TableOfContentsLinkProps>(\n  ({ href, isActive, level = 1, className, children, ...props }, ref) => {\n    return (\n      <a\n        ref={ref}\n        href={href}\n        className={clsx(\n          styles.link,\n          styles[`linkLevel${level}`],\n          {\n            [styles.activeLink]: isActive,\n          },\n          className\n        )}\n        aria-current={isActive ? 'location' : undefined}\n        {...props}\n      >\n        <span className={styles.linkText}>{children}</span>\n      </a>\n    )\n  }\n)\n\n// Display names\nTableOfContents.displayName = 'TableOfContents'\nTableOfContentsList.displayName = 'TableOfContentsList'\nTableOfContentsItem.displayName = 'TableOfContentsItem'\nTableOfContentsLink.displayName = 'TableOfContentsLink'\n\n// Attach subcomponents\nTableOfContents.List = TableOfContentsList\nTableOfContents.Item = TableOfContentsItem\nTableOfContents.Link = TableOfContentsLink","import { createContext, forwardRef, HTMLAttributes, useContext, useState, useId, ReactNode } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Accordion.module.css'\n\nexport interface AccordionProps extends HTMLAttributes<HTMLDivElement> {\n  /** Type of accordion behavior */\n  type?: 'single' | 'multiple'\n  /** For single type: whether an item can be collapsed */\n  collapsible?: boolean\n  /** Default open items (for controlled) */\n  defaultValue?: string | string[]\n  /** Controlled value */\n  value?: string | string[]\n  /** Callback when value changes */\n  onValueChange?: (value: string | string[]) => void\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Visual variant */\n  variant?: 'default' | 'brutal' | 'outline'\n  /** Disabled state */\n  disabled?: boolean\n}\n\nexport interface AccordionItemProps extends HTMLAttributes<HTMLDivElement> {\n  /** Unique value for this item */\n  value: string\n  /** Whether this item is disabled */\n  disabled?: boolean\n}\n\nexport interface AccordionTriggerProps extends HTMLAttributes<HTMLButtonElement> {\n  /** Custom icon to display */\n  icon?: ReactNode\n  /** Hide the default chevron icon */\n  hideIcon?: boolean\n}\n\nexport interface AccordionContentProps extends HTMLAttributes<HTMLDivElement> {\n  /** Content to display when expanded */\n  children: ReactNode\n}\n\n// Context for accordion state\ninterface AccordionContextValue {\n  type: 'single' | 'multiple'\n  value: string | string[]\n  onValueChange: (value: string | string[]) => void\n  size: 'sm' | 'md' | 'lg'\n  variant: 'default' | 'brutal' | 'outline'\n  disabled: boolean\n  collapsible: boolean\n}\n\nconst AccordionContext = createContext<AccordionContextValue | null>(null)\n\n// Context for accordion item\ninterface AccordionItemContextValue {\n  value: string\n  isOpen: boolean\n  disabled: boolean\n  toggle: () => void\n  triggerId: string\n  contentId: string\n}\n\nconst AccordionItemContext = createContext<AccordionItemContextValue | null>(null)\n\nconst Accordion = forwardRef<HTMLDivElement, AccordionProps>(\n  (\n    {\n      children,\n      className,\n      type = 'single',\n      collapsible = false,\n      defaultValue,\n      value: controlledValue,\n      onValueChange,\n      size = 'md',\n      variant = 'default',\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    // Initialize internal state\n    const [internalValue, setInternalValue] = useState<string | string[]>(() => {\n      if (controlledValue !== undefined) return controlledValue\n      if (defaultValue !== undefined) return defaultValue\n      return type === 'multiple' ? [] : ''\n    })\n\n    const value = controlledValue !== undefined ? controlledValue : internalValue\n\n    const handleValueChange = (newValue: string | string[]) => {\n      if (controlledValue === undefined) {\n        setInternalValue(newValue)\n      }\n      onValueChange?.(newValue)\n    }\n\n    return (\n      <AccordionContext.Provider\n        value={{\n          type,\n          value,\n          onValueChange: handleValueChange,\n          size,\n          variant,\n          disabled,\n          collapsible,\n        }}\n      >\n        <div\n          ref={ref}\n          className={clsx(\n            styles.accordion,\n            styles[size],\n            styles[variant],\n            {\n              [styles.disabled]: disabled,\n            },\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </AccordionContext.Provider>\n    )\n  }\n)\n\nconst AccordionItem = forwardRef<HTMLDivElement, AccordionItemProps>(\n  ({ children, className, value, disabled: itemDisabled = false, ...props }, ref) => {\n    const context = useContext(AccordionContext)\n    if (!context) {\n      throw new Error('AccordionItem must be used within an Accordion')\n    }\n\n    const { type, value: accordionValue, onValueChange, disabled: accordionDisabled } = context\n    const disabled = accordionDisabled || itemDisabled\n\n    // Generate unique IDs for accessibility\n    const baseId = useId()\n    const triggerId = `${baseId}-trigger`\n    const contentId = `${baseId}-content`\n\n    // Determine if this item is open\n    const isOpen = type === 'multiple' \n      ? Array.isArray(accordionValue) && accordionValue.includes(value)\n      : accordionValue === value\n\n    const toggle = () => {\n      if (disabled) return\n\n      if (type === 'multiple') {\n        const currentValue = Array.isArray(accordionValue) ? accordionValue : []\n        const newValue = isOpen\n          ? currentValue.filter(v => v !== value)\n          : [...currentValue, value]\n        onValueChange(newValue)\n      } else {\n        const newValue = isOpen && context.collapsible ? '' : value\n        onValueChange(newValue)\n      }\n    }\n\n    return (\n      <AccordionItemContext.Provider\n        value={{\n          value,\n          isOpen,\n          disabled,\n          toggle,\n          triggerId,\n          contentId,\n        }}\n      >\n        <div\n          ref={ref}\n          className={clsx(\n            styles.item,\n            {\n              [styles.open]: isOpen,\n              [styles.disabled]: disabled,\n            },\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </AccordionItemContext.Provider>\n    )\n  }\n)\n\nconst AccordionTrigger = forwardRef<HTMLButtonElement, AccordionTriggerProps>(\n  ({ children, className, icon, hideIcon = false, onClick, ...props }, ref) => {\n    const itemContext = useContext(AccordionItemContext)\n    const accordionContext = useContext(AccordionContext)\n    \n    if (!itemContext || !accordionContext) {\n      throw new Error('AccordionTrigger must be used within an AccordionItem')\n    }\n\n    const { isOpen, disabled, toggle, triggerId, contentId } = itemContext\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      toggle()\n      onClick?.(event)\n    }\n\n    return (\n      <button\n        ref={ref}\n        id={triggerId}\n        type=\"button\"\n        className={clsx(\n          styles.trigger,\n          {\n            [styles.open]: isOpen,\n            [styles.disabled]: disabled,\n          },\n          className\n        )}\n        onClick={handleClick}\n        disabled={disabled}\n        aria-expanded={isOpen}\n        aria-controls={contentId}\n        {...props}\n      >\n        <span className={styles.triggerText}>{children}</span>\n        {!hideIcon && (\n          <span \n            className={clsx(styles.triggerIcon, {\n              [styles.rotated]: isOpen\n            })}\n          >\n            {icon || <DefaultChevronIcon />}\n          </span>\n        )}\n      </button>\n    )\n  }\n)\n\nconst AccordionContent = forwardRef<HTMLDivElement, AccordionContentProps>(\n  ({ children, className, ...props }, ref) => {\n    const itemContext = useContext(AccordionItemContext)\n    \n    if (!itemContext) {\n      throw new Error('AccordionContent must be used within an AccordionItem')\n    }\n\n    const { isOpen, contentId, triggerId } = itemContext\n\n    return (\n      <div\n        ref={ref}\n        id={contentId}\n        role=\"region\"\n        aria-labelledby={triggerId}\n        className={clsx(\n          styles.content,\n          {\n            [styles.open]: isOpen,\n          },\n          className\n        )}\n        {...props}\n      >\n        <div className={styles.contentInner}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n)\n\n// Default chevron icon\nconst DefaultChevronIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M4 6L8 10L12 6\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n      strokeLinejoin=\"miter\"\n    />\n  </svg>\n)\n\nAccordion.displayName = 'Accordion'\nAccordionItem.displayName = 'Accordion.Item'\nAccordionTrigger.displayName = 'Accordion.Trigger'\nAccordionContent.displayName = 'Accordion.Content'\n\n// Compound component\nconst AccordionComponent = Accordion as typeof Accordion & {\n  Item: typeof AccordionItem\n  Trigger: typeof AccordionTrigger\n  Content: typeof AccordionContent\n}\n\nAccordionComponent.Item = AccordionItem\nAccordionComponent.Trigger = AccordionTrigger\nAccordionComponent.Content = AccordionContent\n\nexport { AccordionComponent as Accordion }","import React, { createContext, useContext, useState, useRef, useEffect, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport clsx from 'clsx'\nimport styles from './Combobox.module.css'\n\ninterface ComboboxOption {\n  value: string\n  label: string\n  disabled?: boolean\n}\n\ninterface ComboboxProps {\n  options: ComboboxOption[]\n  value?: string\n  defaultValue?: string\n  onValueChange?: (value: string) => void\n  placeholder?: string\n  emptyMessage?: string\n  searchPlaceholder?: string\n  disabled?: boolean\n  className?: string\n  children?: React.ReactNode\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'outline' | 'info' | 'system' | 'destructive' | 'success' | 'warning' | 'ghost' | 'neon' | 'retro'\n  style?: React.CSSProperties\n}\n\ninterface ComboboxContextValue {\n  isOpen: boolean\n  setIsOpen: (open: boolean) => void\n  selectedValue: string\n  setSelectedValue: (value: string) => void\n  searchValue: string\n  setSearchValue: (value: string) => void\n  options: ComboboxOption[]\n  filteredOptions: ComboboxOption[]\n  triggerRef: React.RefObject<HTMLButtonElement>\n  contentRef: React.RefObject<HTMLDivElement>\n  highlightedIndex: number\n  setHighlightedIndex: (index: number) => void\n  onSelect: (value: string) => void\n  placeholder?: string\n  emptyMessage?: string\n  searchPlaceholder?: string\n}\n\nconst ComboboxContext = createContext<ComboboxContextValue | null>(null)\n\nconst useCombobox = () => {\n  const context = useContext(ComboboxContext)\n  if (!context) {\n    throw new Error('Combobox components must be used within a Combobox')\n  }\n  return context\n}\n\nconst Combobox = React.forwardRef<HTMLDivElement, ComboboxProps>(\n  ({ \n    options = [], \n    value, \n    defaultValue = '', \n    onValueChange, \n    placeholder,\n    emptyMessage,\n    searchPlaceholder,\n    className, \n    children, \n    size = 'md',\n    variant = 'default',\n    ...props \n  }, ref) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [selectedValue, setSelectedValue] = useState(value ?? defaultValue)\n    const [searchValue, setSearchValue] = useState('')\n    const [highlightedIndex, setHighlightedIndex] = useState(-1)\n    \n    const triggerRef = useRef<HTMLButtonElement>(null)\n    const contentRef = useRef<HTMLDivElement>(null)\n\n    // Filter options based on search\n    const filteredOptions = React.useMemo(() => {\n      if (!searchValue) return options\n      return options.filter(option => \n        option.label.toLowerCase().includes(searchValue.toLowerCase())\n      )\n    }, [options, searchValue])\n\n    // Handle value changes\n    useEffect(() => {\n      if (value !== undefined) {\n        setSelectedValue(value)\n      }\n    }, [value])\n\n    const onSelect = useCallback((optionValue: string) => {\n      setSelectedValue(optionValue)\n      setIsOpen(false)\n      setSearchValue('')\n      setHighlightedIndex(-1)\n      onValueChange?.(optionValue)\n    }, [onValueChange])\n\n    // Handle keyboard navigation\n    const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n      if (!isOpen) {\n        if (e.key === 'Enter' || e.key === ' ' || e.key === 'ArrowDown') {\n          e.preventDefault()\n          setIsOpen(true)\n          setHighlightedIndex(0)\n        }\n        return\n      }\n\n      switch (e.key) {\n        case 'Escape':\n          e.preventDefault()\n          setIsOpen(false)\n          setHighlightedIndex(-1)\n          triggerRef.current?.focus()\n          break\n        case 'ArrowDown':\n          e.preventDefault()\n          setHighlightedIndex(prev => \n            prev < filteredOptions.length - 1 ? prev + 1 : 0\n          )\n          break\n        case 'ArrowUp':\n          e.preventDefault()\n          setHighlightedIndex(prev => \n            prev > 0 ? prev - 1 : filteredOptions.length - 1\n          )\n          break\n        case 'Enter':\n          e.preventDefault()\n          if (highlightedIndex >= 0 && filteredOptions[highlightedIndex]) {\n            onSelect(filteredOptions[highlightedIndex].value)\n          }\n          break\n      }\n    }, [isOpen, filteredOptions, highlightedIndex, onSelect])\n\n    // Close on outside click\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (\n          contentRef.current && \n          !contentRef.current.contains(event.target as Node) &&\n          triggerRef.current &&\n          !triggerRef.current.contains(event.target as Node)\n        ) {\n          setIsOpen(false)\n          setHighlightedIndex(-1)\n        }\n      }\n\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside)\n        return () => document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }, [isOpen])\n\n    const contextValue: ComboboxContextValue = {\n      isOpen,\n      setIsOpen,\n      selectedValue,\n      setSelectedValue,\n      searchValue,\n      setSearchValue,\n      options,\n      filteredOptions,\n      triggerRef,\n      contentRef,\n      highlightedIndex,\n      setHighlightedIndex,\n      onSelect,\n      placeholder,\n      emptyMessage,\n      searchPlaceholder\n    }\n\n    return (\n      <ComboboxContext.Provider value={contextValue}>\n        <div \n          ref={ref}\n          className={clsx(\n            styles.combobox,\n            styles[`combobox--${size}`],\n            styles[`combobox--${variant}`],\n            className\n          )}\n          onKeyDown={handleKeyDown}\n          {...props}\n        >\n          {children}\n        </div>\n      </ComboboxContext.Provider>\n    )\n  }\n)\n\ninterface ComboboxTriggerProps {\n  children?: React.ReactNode\n  className?: string\n  placeholder?: string\n  icon?: React.ReactNode\n}\n\nconst ComboboxTrigger = React.forwardRef<HTMLButtonElement, ComboboxTriggerProps>(\n  ({ className, placeholder: triggerPlaceholder, icon, ...props }, _ref) => {\n    const { isOpen, setIsOpen, selectedValue, options, triggerRef, placeholder: contextPlaceholder } = useCombobox()\n    \n    const selectedOption = options.find(option => option.value === selectedValue)\n    const finalPlaceholder = triggerPlaceholder || contextPlaceholder || 'Select option...'\n    \n    return (\n      <button\n        ref={triggerRef}\n        type=\"button\"\n        role=\"combobox\"\n        aria-expanded={isOpen}\n        aria-haspopup=\"listbox\"\n        className={clsx(styles.trigger, className)}\n        onClick={() => setIsOpen(!isOpen)}\n        {...props}\n      >\n        {icon && <span className={styles.triggerIcon}>{icon}</span>}\n        <span className={styles.triggerText}>\n          {selectedOption ? selectedOption.label : finalPlaceholder}\n        </span>\n        <svg \n          className={clsx(styles.triggerArrow, { [styles.triggerArrowOpen]: isOpen })}\n          width=\"12\" \n          height=\"12\" \n          viewBox=\"0 0 12 12\" \n          fill=\"none\"\n        >\n          <path d=\"M3 4.5L6 7.5L9 4.5\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        </svg>\n      </button>\n    )\n  }\n)\n\ninterface ComboboxContentProps {\n  children?: React.ReactNode\n  className?: string\n  searchPlaceholder?: string\n  emptyMessage?: string\n}\n\nconst ComboboxContent = React.forwardRef<HTMLDivElement, ComboboxContentProps>(\n  ({ \n    children, \n    className, \n    searchPlaceholder: contentSearchPlaceholder, \n    emptyMessage: contentEmptyMessage,\n    ...props \n  }, _ref) => {\n    const { \n      isOpen, \n      searchValue, \n      setSearchValue, \n      filteredOptions, \n      contentRef,\n      triggerRef,\n      searchPlaceholder: contextSearchPlaceholder,\n      emptyMessage: contextEmptyMessage\n    } = useCombobox()\n    \n    const finalSearchPlaceholder = contentSearchPlaceholder || contextSearchPlaceholder || 'Search options...'\n    const finalEmptyMessage = contentEmptyMessage || contextEmptyMessage || 'No options found.'\n    \n    const [position, setPosition] = useState({ top: 0, left: 0, width: 0 })\n    \n    // Position the content relative to trigger and update on scroll/resize\n    const updatePosition = useCallback(() => {\n      if (isOpen && triggerRef.current) {\n        const triggerRect = triggerRef.current.getBoundingClientRect()\n        setPosition({\n          top: triggerRect.bottom + 4,\n          left: triggerRect.left,\n          width: triggerRect.width\n        })\n      }\n    }, [isOpen, triggerRef])\n\n    useEffect(() => {\n      updatePosition()\n    }, [updatePosition])\n\n    useEffect(() => {\n      if (isOpen) {\n        const handleUpdate = () => updatePosition()\n        window.addEventListener('scroll', handleUpdate, true)\n        window.addEventListener('resize', handleUpdate)\n        return () => {\n          window.removeEventListener('scroll', handleUpdate, true)\n          window.removeEventListener('resize', handleUpdate)\n        }\n      }\n    }, [isOpen, updatePosition])\n\n    if (!isOpen) return null\n\n    const content = (\n      <div\n        ref={contentRef}\n        className={clsx(styles.content, className)}\n        style={{\n          top: position.top,\n          left: position.left,\n          minWidth: position.width\n        }}\n        role=\"listbox\"\n        {...props}\n      >\n        <div className={styles.searchContainer}>\n          <input\n            type=\"text\"\n            className={styles.searchInput}\n            placeholder={finalSearchPlaceholder}\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n            autoFocus\n          />\n        </div>\n        \n        <div className={styles.optionsList}>\n          {filteredOptions.length === 0 ? (\n            <div className={styles.emptyMessage}>{finalEmptyMessage}</div>\n          ) : (\n            children || filteredOptions.map((option) => (\n              <ComboboxOption \n                key={option.value} \n                value={option.value}\n                disabled={option.disabled}\n              >\n                {option.label}\n              </ComboboxOption>\n            ))\n          )}\n        </div>\n      </div>\n    )\n\n    return createPortal(content, document.body)\n  }\n)\n\ninterface ComboboxOptionProps {\n  value: string\n  children: React.ReactNode\n  disabled?: boolean\n  className?: string\n}\n\nconst ComboboxOption = React.forwardRef<HTMLDivElement, ComboboxOptionProps>(\n  ({ value, children, disabled = false, className, ...props }, ref) => {\n    const { \n      selectedValue, \n      onSelect, \n      highlightedIndex, \n      setHighlightedIndex,\n      filteredOptions \n    } = useCombobox()\n    \n    const optionIndex = filteredOptions.findIndex(option => option.value === value)\n    const isSelected = selectedValue === value\n    const isHighlighted = highlightedIndex === optionIndex\n\n    return (\n      <div\n        ref={ref}\n        role=\"option\"\n        aria-selected={isSelected}\n        className={clsx(\n          styles.option,\n          {\n            [styles.optionSelected]: isSelected,\n            [styles.optionHighlighted]: isHighlighted,\n            [styles.optionDisabled]: disabled\n          },\n          className\n        )}\n        onClick={() => !disabled && onSelect(value)}\n        onMouseEnter={() => !disabled && setHighlightedIndex(optionIndex)}\n        {...props}\n      >\n        {children}\n        {isSelected && (\n          <svg \n            className={styles.checkIcon}\n            width=\"16\" \n            height=\"16\" \n            viewBox=\"0 0 16 16\" \n            fill=\"none\"\n          >\n            <path \n              d=\"M13.5 4.5L6 12L2.5 8.5\" \n              stroke=\"currentColor\" \n              strokeWidth=\"2\" \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        )}\n      </div>\n    )\n  }\n)\n\n// Display names\nCombobox.displayName = 'Combobox'\nComboboxTrigger.displayName = 'ComboboxTrigger'\nComboboxContent.displayName = 'ComboboxContent'\nComboboxOption.displayName = 'ComboboxOption'\n\n// Compound component pattern with proper typing\ninterface ComboboxCompound extends React.ForwardRefExoticComponent<ComboboxProps & React.RefAttributes<HTMLDivElement>> {\n  Trigger: typeof ComboboxTrigger\n  Content: typeof ComboboxContent\n  Option: typeof ComboboxOption\n}\n\nconst ComboboxWithSubComponents = Combobox as ComboboxCompound\nComboboxWithSubComponents.Trigger = ComboboxTrigger\nComboboxWithSubComponents.Content = ComboboxContent\nComboboxWithSubComponents.Option = ComboboxOption\n\nexport { ComboboxWithSubComponents as Combobox }\nexport type { \n  ComboboxProps, \n  ComboboxOption, \n  ComboboxTriggerProps, \n  ComboboxContentProps, \n  ComboboxOptionProps \n}","import React from 'react'\nimport styles from './BarChart.module.css'\nimport { Tooltip } from '../tooltip'\n\n// Define TypeScript interfaces\ninterface BarChartDataPoint {\n  label: string\n  value: number\n  color?: string\n}\n\ninterface BarChartProps {\n  data: BarChartDataPoint[]\n  title?: string\n  subtitle?: string\n  height?: number\n  showValues?: boolean\n  showGrid?: boolean\n  animated?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'minimal' | 'brutal'\n  showContainer?: boolean\n  borderStyle?: 'solid' | 'dashed' | 'dotted' | 'double'\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst BarChart = React.forwardRef<HTMLDivElement, BarChartProps>(\n  ({ \n    data,\n    title,\n    subtitle,\n    height = 300,\n    showValues = true,\n    showGrid = true,\n    animated = true,\n    size = 'md',\n    variant = 'default',\n    showContainer = false,\n    borderStyle = 'solid',\n    className,\n    style,\n    ...props \n  }, ref) => {\n    \n    if (!data || data.length === 0) {\n      return (\n        <div \n          ref={ref} \n          className={`${styles.barChart} ${styles.empty} ${className || ''}`}\n          data-size={size}\n          data-variant={variant}\n          style={style}\n          {...props}\n        >\n          <div className={styles.emptyState}>\n            <span className={styles.emptyText}>NO DATA AVAILABLE</span>\n          </div>\n        </div>\n      )\n    }\n\n    const maxValue = Math.max(...data.map(d => d.value))\n    \n    // Calculate dynamic heights based on size\n    const sizeConfig = {\n      sm: { headerHeight: 50, footerHeight: 40, padding: 12 },\n      md: { headerHeight: 70, footerHeight: 50, padding: 16 },\n      lg: { headerHeight: 90, footerHeight: 60, padding: 24 }\n    }\n    \n    const config = sizeConfig[size]\n    const headerHeight = (title || subtitle) ? config.headerHeight : 0\n    const actualChartHeight = height - headerHeight - config.footerHeight\n\n    // Default colors using CSS custom properties for theme support\n    const defaultColors = [\n      'var(--brutal-accent)',\n      'var(--brutal-blue)',\n      'var(--brutal-green)', \n      'var(--brutal-yellow)', \n      'var(--brutal-red)',\n      'var(--brutal-orange)',\n      'var(--brutal-purple)'\n    ]\n\n    return (\n      <div \n        ref={ref} \n        className={`${styles.barChart} ${className || ''}`}\n        data-size={size}\n        data-variant={variant}\n        data-animated={animated}\n        data-show-grid={showGrid}\n        data-show-container={showContainer}\n        style={style}\n        {...props}\n      >\n        {/* Chart Header */}\n        {(title || subtitle) && (\n          <div className={styles.header}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n          </div>\n        )}\n\n        {/* Chart Container */}\n        <div \n          className={styles.chartContainer}\n          style={{ \n            height: `${actualChartHeight}px`,\n            minHeight: `${actualChartHeight}px`,\n            maxHeight: `${actualChartHeight}px`,\n            ...(showContainer ? { '--brutal-border-style': borderStyle } : {})\n          } as React.CSSProperties}\n        >\n          {/* Y-axis grid and labels */}\n          {showGrid && (\n            <div className={styles.yAxis}>\n              <div className={styles.yAxisLabels}>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.75)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.5)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.25)}</span>\n                <span className={styles.yAxisLabel}>0</span>\n              </div>\n              <div className={styles.gridLines}>\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n              </div>\n            </div>\n          )}\n\n          {/* Bars Container */}\n          <div className={styles.barsContainer}>\n            {data.map((item, index) => {\n              // Calculate bar height to match Y-axis scale exactly\n              const barHeight = Math.max(8, (item.value / maxValue) * actualChartHeight)\n              const color = item.color || defaultColors[index % defaultColors.length]\n              \n              return (\n                <div\n                  key={`${item.label}-${index}`}\n                  className={styles.barWrapper}\n                  style={{ \n                    animationDelay: animated ? `${index * 100}ms` : undefined \n                  }}\n                >\n                  {/* Value label positioned absolutely above bar */}\n                  {showValues && (\n                    <div \n                      className={styles.barValue}\n                      style={{\n                        position: 'absolute',\n                        bottom: `${barHeight + 5}px`,\n                        left: '50%',\n                        transform: 'translateX(-50%)',\n                        zIndex: 3\n                      }}\n                    >\n                      {item.value}\n                    </div>\n                  )}\n                  \n                  {/* Spacer to push bar to bottom */}\n                  <div style={{ flex: 1 }} />\n                  \n                  {/* Bar at bottom */}\n                  <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                    <Tooltip content={`${item.label}: ${item.value}`}>\n                      <div\n                        className={styles.bar}\n                        style={{\n                          height: `${barHeight}px`,\n                          backgroundColor: color,\n                          animationDelay: animated ? `${index * 150}ms` : undefined\n                        }}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* Chart Footer with X-axis labels and data count */}\n        <div className={styles.footer}>\n          <div className={styles.xAxisLabels}>\n            {data.map((item, index) => (\n              <Tooltip key={`label-${index}`} content={item.label}>\n                <div className={styles.xAxisLabel}>\n                  {item.label}\n                </div>\n              </Tooltip>\n            ))}\n          </div>\n          <div className={styles.dataCount}>\n            {data.length} DATA POINTS\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nBarChart.displayName = 'BarChart'\n\nexport { BarChart }\nexport type { BarChartProps, BarChartDataPoint }","import React from 'react'\nimport styles from './LineChart.module.css'\nimport { Tooltip } from '../tooltip'\n\n// Define TypeScript interfaces\ninterface LineChartDataPoint {\n  label: string\n  value: number\n  color?: string\n}\n\ninterface LineChartProps {\n  data: LineChartDataPoint[]\n  title?: string\n  subtitle?: string\n  height?: number\n  showValues?: boolean\n  showGrid?: boolean\n  animated?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'minimal' | 'brutal'\n  showContainer?: boolean\n  borderStyle?: 'solid' | 'dashed' | 'dotted' | 'double'\n  lineColor?: string\n  lineWidth?: number\n  showDots?: boolean\n  smooth?: boolean\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst LineChart = React.forwardRef<HTMLDivElement, LineChartProps>(\n  ({ \n    data,\n    title,\n    subtitle,\n    height = 300,\n    showValues = true,\n    showGrid = true,\n    animated = true,\n    size = 'md',\n    variant = 'default',\n    showContainer = false,\n    borderStyle = 'solid',\n    lineColor = 'var(--brutal-accent)',\n    lineWidth = 3,\n    showDots = true,\n    smooth = false,\n    className,\n    style,\n    ...props \n  }, ref) => {\n    \n    if (!data || data.length === 0) {\n      return (\n        <div \n          ref={ref} \n          className={`${styles.lineChart} ${styles.empty} ${className || ''}`}\n          data-size={size}\n          data-variant={variant}\n          style={style}\n          {...props}\n        >\n          <div className={styles.emptyState}>\n            <span className={styles.emptyText}>NO DATA AVAILABLE</span>\n          </div>\n        </div>\n      )\n    }\n\n    const maxValue = Math.max(...data.map(d => d.value))\n    const minValue = Math.min(...data.map(d => d.value))\n    const valueRange = maxValue - minValue\n    \n    // Calculate dynamic heights based on size\n    const sizeConfig = {\n      sm: { headerHeight: 50, footerHeight: 40, padding: 12 },\n      md: { headerHeight: 70, footerHeight: 50, padding: 16 },\n      lg: { headerHeight: 90, footerHeight: 60, padding: 24 }\n    }\n    \n    const config = sizeConfig[size]\n    const headerHeight = (title || subtitle) ? config.headerHeight : 0\n    const actualChartHeight = height - headerHeight - config.footerHeight\n\n    // Generate SVG path for the line\n    const generatePath = (smooth: boolean) => {\n      if (data.length === 0) return ''\n      \n      const points = data.map((point, index) => {\n        const x = (index / (data.length - 1)) * 100\n        const y = 100 - ((point.value - minValue) / valueRange) * 100\n        return { x, y }\n      })\n\n      if (smooth && data.length > 2) {\n        // Generate smooth curve using cubic bezier\n        let path = `M ${points[0].x} ${points[0].y}`\n        \n        for (let i = 1; i < points.length; i++) {\n          const cp1x = points[i - 1].x + (points[i].x - points[i - 1].x) / 3\n          const cp1y = points[i - 1].y\n          const cp2x = points[i].x - (points[i].x - points[i - 1].x) / 3\n          const cp2y = points[i].y\n          \n          path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${points[i].x} ${points[i].y}`\n        }\n        \n        return path\n      } else {\n        // Generate straight lines\n        return points.map((point, index) => \n          index === 0 ? `M ${point.x} ${point.y}` : `L ${point.x} ${point.y}`\n        ).join(' ')\n      }\n    }\n\n    const pathData = generatePath(smooth)\n\n    return (\n      <div \n        ref={ref} \n        className={`${styles.lineChart} ${className || ''}`}\n        data-size={size}\n        data-variant={variant}\n        data-animated={animated}\n        data-show-grid={showGrid}\n        data-show-container={showContainer}\n        style={style}\n        {...props}\n      >\n        {/* Chart Header */}\n        {(title || subtitle) && (\n          <div className={styles.header}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n          </div>\n        )}\n\n        {/* Chart Container */}\n        <div \n          className={styles.chartContainer}\n          style={{ \n            height: `${actualChartHeight}px`,\n            minHeight: `${actualChartHeight}px`,\n            maxHeight: `${actualChartHeight}px`,\n            ...(showContainer ? { '--brutal-border-style': borderStyle } : {})\n          } as React.CSSProperties}\n        >\n          {/* Y-axis grid and labels */}\n          {showGrid && (\n            <div className={styles.yAxis}>\n              <div className={styles.yAxisLabels}>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.75 + minValue * 0.25)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.5 + minValue * 0.5)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.25 + minValue * 0.75)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(minValue)}</span>\n              </div>\n              <div className={styles.gridLines}>\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n              </div>\n            </div>\n          )}\n\n          {/* Line Chart SVG */}\n          <div className={styles.lineContainer}>\n            <svg \n              className={styles.lineSvg}\n              viewBox=\"0 0 100 100\"\n              preserveAspectRatio=\"none\"\n            >\n              {/* Line path */}\n              <path\n                d={pathData}\n                fill=\"none\"\n                stroke={lineColor}\n                strokeWidth={lineWidth / 10}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className={animated ? styles.animatedLine : ''}\n              />\n              \n              {/* Data points */}\n              {showDots && data.map((point, index) => {\n                const x = (index / (data.length - 1)) * 100\n                const y = 100 - ((point.value - minValue) / valueRange) * 100\n                const dotSize = 4 // Fixed small size\n                \n                return (\n                  <rect\n                    key={`dot-${index}`}\n                    x={x - dotSize/2}\n                    y={y - dotSize/2}\n                    width={dotSize}\n                    height={dotSize}\n                    fill={point.color || lineColor}\n                    stroke=\"none\"\n                    className={animated ? styles.animatedDot : ''}\n                    style={{ animationDelay: animated ? `${index * 100}ms` : undefined }}\n                  />\n                )\n              })}\n            </svg>\n\n            {/* Interactive data point areas for tooltips */}\n            {data.map((point, index) => {\n              const x = (index / (data.length - 1)) * 100\n              const y = 100 - ((point.value - minValue) / valueRange) * 100\n              \n              return (\n                <Tooltip key={`tooltip-${index}`} content={`${point.label}: ${point.value}`}>\n                  <div\n                    className={styles.dataPointHover}\n                    style={{\n                      left: `${x}%`,\n                      top: `${y}%`,\n                      transform: 'translate(-50%, -50%)'\n                    }}\n                  />\n                </Tooltip>\n              )\n            })}\n\n            {/* Value labels */}\n            {showValues && data.map((point, index) => {\n              const x = (index / (data.length - 1)) * 100\n              const y = 100 - ((point.value - minValue) / valueRange) * 100\n              \n              return (\n                <div\n                  key={`value-${index}`}\n                  className={styles.valueLabel}\n                  style={{\n                    left: `${x}%`,\n                    top: `${y}%`,\n                    transform: 'translate(-50%, -150%)',\n                    animationDelay: animated ? `${index * 150}ms` : undefined\n                  }}\n                >\n                  {point.value}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* Chart Footer with X-axis labels and data count */}\n        <div className={styles.footer}>\n          <div className={styles.xAxisLabels}>\n            {data.map((item, index) => (\n              <Tooltip key={`label-${index}`} content={item.label}>\n                <div className={styles.xAxisLabel}>\n                  {item.label}\n                </div>\n              </Tooltip>\n            ))}\n          </div>\n          <div className={styles.dataCount}>\n            {data.length} DATA POINTS\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nLineChart.displayName = 'LineChart'\n\nexport { LineChart }\nexport type { LineChartProps, LineChartDataPoint }","import React from 'react'\nimport styles from './PieChart.module.css'\nimport { Tooltip } from '../tooltip'\n\n// Define TypeScript interfaces\ninterface PieChartDataPoint {\n  label: string\n  value: number\n  color?: string\n}\n\ninterface PieChartProps {\n  data: PieChartDataPoint[]\n  title?: string\n  subtitle?: string\n  size?: number\n  showValues?: boolean\n  showLabels?: boolean\n  animated?: boolean\n  variant?: 'default' | 'minimal' | 'brutal'\n  showContainer?: boolean\n  borderStyle?: 'solid' | 'dashed' | 'dotted' | 'double'\n  strokeWidth?: number\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst PieChart = React.forwardRef<HTMLDivElement, PieChartProps>(\n  ({ \n    data,\n    title,\n    subtitle,\n    size = 300,\n    showValues = true,\n    showLabels = true,\n    animated = true,\n    variant = 'default',\n    showContainer = false,\n    borderStyle = 'solid',\n    strokeWidth = 2,\n    className,\n    style,\n    ...props \n  }, ref) => {\n    \n    if (!data || data.length === 0) {\n      return (\n        <div \n          ref={ref} \n          className={`${styles.pieChart} ${styles.empty} ${className || ''}`}\n          data-variant={variant}\n          style={style}\n          {...props}\n        >\n          <div className={styles.emptyState}>\n            <span className={styles.emptyText}>NO DATA AVAILABLE</span>\n          </div>\n        </div>\n      )\n    }\n\n    const total = data.reduce((sum, item) => sum + item.value, 0)\n    const radius = (size - 40) / 2\n    const centerX = size / 2\n    const centerY = size / 2\n\n    // Generate pie slices\n    let cumulativeAngle = 0\n    const slices = data.map((item, index) => {\n      const percentage = (item.value / total) * 100\n      const angle = (item.value / total) * 360\n      const startAngle = cumulativeAngle\n      const endAngle = cumulativeAngle + angle\n      \n      // Calculate path for slice\n      const startAngleRad = (startAngle - 90) * (Math.PI / 180)\n      const endAngleRad = (endAngle - 90) * (Math.PI / 180)\n      \n      const x1 = centerX + radius * Math.cos(startAngleRad)\n      const y1 = centerY + radius * Math.sin(startAngleRad)\n      const x2 = centerX + radius * Math.cos(endAngleRad)\n      const y2 = centerY + radius * Math.sin(endAngleRad)\n      \n      const largeArcFlag = angle > 180 ? 1 : 0\n      \n      const pathData = [\n        `M ${centerX} ${centerY}`,\n        `L ${x1} ${y1}`,\n        `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,\n        'Z'\n      ].join(' ')\n\n      // Calculate label position\n      const labelAngle = (startAngle + angle / 2 - 90) * (Math.PI / 180)\n      const labelRadius = radius * 0.7\n      const labelX = centerX + labelRadius * Math.cos(labelAngle)\n      const labelY = centerY + labelRadius * Math.sin(labelAngle)\n\n      cumulativeAngle += angle\n\n      return {\n        path: pathData,\n        color: item.color || `hsl(${(index * 360) / data.length}, 70%, 50%)`,\n        percentage,\n        labelX,\n        labelY,\n        item,\n        angle\n      }\n    })\n\n    const defaultColors = [\n      '#FF0000', '#0066FF', '#00FF41', '#FFFF00', \n      '#FF6600', '#9900FF', '#00FFFF', '#FF0099'\n    ]\n\n    return (\n      <div \n        ref={ref} \n        className={`${styles.pieChart} ${className || ''}`}\n        data-variant={variant}\n        data-animated={animated}\n        data-show-container={showContainer}\n        style={style}\n        {...props}\n      >\n        {/* Chart Header */}\n        {(title || subtitle) && (\n          <div className={styles.header}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n          </div>\n        )}\n\n        {/* Chart Container */}\n        <div \n          className={styles.chartContainer}\n          style={{ \n            ...(showContainer ? { '--brutal-border-style': borderStyle } : {}),\n            width: `${size}px`,\n            height: `${size}px`\n          } as React.CSSProperties}\n        >\n          <svg \n            className={styles.pieSvg}\n            width={size}\n            height={size}\n            viewBox={`0 0 ${size} ${size}`}\n          >\n            {/* Pie slices */}\n            {slices.map((slice, index) => (\n              <g key={`slice-${index}`}>\n                <path\n                  d={slice.path}\n                  fill={slice.item.color || defaultColors[index % defaultColors.length]}\n                  stroke=\"var(--brutal-white)\"\n                  strokeWidth={strokeWidth}\n                  className={animated ? styles.animatedSlice : ''}\n                  style={{ animationDelay: animated ? `${index * 150}ms` : undefined }}\n                />\n                \n                {/* Value labels */}\n                {showValues && slice.percentage > 5 && (\n                  <text\n                    x={slice.labelX}\n                    y={slice.labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"middle\"\n                    className={styles.valueLabel}\n                    style={{ animationDelay: animated ? `${index * 200}ms` : undefined }}\n                  >\n                    {Math.round(slice.percentage)}%\n                  </text>\n                )}\n              </g>\n            ))}\n          </svg>\n\n          {/* Interactive hover areas for tooltips */}\n          {slices.map((slice, index) => (\n            <Tooltip \n              key={`tooltip-${index}`} \n              content={`${slice.item.label}: ${slice.item.value} (${Math.round(slice.percentage)}%)`}\n            >\n              <div\n                className={styles.sliceHover}\n                style={{\n                  position: 'absolute',\n                  left: `${slice.labelX - 20}px`,\n                  top: `${slice.labelY - 20}px`,\n                  width: '40px',\n                  height: '40px',\n                  borderRadius: '50%'\n                }}\n              />\n            </Tooltip>\n          ))}\n        </div>\n\n        {/* Legend */}\n        {showLabels && (\n          <div className={styles.legend}>\n            {data.map((item, index) => (\n              <div key={`legend-${index}`} className={styles.legendItem}>\n                <div \n                  className={styles.legendColor}\n                  style={{ \n                    backgroundColor: item.color || defaultColors[index % defaultColors.length]\n                  }}\n                />\n                <span className={styles.legendLabel}>{item.label}</span>\n                <span className={styles.legendValue}>{item.value}</span>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Data Count */}\n        <div className={styles.dataCount}>\n          {data.length} DATA SEGMENTS â€¢ TOTAL: {total}\n        </div>\n      </div>\n    )\n  }\n)\n\nPieChart.displayName = 'PieChart'\n\nexport { PieChart }\nexport type { PieChartProps, PieChartDataPoint }","import React from 'react'\nimport styles from './AreaChart.module.css'\nimport { Tooltip } from '../tooltip'\n\n// Define TypeScript interfaces\ninterface AreaChartDataPoint {\n  label: string\n  value: number\n  color?: string\n}\n\ninterface AreaChartProps {\n  data: AreaChartDataPoint[]\n  title?: string\n  subtitle?: string\n  height?: number\n  showValues?: boolean\n  showGrid?: boolean\n  animated?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'minimal' | 'brutal'\n  showContainer?: boolean\n  borderStyle?: 'solid' | 'dashed' | 'dotted' | 'double'\n  fillColor?: string\n  lineColor?: string\n  lineWidth?: number\n  showDots?: boolean\n  smooth?: boolean\n  fillOpacity?: number\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst AreaChart = React.forwardRef<HTMLDivElement, AreaChartProps>(\n  ({ \n    data,\n    title,\n    subtitle,\n    height = 300,\n    showValues = true,\n    showGrid = true,\n    animated = true,\n    size = 'md',\n    variant = 'default',\n    showContainer = false,\n    borderStyle = 'solid',\n    fillColor = 'var(--brutal-accent)',\n    lineColor = 'var(--brutal-accent)',\n    lineWidth = 3,\n    showDots = true,\n    smooth = false,\n    fillOpacity = 0.3,\n    className,\n    style,\n    ...props \n  }, ref) => {\n    \n    if (!data || data.length === 0) {\n      return (\n        <div \n          ref={ref} \n          className={`${styles.areaChart} ${styles.empty} ${className || ''}`}\n          data-size={size}\n          data-variant={variant}\n          style={style}\n          {...props}\n        >\n          <div className={styles.emptyState}>\n            <span className={styles.emptyText}>NO DATA AVAILABLE</span>\n          </div>\n        </div>\n      )\n    }\n\n    const maxValue = Math.max(...data.map(d => d.value))\n    const minValue = Math.min(...data.map(d => d.value))\n    const valueRange = maxValue - minValue\n    \n    // Calculate dynamic heights based on size\n    const sizeConfig = {\n      sm: { headerHeight: 50, footerHeight: 40, padding: 12 },\n      md: { headerHeight: 70, footerHeight: 50, padding: 16 },\n      lg: { headerHeight: 90, footerHeight: 60, padding: 24 }\n    }\n    \n    const config = sizeConfig[size]\n    const headerHeight = (title || subtitle) ? config.headerHeight : 0\n    const actualChartHeight = height - headerHeight - config.footerHeight\n\n    // Generate SVG path for the area\n    const generateAreaPath = (smooth: boolean) => {\n      if (data.length === 0) return ''\n      \n      const points = data.map((point, index) => {\n        const x = (index / (data.length - 1)) * 100\n        const y = 100 - ((point.value - minValue) / valueRange) * 100\n        return { x, y }\n      })\n\n      let linePath = ''\n      \n      if (smooth && data.length > 2) {\n        // Generate smooth curve using cubic bezier\n        linePath = `M ${points[0].x} ${points[0].y}`\n        \n        for (let i = 1; i < points.length; i++) {\n          const cp1x = points[i - 1].x + (points[i].x - points[i - 1].x) / 3\n          const cp1y = points[i - 1].y\n          const cp2x = points[i].x - (points[i].x - points[i - 1].x) / 3\n          const cp2y = points[i].y\n          \n          linePath += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${points[i].x} ${points[i].y}`\n        }\n      } else {\n        // Generate straight lines\n        linePath = points.map((point, index) => \n          index === 0 ? `M ${point.x} ${point.y}` : `L ${point.x} ${point.y}`\n        ).join(' ')\n      }\n\n      // Close the area path by connecting to bottom\n      const areaPath = linePath + \n        ` L ${points[points.length - 1].x} 100` + \n        ` L ${points[0].x} 100 Z`\n\n      return { linePath, areaPath }\n    }\n\n    const { linePath, areaPath } = generateAreaPath(smooth)\n\n    return (\n      <div \n        ref={ref} \n        className={`${styles.areaChart} ${className || ''}`}\n        data-size={size}\n        data-variant={variant}\n        data-animated={animated}\n        data-show-grid={showGrid}\n        data-show-container={showContainer}\n        style={style}\n        {...props}\n      >\n        {/* Chart Header */}\n        {(title || subtitle) && (\n          <div className={styles.header}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\n          </div>\n        )}\n\n        {/* Chart Container */}\n        <div \n          className={styles.chartContainer}\n          style={{ \n            height: `${actualChartHeight}px`,\n            minHeight: `${actualChartHeight}px`,\n            maxHeight: `${actualChartHeight}px`,\n            ...(showContainer ? { '--brutal-border-style': borderStyle } : {})\n          } as React.CSSProperties}\n        >\n          {/* Y-axis grid and labels */}\n          {showGrid && (\n            <div className={styles.yAxis}>\n              <div className={styles.yAxisLabels}>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.75 + minValue * 0.25)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.5 + minValue * 0.5)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(maxValue * 0.25 + minValue * 0.75)}</span>\n                <span className={styles.yAxisLabel}>{Math.round(minValue)}</span>\n              </div>\n              <div className={styles.gridLines}>\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n                <div className={styles.gridLine} />\n              </div>\n            </div>\n          )}\n\n          {/* Area Chart SVG */}\n          <div className={styles.areaContainer}>\n            <svg \n              className={styles.areaSvg}\n              viewBox=\"0 0 100 100\"\n              preserveAspectRatio=\"none\"\n            >\n              {/* Area fill */}\n              <path\n                d={areaPath}\n                fill={fillColor}\n                fillOpacity={fillOpacity}\n                className={animated ? styles.animatedArea : ''}\n              />\n              \n              {/* Line path */}\n              <path\n                d={linePath}\n                fill=\"none\"\n                stroke={lineColor}\n                strokeWidth={lineWidth / 10}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className={animated ? styles.animatedLine : ''}\n              />\n              \n              {/* Data points */}\n              {showDots && data.map((point, index) => {\n                const x = (index / (data.length - 1)) * 100\n                const y = 100 - ((point.value - minValue) / valueRange) * 100\n                const dotSize = 4 // Fixed small size\n                \n                return (\n                  <rect\n                    key={`dot-${index}`}\n                    x={x - dotSize/2}\n                    y={y - dotSize/2}\n                    width={dotSize}\n                    height={dotSize}\n                    fill={point.color || lineColor}\n                    stroke=\"none\"\n                    className={animated ? styles.animatedDot : ''}\n                    style={{ animationDelay: animated ? `${index * 100}ms` : undefined }}\n                  />\n                )\n              })}\n            </svg>\n\n            {/* Interactive data point areas for tooltips */}\n            {data.map((point, index) => {\n              const x = (index / (data.length - 1)) * 100\n              const y = 100 - ((point.value - minValue) / valueRange) * 100\n              \n              return (\n                <Tooltip key={`tooltip-${index}`} content={`${point.label}: ${point.value}`}>\n                  <div\n                    className={styles.dataPointHover}\n                    style={{\n                      left: `${x}%`,\n                      top: `${y}%`,\n                      transform: 'translate(-50%, -50%)'\n                    }}\n                  />\n                </Tooltip>\n              )\n            })}\n\n            {/* Value labels */}\n            {showValues && data.map((point, index) => {\n              const x = (index / (data.length - 1)) * 100\n              const y = 100 - ((point.value - minValue) / valueRange) * 100\n              \n              return (\n                <div\n                  key={`value-${index}`}\n                  className={styles.valueLabel}\n                  style={{\n                    left: `${x}%`,\n                    top: `${y}%`,\n                    transform: 'translate(-50%, -150%)',\n                    animationDelay: animated ? `${index * 150}ms` : undefined\n                  }}\n                >\n                  {point.value}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* Chart Footer with X-axis labels and data count */}\n        <div className={styles.footer}>\n          <div className={styles.xAxisLabels}>\n            {data.map((item, index) => (\n              <Tooltip key={`label-${index}`} content={item.label}>\n                <div className={styles.xAxisLabel}>\n                  {item.label}\n                </div>\n              </Tooltip>\n            ))}\n          </div>\n          <div className={styles.dataCount}>\n            {data.length} DATA POINTS\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nAreaChart.displayName = 'AreaChart'\n\nexport { AreaChart }\nexport type { AreaChartProps, AreaChartDataPoint }","import React, { forwardRef } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './AspectRatio.module.css'\n\nexport interface AspectRatioProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** The aspect ratio to maintain (e.g., 16/9, 4/3, 1/1) */\n  ratio?: number\n  /** Content to display within the aspect ratio container */\n  children: React.ReactNode\n  /** Additional CSS classes */\n  className?: string\n  /** Whether to apply object-fit to child images/videos */\n  objectFit?: 'contain' | 'cover' | 'fill' | 'none' | 'scale-down'\n  /** Background color when content doesn't fill the container */\n  backgroundColor?: string\n}\n\n/**\n * AspectRatio component maintains a specific width-to-height ratio for its content.\n * Useful for responsive images, videos, embeds, and any content that needs consistent dimensions.\n */\nexport const AspectRatio = forwardRef<HTMLDivElement, AspectRatioProps>(\n  ({ \n    ratio = 16/9, \n    children, \n    className,\n    objectFit = 'cover',\n    backgroundColor,\n    style,\n    ...props \n  }, ref) => {\n    const paddingBottom = `${(1 / ratio) * 100}%`\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.container, className)}\n        style={{\n          ...style,\n          backgroundColor\n        }}\n        data-object-fit={objectFit}\n        {...props}\n      >\n        <div \n          className={styles.sizer} \n          style={{ paddingBottom }}\n        />\n        <div className={styles.content}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n)\n\nAspectRatio.displayName = 'AspectRatio'","import React, { forwardRef, useMemo } from 'react'\nimport { clsx } from 'clsx'\nimport styles from './Pagination.module.css'\n\nexport interface PaginationProps extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'> {\n  /** Current active page number (1-indexed) */\n  currentPage: number\n  /** Total number of pages */\n  totalPages: number\n  /** Number of sibling pages to show on each side of current page */\n  siblingCount?: number\n  /** Number of boundary pages to show at start and end */\n  boundaryCount?: number\n  /** Callback when page changes */\n  onChange?: (page: number) => void\n  /** Show previous/next buttons */\n  showPrevNext?: boolean\n  /** Show first/last buttons */\n  showFirstLast?: boolean\n  /** Custom labels for navigation buttons */\n  labels?: {\n    previous?: string\n    next?: string\n    first?: string\n    last?: string\n  }\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg'\n  /** Additional CSS classes */\n  className?: string\n  /** Disabled state */\n  disabled?: boolean\n}\n\nconst DOTS = '...'\n\n// Helper function to generate pagination range\nfunction usePaginationRange(\n  currentPage: number,\n  totalPages: number,\n  siblingCount: number,\n  boundaryCount: number\n): (number | string)[] {\n  return useMemo(() => {\n    const totalPageNumbers = siblingCount * 2 + 5 + boundaryCount * 2\n\n    // If the number of pages is less than the page numbers we want to show\n    if (totalPageNumbers >= totalPages) {\n      return Array.from({ length: totalPages }, (_, i) => i + 1)\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPages)\n\n    const shouldShowLeftDots = leftSiblingIndex > boundaryCount + 2\n    const shouldShowRightDots = rightSiblingIndex < totalPages - boundaryCount - 1\n\n    const firstPages = Array.from({ length: boundaryCount }, (_, i) => i + 1)\n    const lastPages = Array.from({ length: boundaryCount }, (_, i) => totalPages - boundaryCount + i + 1)\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = 3 + 2 * siblingCount\n      const leftRange = Array.from({ length: leftItemCount }, (_, i) => i + 1)\n      return [...leftRange, DOTS, ...lastPages]\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = 3 + 2 * siblingCount\n      const rightRange = Array.from(\n        { length: rightItemCount },\n        (_, i) => totalPages - rightItemCount + i + 1\n      )\n      return [...firstPages, DOTS, ...rightRange]\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      const middleRange = Array.from(\n        { length: rightSiblingIndex - leftSiblingIndex + 1 },\n        (_, i) => leftSiblingIndex + i\n      )\n      return [...firstPages, DOTS, ...middleRange, DOTS, ...lastPages]\n    }\n\n    return []\n  }, [currentPage, totalPages, siblingCount, boundaryCount])\n}\n\n/**\n * Pagination component for navigating through pages of content.\n * Features a brutalist design with bold styling and clear visual feedback.\n */\nexport const Pagination = forwardRef<HTMLElement, PaginationProps>(\n  (\n    {\n      currentPage,\n      totalPages,\n      siblingCount = 1,\n      boundaryCount = 1,\n      onChange,\n      showPrevNext = true,\n      showFirstLast = false,\n      labels = {\n        previous: 'Previous',\n        next: 'Next',\n        first: 'First',\n        last: 'Last'\n      },\n      size = 'md',\n      className,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    const paginationRange = usePaginationRange(currentPage, totalPages, siblingCount, boundaryCount)\n\n    const handleClick = (page: number) => {\n      if (!disabled && onChange && page !== currentPage && page >= 1 && page <= totalPages) {\n        onChange(page)\n      }\n    }\n\n    if (totalPages <= 1) {\n      return null\n    }\n\n    return (\n      <nav\n        ref={ref}\n        className={clsx(\n          styles.pagination,\n          styles[size],\n          disabled && styles.disabled,\n          className\n        )}\n        aria-label=\"Pagination Navigation\"\n        {...props}\n      >\n        <ul className={styles.list}>\n          {/* First button */}\n          {showFirstLast && (\n            <li>\n              <button\n                className={clsx(styles.item, styles.nav)}\n                onClick={() => handleClick(1)}\n                disabled={disabled || currentPage === 1}\n                aria-label={labels.first}\n                type=\"button\"\n              >\n                <span className={styles.navIcon}>Â«</span>\n                <span className={styles.navText}>{labels.first}</span>\n              </button>\n            </li>\n          )}\n\n          {/* Previous button */}\n          {showPrevNext && (\n            <li>\n              <button\n                className={clsx(styles.item, styles.nav)}\n                onClick={() => handleClick(currentPage - 1)}\n                disabled={disabled || currentPage === 1}\n                aria-label={labels.previous}\n                type=\"button\"\n              >\n                <span className={styles.navIcon}>â€¹</span>\n                <span className={styles.navText}>{labels.previous}</span>\n              </button>\n            </li>\n          )}\n\n          {/* Page numbers */}\n          {paginationRange.map((pageNumber, index) => {\n            if (pageNumber === DOTS) {\n              return (\n                <li key={`dots-${index}`}>\n                  <span className={clsx(styles.item, styles.dots)}>...</span>\n                </li>\n              )\n            }\n\n            return (\n              <li key={pageNumber}>\n                <button\n                  className={clsx(\n                    styles.item,\n                    styles.page,\n                    pageNumber === currentPage && styles.active\n                  )}\n                  onClick={() => handleClick(pageNumber as number)}\n                  disabled={disabled}\n                  aria-label={`Go to page ${pageNumber}`}\n                  aria-current={pageNumber === currentPage ? 'page' : undefined}\n                  type=\"button\"\n                >\n                  {pageNumber}\n                </button>\n              </li>\n            )\n          })}\n\n          {/* Next button */}\n          {showPrevNext && (\n            <li>\n              <button\n                className={clsx(styles.item, styles.nav)}\n                onClick={() => handleClick(currentPage + 1)}\n                disabled={disabled || currentPage === totalPages}\n                aria-label={labels.next}\n                type=\"button\"\n              >\n                <span className={styles.navText}>{labels.next}</span>\n                <span className={styles.navIcon}>â€º</span>\n              </button>\n            </li>\n          )}\n\n          {/* Last button */}\n          {showFirstLast && (\n            <li>\n              <button\n                className={clsx(styles.item, styles.nav)}\n                onClick={() => handleClick(totalPages)}\n                disabled={disabled || currentPage === totalPages}\n                aria-label={labels.last}\n                type=\"button\"\n              >\n                <span className={styles.navText}>{labels.last}</span>\n                <span className={styles.navIcon}>Â»</span>\n              </button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    )\n  }\n)\n\nPagination.displayName = 'Pagination'","import React, { createContext, useContext, useState, useRef, useEffect, useCallback, forwardRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport clsx from 'clsx'\nimport styles from './ContextMenu.module.css'\n\n// Context for managing context menu state\ninterface ContextMenuContextValue {\n  isOpen: boolean\n  position: { x: number; y: number } | null\n  onOpen: (e: React.MouseEvent) => void\n  onClose: () => void\n  onKeepOpen?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'dark'\n}\n\nconst ContextMenuContext = createContext<ContextMenuContextValue | undefined>(undefined)\n\nfunction useContextMenu() {\n  const context = useContext(ContextMenuContext)\n  if (!context) {\n    throw new Error('ContextMenu components must be used within ContextMenu')\n  }\n  return context\n}\n\n// Main ContextMenu component\nexport interface ContextMenuProps {\n  children: React.ReactNode\n  className?: string\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'dark'\n  onOpenChange?: (open: boolean) => void\n}\n\nconst ContextMenu = forwardRef<HTMLDivElement, ContextMenuProps>(\n  ({ children, className, size = 'md', variant = 'default', onOpenChange }, ref) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [position, setPosition] = useState<{ x: number; y: number } | null>(null)\n\n    const onOpen = useCallback((e: React.MouseEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      \n      setPosition({ x: e.clientX, y: e.clientY })\n      setIsOpen(true)\n      onOpenChange?.(true)\n      \n      // Lock body scroll\n      document.body.style.overflow = 'hidden'\n      document.body.style.userSelect = 'none'\n    }, [onOpenChange])\n\n    const onClose = useCallback(() => {\n      setIsOpen(false)\n      setPosition(null)\n      onOpenChange?.(false)\n      \n      // Restore body scroll\n      document.body.style.overflow = ''\n      document.body.style.userSelect = ''\n    }, [onOpenChange])\n\n    // Close on escape key\n    useEffect(() => {\n      const handleKeyDown = (e: KeyboardEvent) => {\n        if (e.key === 'Escape' && isOpen) {\n          onClose()\n        }\n      }\n\n      if (isOpen) {\n        document.addEventListener('keydown', handleKeyDown)\n        return () => document.removeEventListener('keydown', handleKeyDown)\n      }\n    }, [isOpen, onClose])\n    \n    // Cleanup on unmount\n    useEffect(() => {\n      return () => {\n        if (isOpen) {\n          document.body.style.overflow = ''\n          document.body.style.userSelect = ''\n        }\n      }\n    }, [isOpen])\n\n    const contextValue: ContextMenuContextValue = {\n      isOpen,\n      position,\n      onOpen,\n      onClose,\n      size,\n      variant\n    }\n\n    return (\n      <ContextMenuContext.Provider value={contextValue}>\n        <div ref={ref} className={clsx(styles.root, className)}>\n          {children}\n        </div>\n      </ContextMenuContext.Provider>\n    )\n  }\n)\n\n// Trigger component\nexport interface ContextMenuTriggerProps {\n  children: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst ContextMenuTrigger = forwardRef<HTMLDivElement, ContextMenuTriggerProps>(\n  ({ children, className, asChild = false }, ref) => {\n    const { onOpen } = useContextMenu()\n\n    if (asChild && React.isValidElement(children)) {\n      return React.cloneElement(children as React.ReactElement<{ onContextMenu?: (e: React.MouseEvent) => void }>, {\n        onContextMenu: onOpen,\n        ref\n      })\n    }\n\n    return (\n      <div \n        ref={ref}\n        className={clsx(styles.trigger, className)}\n        onContextMenu={onOpen}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Content component with portal\nexport interface ContextMenuContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n  className?: string\n  align?: 'start' | 'center' | 'end'\n  sideOffset?: number\n  alignOffset?: number\n  collisionPadding?: number\n  avoidCollisions?: boolean\n  container?: HTMLElement | null\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'dark'\n}\n\nconst ContextMenuContent = forwardRef<HTMLDivElement, ContextMenuContentProps>(\n  ({ \n    children, \n    className, \n    align = 'start',\n    sideOffset = 5,\n    alignOffset = 0,\n    collisionPadding = 8,\n    avoidCollisions = true,\n    container,\n    size: sizeProp,\n    variant: variantProp,\n    ...rest\n  }, ref) => {\n    const { isOpen, position, onClose, size: contextSize, variant: contextVariant } = useContextMenu()\n    const size = sizeProp || contextSize\n    const variant = variantProp || contextVariant\n    const contentRef = useRef<HTMLDivElement>(null)\n\n    // No need for click-outside detection since we have backdrop\n\n    // Calculate position with collision detection\n    const [adjustedPosition, setAdjustedPosition] = useState(position)\n\n    useEffect(() => {\n      if (!position || !contentRef.current || !avoidCollisions) {\n        setAdjustedPosition(position)\n        return\n      }\n\n      const rect = contentRef.current.getBoundingClientRect()\n      const viewportWidth = window.innerWidth\n      const viewportHeight = window.innerHeight\n\n      let x = position.x + sideOffset\n      let y = position.y + sideOffset\n\n      // Adjust horizontal position\n      if (x + rect.width > viewportWidth - collisionPadding) {\n        x = position.x - rect.width - sideOffset\n      }\n      if (x < collisionPadding) {\n        x = collisionPadding\n      }\n\n      // Adjust vertical position\n      if (y + rect.height > viewportHeight - collisionPadding) {\n        y = position.y - rect.height - sideOffset\n      }\n      if (y < collisionPadding) {\n        y = collisionPadding\n      }\n\n      // Apply alignment offset\n      switch (align) {\n        case 'center':\n          x = position.x - rect.width / 2\n          break\n        case 'end':\n          x = position.x - rect.width\n          break\n      }\n\n      x += alignOffset\n\n      setAdjustedPosition({ x, y })\n    }, [position, align, alignOffset, sideOffset, collisionPadding, avoidCollisions])\n\n    if (!isOpen || !adjustedPosition) return null\n\n    const content = (\n      <>\n        {/* Backdrop to capture clicks and prevent interaction */}\n        <div \n          className={styles.backdrop}\n          onClick={onClose}\n          onContextMenu={(e) => e.preventDefault()}\n          style={{\n            position: 'fixed',\n            inset: 0,\n            zIndex: 9998,\n            cursor: 'default',\n            pointerEvents: 'auto'\n          }}\n        />\n        <div\n          ref={(node) => {\n            contentRef.current = node\n            if (typeof ref === 'function') ref(node)\n            else if (ref) ref.current = node\n          }}\n          className={clsx(\n            styles.content,\n            className\n          )}\n          data-size={size}\n          data-variant={variant}\n          style={{\n            position: 'fixed',\n            left: `${adjustedPosition.x}px`,\n            top: `${adjustedPosition.y}px`,\n            zIndex: 9999,\n            ...rest.style\n          }}\n          role=\"menu\"\n          aria-orientation=\"vertical\"\n          onMouseEnter={rest.onMouseEnter}\n          onMouseLeave={rest.onMouseLeave}\n        >\n          {children}\n        </div>\n      </>\n    )\n\n    return createPortal(content, container || document.body)\n  }\n)\n\n// Item component\nexport interface ContextMenuItemProps {\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n  destructive?: boolean\n  onSelect?: (e: React.MouseEvent) => void\n  closeOnSelect?: boolean\n  icon?: React.ReactNode\n  shortcut?: string\n  checked?: boolean\n  dotted?: boolean\n}\n\nconst ContextMenuItem = forwardRef<HTMLDivElement, ContextMenuItemProps>(\n  ({ children, className, disabled = false, destructive = false, onSelect, closeOnSelect = true, icon, shortcut, checked, dotted }, ref) => {\n    const { onClose } = useContextMenu()\n    const [isHighlighted, setIsHighlighted] = useState(false)\n\n    const handleClick = (e: React.MouseEvent) => {\n      console.log('Context menu item clicked', { disabled, children })\n      if (disabled) {\n        e.preventDefault()\n        return\n      }\n      \n      e.stopPropagation() // Prevent backdrop from closing\n      onSelect?.(e)\n      \n      if (closeOnSelect && !e.defaultPrevented) {\n        onClose()\n      }\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (disabled) return\n      \n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        handleClick(e as unknown as React.MouseEvent)\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.item,\n          disabled && styles.itemDisabled,\n          destructive && styles.itemDestructive,\n          className\n        )}\n        role=\"menuitem\"\n        tabIndex={disabled ? -1 : 0}\n        aria-disabled={disabled}\n        aria-checked={checked}\n        data-highlighted={isHighlighted}\n        data-disabled={disabled}\n        data-destructive={destructive}\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        onMouseEnter={() => setIsHighlighted(true)}\n        onMouseLeave={() => setIsHighlighted(false)}\n      >\n        {(checked || dotted) && (\n          <span className={styles.indicator}>\n            {checked ? 'âœ“' : 'â€¢'}\n          </span>\n        )}\n        {icon && <span className={styles.icon}>{icon}</span>}\n        <span className={styles.itemText}>{children}</span>\n        {shortcut && <span className={styles.shortcut}>{shortcut}</span>}\n      </div>\n    )\n  }\n)\n\n// Separator component\nexport interface ContextMenuSeparatorProps {\n  className?: string\n}\n\nconst ContextMenuSeparator = forwardRef<HTMLDivElement, ContextMenuSeparatorProps>(\n  ({ className }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.separator, className)}\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n      />\n    )\n  }\n)\n\n// Label component\nexport interface ContextMenuLabelProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst ContextMenuLabel = forwardRef<HTMLDivElement, ContextMenuLabelProps>(\n  ({ children, className }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.label, className)}\n        role=\"presentation\"\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Sub menu components\nexport interface ContextMenuSubProps {\n  children: React.ReactNode\n  className?: string\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}\n\nconst ContextMenuSub = forwardRef<HTMLDivElement, ContextMenuSubProps>(\n  ({ children, className, open: controlledOpen, onOpenChange }, ref) => {\n    const parentContext = useContextMenu()\n    const [internalOpen, setInternalOpen] = useState(false)\n    const [position, setPosition] = useState<{ x: number; y: number } | null>(null)\n    const isOpen = controlledOpen !== undefined ? controlledOpen : internalOpen\n    const hoverTimeoutRef = useRef<NodeJS.Timeout>()\n    const closeTimeoutRef = useRef<NodeJS.Timeout>()\n\n    const handleOpenChange = (newOpen: boolean) => {\n      if (controlledOpen === undefined) {\n        setInternalOpen(newOpen)\n      }\n      onOpenChange?.(newOpen)\n    }\n\n    const handleOpen = (e: React.MouseEvent) => {\n      clearTimeout(closeTimeoutRef.current)\n      const element = e.currentTarget as HTMLElement\n      hoverTimeoutRef.current = setTimeout(() => {\n        const rect = element.getBoundingClientRect()\n        setPosition({ x: rect.right - 4, y: rect.top - 4 })\n        handleOpenChange(true)\n      }, 100)\n    }\n\n    const handleKeepOpen = () => {\n      // Just clear the close timeout without repositioning\n      clearTimeout(closeTimeoutRef.current)\n    }\n\n    const handleClose = () => {\n      clearTimeout(hoverTimeoutRef.current)\n      closeTimeoutRef.current = setTimeout(() => {\n        handleOpenChange(false)\n      }, 300)\n    }\n\n    useEffect(() => {\n      return () => {\n        clearTimeout(hoverTimeoutRef.current)\n        clearTimeout(closeTimeoutRef.current)\n      }\n    }, [])\n\n    return (\n      <ContextMenuContext.Provider value={{\n        isOpen,\n        position,\n        onOpen: handleOpen,\n        onClose: handleClose,\n        onKeepOpen: handleKeepOpen,\n        size: parentContext.size,\n        variant: parentContext.variant\n      }}>\n        <div \n          ref={ref} \n          className={className}\n          onMouseEnter={() => {\n            clearTimeout(closeTimeoutRef.current)\n            clearTimeout(hoverTimeoutRef.current)\n          }}\n          onMouseLeave={() => handleClose()}\n        >\n          {children}\n        </div>\n      </ContextMenuContext.Provider>\n    )\n  }\n)\n\nexport interface ContextMenuSubTriggerProps {\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n  icon?: React.ReactNode\n}\n\nconst ContextMenuSubTrigger = forwardRef<HTMLDivElement, ContextMenuSubTriggerProps>(\n  ({ children, className, disabled = false, icon }, ref) => {\n    const { onOpen, onClose, isOpen } = useContextMenu()\n    const [isHighlighted, setIsHighlighted] = useState(false)\n\n    const handleMouseEnter = (e: React.MouseEvent) => {\n      setIsHighlighted(true)\n      if (!disabled) {\n        onOpen(e)\n      }\n    }\n\n    const handleMouseLeave = () => {\n      setIsHighlighted(false)\n      // Don't close immediately - let the Sub component handle the timing\n      onClose()\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.subTrigger,\n          disabled && styles.itemDisabled,\n          isOpen && styles.subTriggerOpen,\n          className\n        )}\n        role=\"menuitem\"\n        aria-haspopup=\"menu\"\n        aria-expanded={isOpen}\n        aria-disabled={disabled}\n        data-highlighted={isHighlighted}\n        data-disabled={disabled}\n        data-state={isOpen ? 'open' : 'closed'}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {icon && <span className={styles.icon}>{icon}</span>}\n        <span className={styles.itemText}>{children}</span>\n        <span className={styles.subTriggerIcon} aria-hidden=\"true\">â–¶</span>\n      </div>\n    )\n  }\n)\n\nexport interface ContextMenuSubContentProps extends Omit<ContextMenuContentProps, 'container'> {\n  onMouseEnter?: () => void\n  onMouseLeave?: () => void\n}\n\nconst ContextMenuSubContent = forwardRef<HTMLDivElement, ContextMenuSubContentProps>(\n  ({ className, onMouseEnter, onMouseLeave, ...props }, ref) => {\n    const context = useContextMenu()\n    const elementRef = useRef<HTMLDivElement>(null)\n    \n    const handleMouseEnter = () => {\n      // When hovering over sub-content, keep it open by calling onKeepOpen \n      // which will clear any pending close timeout without repositioning\n      context.onKeepOpen?.()\n      onMouseEnter?.()\n    }\n\n    const handleMouseLeave = () => {\n      // Start the close timer when leaving the sub-content\n      onMouseLeave?.()\n      context.onClose()\n    }\n\n    // Sub content uses the position from the parent context\n    return (\n      <ContextMenuContent \n        {...props} \n        ref={(node) => {\n          elementRef.current = node\n          if (typeof ref === 'function') ref(node)\n          else if (ref) ref.current = node\n        }}\n        className={clsx(styles.subContent, className)}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      />\n    )\n  }\n)\n\n// Set display names\nContextMenu.displayName = 'ContextMenu'\nContextMenuTrigger.displayName = 'ContextMenu.Trigger'\nContextMenuContent.displayName = 'ContextMenu.Content'\nContextMenuItem.displayName = 'ContextMenu.Item'\nContextMenuSeparator.displayName = 'ContextMenu.Separator'\nContextMenuLabel.displayName = 'ContextMenu.Label'\nContextMenuSub.displayName = 'ContextMenu.Sub'\nContextMenuSubTrigger.displayName = 'ContextMenu.SubTrigger'\nContextMenuSubContent.displayName = 'ContextMenu.SubContent'\n\n// Compound component pattern\nexport const ContextMenuNamespace = Object.assign(ContextMenu, {\n  Trigger: ContextMenuTrigger,\n  Content: ContextMenuContent,\n  Item: ContextMenuItem,\n  Separator: ContextMenuSeparator,\n  Label: ContextMenuLabel,\n  Sub: ContextMenuSub,\n  SubTrigger: ContextMenuSubTrigger,\n  SubContent: ContextMenuSubContent\n})\n\nexport { ContextMenuNamespace as ContextMenu }","import React, { createContext, useContext, useState, useEffect, useCallback, useRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport clsx from 'clsx'\nimport styles from './Sheet.module.css'\n\ninterface SheetProps {\n  open?: boolean\n  defaultOpen?: boolean\n  onOpenChange?: (open: boolean) => void\n  children?: React.ReactNode\n  className?: string\n}\n\ninterface SheetContextValue {\n  open: boolean\n  setOpen: (open: boolean) => void\n}\n\nconst SheetContext = createContext<SheetContextValue | null>(null)\n\nconst useSheet = () => {\n  const context = useContext(SheetContext)\n  if (!context) {\n    throw new Error('Sheet components must be used within a Sheet')\n  }\n  return context\n}\n\nconst Sheet = React.forwardRef<HTMLDivElement, SheetProps>(\n  ({ \n    open, \n    defaultOpen = false, \n    onOpenChange, \n    className, \n    children, \n    ...props \n  }, ref) => {\n    const [isOpen, setIsOpen] = useState(open ?? defaultOpen)\n\n    // Handle controlled state\n    useEffect(() => {\n      if (open !== undefined) {\n        setIsOpen(open)\n      }\n    }, [open])\n\n    const handleOpenChange = useCallback((newOpen: boolean) => {\n      setIsOpen(newOpen)\n      onOpenChange?.(newOpen)\n    }, [onOpenChange])\n\n    const contextValue: SheetContextValue = {\n      open: isOpen,\n      setOpen: handleOpenChange\n    }\n\n    return (\n      <SheetContext.Provider value={contextValue}>\n        <div ref={ref} className={className} {...props}>\n          {children}\n        </div>\n      </SheetContext.Provider>\n    )\n  }\n)\n\ninterface SheetTriggerProps {\n  children: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst SheetTrigger = React.forwardRef<HTMLButtonElement, SheetTriggerProps>(\n  ({ children, className, asChild = false, ...props }, ref) => {\n    const { setOpen } = useSheet()\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, {\n        onClick: () => setOpen(true),\n        ...props\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.trigger, className)}\n        onClick={() => setOpen(true)}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\n\ninterface SheetContentProps {\n  children: React.ReactNode\n  className?: string\n  side?: 'top' | 'bottom' | 'left' | 'right'\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full'\n  variant?: 'default' | 'brutal' | 'outline'\n  showOverlay?: boolean\n  closeOnOverlayClick?: boolean\n  closeOnEscape?: boolean\n  container?: HTMLElement | null\n  onEscapeKeyDown?: (event: KeyboardEvent) => void\n  onPointerDownOutside?: (event: PointerEvent) => void\n  onInteractOutside?: (event: Event) => void\n  onOpenAutoFocus?: (event: Event) => void\n  onCloseAutoFocus?: (event: Event) => void\n}\n\nconst SheetContent = React.forwardRef<HTMLDivElement, SheetContentProps>(\n  ({ \n    children, \n    className,\n    side = 'right',\n    size = 'md',\n    variant = 'default',\n    showOverlay = true,\n    closeOnOverlayClick = true,\n    closeOnEscape = true,\n    container,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onInteractOutside,\n    onOpenAutoFocus,\n    onCloseAutoFocus,\n    ...props \n  }, ref) => {\n    const { open, setOpen } = useSheet()\n    const contentRef = useRef<HTMLDivElement>(null)\n    const overlayRef = useRef<HTMLDivElement>(null)\n\n    // Handle escape key\n    useEffect(() => {\n      if (!open || !closeOnEscape) return\n\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Escape') {\n          onEscapeKeyDown?.(event)\n          if (!event.defaultPrevented) {\n            setOpen(false)\n          }\n        }\n      }\n\n      document.addEventListener('keydown', handleKeyDown)\n      return () => document.removeEventListener('keydown', handleKeyDown)\n    }, [open, closeOnEscape, onEscapeKeyDown, setOpen])\n\n    // Handle body scroll lock\n    useEffect(() => {\n      if (!open) return\n\n      const originalStyle = window.getComputedStyle(document.body).overflow\n      document.body.style.overflow = 'hidden'\n      document.body.style.userSelect = 'none'\n\n      return () => {\n        document.body.style.overflow = originalStyle\n        document.body.style.userSelect = ''\n      }\n    }, [open])\n\n    // Handle focus management\n    useEffect(() => {\n      if (!open) return\n\n      const previousActiveElement = document.activeElement as HTMLElement\n      const content = contentRef.current\n\n      if (content) {\n        // Focus the content or first focusable element\n        const focusableElements = content.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )\n        const firstFocusable = focusableElements[0] as HTMLElement\n        \n        if (firstFocusable) {\n          firstFocusable.focus()\n        } else {\n          content.focus()\n        }\n\n        const focusEvent = new Event('focus')\n        onOpenAutoFocus?.(focusEvent)\n      }\n\n      return () => {\n        if (previousActiveElement) {\n          previousActiveElement.focus()\n          const focusEvent = new Event('focus')\n          onCloseAutoFocus?.(focusEvent)\n        }\n      }\n    }, [open, onOpenAutoFocus, onCloseAutoFocus])\n\n    // Handle outside clicks\n    useEffect(() => {\n      if (!open || !closeOnOverlayClick) return\n\n      const handlePointerDown = (event: PointerEvent) => {\n        const target = event.target as Node\n        const overlay = overlayRef.current\n        const content = contentRef.current\n\n        if (overlay && content && target) {\n          // Check if click was on overlay but not on content\n          if (overlay.contains(target) && !content.contains(target)) {\n            onPointerDownOutside?.(event)\n            onInteractOutside?.(event)\n            \n            if (!event.defaultPrevented) {\n              setOpen(false)\n            }\n          }\n        }\n      }\n\n      document.addEventListener('pointerdown', handlePointerDown)\n      return () => document.removeEventListener('pointerdown', handlePointerDown)\n    }, [open, closeOnOverlayClick, onPointerDownOutside, onInteractOutside, setOpen])\n\n    if (!open) return null\n\n    const content = (\n      <>\n        {showOverlay && (\n          <div\n            ref={overlayRef}\n            className={styles.overlay}\n            data-side={side}\n            data-variant={variant}\n          />\n        )}\n        <div\n          ref={(node) => {\n            if (contentRef) {\n              contentRef.current = node\n            }\n            if (typeof ref === 'function') {\n              ref(node)\n            } else if (ref && 'current' in ref) {\n              ref.current = node\n            }\n          }}\n          className={clsx(\n            styles.content,\n            styles[`side-${side}`],\n            styles[`size-${size}`],\n            styles[`variant-${variant}`],\n            className\n          )}\n          role=\"dialog\"\n          aria-modal=\"true\"\n          tabIndex={-1}\n          data-side={side}\n          data-size={size}\n          data-variant={variant}\n          data-state={open ? 'open' : 'closed'}\n          {...props}\n        >\n          {children}\n        </div>\n      </>\n    )\n\n    return createPortal(content, container || document.body)\n  }\n)\n\ninterface SheetHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst SheetHeader = React.forwardRef<HTMLDivElement, SheetHeaderProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.header, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface SheetTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst SheetTitle = React.forwardRef<HTMLHeadingElement, SheetTitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <h2\n        ref={ref}\n        className={clsx(styles.title, className)}\n        {...props}\n      >\n        {children}\n      </h2>\n    )\n  }\n)\n\ninterface SheetDescriptionProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst SheetDescription = React.forwardRef<HTMLParagraphElement, SheetDescriptionProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={clsx(styles.description, className)}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\ninterface SheetFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst SheetFooter = React.forwardRef<HTMLDivElement, SheetFooterProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.footer, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface SheetCloseProps {\n  children: React.ReactNode\n  className?: string\n  asChild?: boolean\n}\n\nconst SheetClose = React.forwardRef<HTMLButtonElement, SheetCloseProps>(\n  ({ children, className, asChild = false, ...props }, ref) => {\n    const { setOpen } = useSheet()\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, {\n        onClick: () => setOpen(false),\n        ...props\n      })\n    }\n\n    return (\n      <button\n        ref={ref}\n        className={clsx(styles.close, className)}\n        onClick={() => setOpen(false)}\n        aria-label=\"Close sheet\"\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\n\n// Set display names\nSheet.displayName = 'Sheet'\nSheetTrigger.displayName = 'Sheet.Trigger'\nSheetContent.displayName = 'Sheet.Content'\nSheetHeader.displayName = 'Sheet.Header'\nSheetTitle.displayName = 'Sheet.Title'\nSheetDescription.displayName = 'Sheet.Description'\nSheetFooter.displayName = 'Sheet.Footer'\nSheetClose.displayName = 'Sheet.Close'\n\n// Compound component pattern\nexport const SheetNamespace = Object.assign(Sheet, {\n  Trigger: SheetTrigger,\n  Content: SheetContent,\n  Header: SheetHeader,\n  Title: SheetTitle,\n  Description: SheetDescription,\n  Footer: SheetFooter,\n  Close: SheetClose\n})\n\nexport { SheetNamespace as Sheet }\nexport type {\n  SheetProps,\n  SheetTriggerProps,\n  SheetContentProps,\n  SheetHeaderProps,\n  SheetTitleProps,\n  SheetDescriptionProps,\n  SheetFooterProps,\n  SheetCloseProps\n}","import React, { createContext, useContext, useState, useEffect, useCallback, useRef, forwardRef } from 'react'\nimport clsx from 'clsx'\nimport styles from './Carousel.module.css'\n\ninterface CarouselProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: 'horizontal' | 'vertical'\n  autoPlay?: boolean\n  autoPlayInterval?: number\n  loop?: boolean\n  value?: number\n  defaultValue?: number\n  onValueChange?: (value: number) => void\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'outline'\n}\n\ninterface CarouselContextValue {\n  currentIndex: number\n  setCurrentIndex: (index: number) => void\n  orientation: 'horizontal' | 'vertical'\n  totalItems: number\n  setTotalItems: (count: number) => void\n  loop: boolean\n  autoPlay: boolean\n  autoPlayInterval: number\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'brutal' | 'outline'\n}\n\nconst CarouselContext = createContext<CarouselContextValue | null>(null)\n\nconst useCarousel = () => {\n  const context = useContext(CarouselContext)\n  if (!context) {\n    throw new Error('Carousel components must be used within a Carousel')\n  }\n  return context\n}\n\nconst Carousel = forwardRef<HTMLDivElement, CarouselProps>(\n  ({ \n    orientation = 'horizontal',\n    autoPlay = false,\n    autoPlayInterval = 3000,\n    loop = false,\n    value,\n    defaultValue = 0,\n    onValueChange,\n    size = 'md',\n    variant = 'default',\n    children,\n    className,\n    style,\n    ...props\n  }, ref) => {\n    const [currentIndex, setCurrentIndexState] = useState(value ?? defaultValue)\n    const [totalItems, setTotalItems] = useState(0)\n\n    const setCurrentIndex = useCallback((index: number) => {\n      if (loop) {\n        const newIndex = (index + totalItems) % totalItems\n        setCurrentIndexState(newIndex)\n        onValueChange?.(newIndex)\n      } else {\n        const newIndex = Math.max(0, Math.min(index, totalItems - 1))\n        setCurrentIndexState(newIndex)\n        onValueChange?.(newIndex)\n      }\n    }, [loop, totalItems, onValueChange])\n\n    useEffect(() => {\n      if (value !== undefined) {\n        setCurrentIndexState(value)\n      }\n    }, [value])\n\n    useEffect(() => {\n      if (autoPlay && totalItems > 0) {\n        const interval = setInterval(() => {\n          setCurrentIndex(currentIndex + 1)\n        }, autoPlayInterval)\n        return () => clearInterval(interval)\n      }\n    }, [autoPlay, autoPlayInterval, currentIndex, setCurrentIndex, totalItems])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          currentIndex,\n          setCurrentIndex,\n          orientation,\n          totalItems,\n          setTotalItems,\n          loop,\n          autoPlay,\n          autoPlayInterval,\n          size,\n          variant\n        }}\n      >\n        <div\n          ref={ref}\n          className={clsx(\n            styles.carousel,\n            styles[`carousel-${size}`],\n            styles[`carousel-${variant}`],\n            className\n          )}\n          style={style}\n          data-orientation={orientation}\n          data-size={size}\n          data-variant={variant}\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\n\ninterface CarouselContentProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst CarouselContent = forwardRef<HTMLDivElement, CarouselContentProps>(\n  ({ children, className }, ref) => {\n    const { currentIndex, orientation, setTotalItems } = useCarousel()\n    const contentRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n      const items = React.Children.count(children)\n      setTotalItems(items)\n    }, [children, setTotalItems])\n\n    const transform = orientation === 'horizontal' \n      ? `translateX(-${currentIndex * 100}%)`\n      : `translateY(-${currentIndex * 100}%)`\n\n    return (\n      <div \n        ref={ref}\n        className={clsx(styles.carouselContent, className)}\n      >\n        <div\n          ref={contentRef}\n          className={styles.carouselTrack}\n          style={{ transform }}\n        >\n          {React.Children.map(children, (child, index) => (\n            <div\n              className={styles.carouselItem}\n              data-active={index === currentIndex}\n              key={index}\n            >\n              {child}\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n)\n\ninterface CarouselControlsProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst CarouselControls = forwardRef<HTMLDivElement, CarouselControlsProps>(\n  ({ children, className }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.carouselControls, className)}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface CarouselPreviousProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children?: React.ReactNode\n}\n\nconst CarouselPrevious = forwardRef<HTMLButtonElement, CarouselPreviousProps>(\n  ({ children, className, onClick, ...props }, ref) => {\n    const { currentIndex, setCurrentIndex, loop } = useCarousel()\n    const isDisabled = !loop && currentIndex === 0\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      onClick?.(e)\n      if (!e.defaultPrevented) {\n        setCurrentIndex(currentIndex - 1)\n      }\n    }\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={clsx(styles.carouselButton, styles.carouselPrevious, className)}\n        onClick={handleClick}\n        disabled={isDisabled}\n        aria-label=\"Previous slide\"\n        {...props}\n      >\n        {children || (\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\">\n            <polyline points=\"15 18 9 12 15 6\" />\n          </svg>\n        )}\n      </button>\n    )\n  }\n)\n\ninterface CarouselNextProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children?: React.ReactNode\n}\n\nconst CarouselNext = forwardRef<HTMLButtonElement, CarouselNextProps>(\n  ({ children, className, onClick, ...props }, ref) => {\n    const { currentIndex, setCurrentIndex, totalItems, loop } = useCarousel()\n    const isDisabled = !loop && currentIndex === totalItems - 1\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      onClick?.(e)\n      if (!e.defaultPrevented) {\n        setCurrentIndex(currentIndex + 1)\n      }\n    }\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={clsx(styles.carouselButton, styles.carouselNext, className)}\n        onClick={handleClick}\n        disabled={isDisabled}\n        aria-label=\"Next slide\"\n        {...props}\n      >\n        {children || (\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\">\n            <polyline points=\"9 18 15 12 9 6\" />\n          </svg>\n        )}\n      </button>\n    )\n  }\n)\n\ninterface CarouselIndicatorsProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst CarouselIndicators = forwardRef<HTMLDivElement, CarouselIndicatorsProps>(\n  ({ children, className }, ref) => {\n    const { currentIndex, setCurrentIndex, totalItems } = useCarousel()\n\n    if (children) {\n      return (\n        <div\n          ref={ref}\n          className={clsx(styles.carouselIndicators, className)}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.carouselIndicators, className)}\n      >\n        {Array.from({ length: totalItems }).map((_, index) => (\n          <button\n            key={index}\n            type=\"button\"\n            className={clsx(\n              styles.carouselIndicator,\n              index === currentIndex && styles.carouselIndicatorActive\n            )}\n            onClick={() => setCurrentIndex(index)}\n            aria-label={`Go to slide ${index + 1}`}\n          />\n        ))}\n      </div>\n    )\n  }\n)\n\n// Component display names\nCarousel.displayName = 'Carousel'\nCarouselContent.displayName = 'CarouselContent'\nCarouselControls.displayName = 'CarouselControls'\nCarouselPrevious.displayName = 'CarouselPrevious'\nCarouselNext.displayName = 'CarouselNext'\nCarouselIndicators.displayName = 'CarouselIndicators'\n\n// Compound component pattern\nconst CarouselComponent = Object.assign(Carousel, {\n  Content: CarouselContent,\n  Controls: CarouselControls,\n  Previous: CarouselPrevious,\n  Next: CarouselNext,\n  Indicators: CarouselIndicators\n})\n\nexport { CarouselComponent as Carousel }\nexport type {\n  CarouselProps,\n  CarouselContentProps,\n  CarouselControlsProps,\n  CarouselPreviousProps,\n  CarouselNextProps,\n  CarouselIndicatorsProps\n}","import React, { forwardRef, createContext, useContext } from 'react'\nimport clsx from 'clsx'\nimport styles from './Chart.module.css'\n\ninterface ChartProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'brutal' | 'outline'\n  size?: 'sm' | 'md' | 'lg'\n  showBorder?: boolean\n  showShadow?: boolean\n  showGrid?: boolean\n  aspectRatio?: string\n  height?: number | string\n}\n\ninterface ChartContextValue {\n  variant?: 'default' | 'brutal' | 'outline'\n  size?: 'sm' | 'md' | 'lg'\n  showGrid?: boolean\n}\n\nconst ChartContext = createContext<ChartContextValue | null>(null)\n\nconst useChart = () => {\n  const context = useContext(ChartContext)\n  if (!context) {\n    throw new Error('Chart components must be used within a Chart')\n  }\n  return context\n}\n\nconst Chart = forwardRef<HTMLDivElement, ChartProps>(\n  ({ \n    variant = 'default',\n    size = 'md',\n    showBorder = true,\n    showShadow = true,\n    showGrid = true,\n    aspectRatio = '16/9',\n    height,\n    children,\n    className,\n    style,\n    ...props\n  }, ref) => {\n    const chartStyle: React.CSSProperties = {\n      ...style,\n      height: height,\n      aspectRatio: !height ? aspectRatio : undefined\n    }\n\n    return (\n      <ChartContext.Provider value={{ variant, size, showGrid }}>\n        <div\n          ref={ref}\n          className={clsx(\n            styles.chart,\n            styles[`chart-${size}`],\n            styles[`chart-${variant}`],\n            !showBorder && styles.noBorder,\n            !showShadow && styles.noShadow,\n            className\n          )}\n          style={chartStyle}\n          data-variant={variant}\n          data-size={size}\n          role=\"img\"\n          aria-label=\"Chart container\"\n          {...props}\n        >\n          {children}\n        </div>\n      </ChartContext.Provider>\n    )\n  }\n)\n\ninterface ChartHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode\n}\n\nconst ChartHeader = forwardRef<HTMLDivElement, ChartHeaderProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.chartHeader, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface ChartTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  children?: React.ReactNode\n}\n\nconst ChartTitle = forwardRef<HTMLHeadingElement, ChartTitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <h3\n        ref={ref}\n        className={clsx(styles.chartTitle, className)}\n        {...props}\n      >\n        {children}\n      </h3>\n    )\n  }\n)\n\ninterface ChartSubtitleProps extends React.HTMLAttributes<HTMLParagraphElement> {\n  children?: React.ReactNode\n}\n\nconst ChartSubtitle = forwardRef<HTMLParagraphElement, ChartSubtitleProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={clsx(styles.chartSubtitle, className)}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\ninterface ChartContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode\n}\n\nconst ChartContent = forwardRef<HTMLDivElement, ChartContentProps>(\n  ({ children, className, ...props }, ref) => {\n    const { showGrid } = useChart()\n    \n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.chartContent, className)}\n        {...props}\n      >\n        <div className={styles.chartWrapper}>\n          {showGrid && <div className={styles.chartGrid} aria-hidden=\"true\" />}\n          <div className={styles.chartContainer}>\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\ninterface ChartLegendProps extends React.HTMLAttributes<HTMLDivElement> {\n  position?: 'top' | 'bottom' | 'left' | 'right'\n  children?: React.ReactNode\n}\n\nconst ChartLegend = forwardRef<HTMLDivElement, ChartLegendProps>(\n  ({ position = 'bottom', children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.chartLegend,\n          styles[`legend-${position}`],\n          className\n        )}\n        role=\"group\"\n        aria-label=\"Chart legend\"\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\ninterface ChartFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode\n}\n\nconst ChartFooter = forwardRef<HTMLDivElement, ChartFooterProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(styles.chartFooter, className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Component display names\nChart.displayName = 'Chart'\nChartHeader.displayName = 'ChartHeader'\nChartTitle.displayName = 'ChartTitle'\nChartSubtitle.displayName = 'ChartSubtitle'\nChartContent.displayName = 'ChartContent'\nChartLegend.displayName = 'ChartLegend'\nChartFooter.displayName = 'ChartFooter'\n\n// Compound component pattern\nconst ChartComponent = Object.assign(Chart, {\n  Header: ChartHeader,\n  Title: ChartTitle,\n  Subtitle: ChartSubtitle,\n  Content: ChartContent,\n  Legend: ChartLegend,\n  Footer: ChartFooter\n})\n\nexport { ChartComponent as Chart }\nexport type {\n  ChartProps,\n  ChartHeaderProps,\n  ChartTitleProps,\n  ChartSubtitleProps,\n  ChartContentProps,\n  ChartLegendProps,\n  ChartFooterProps\n}","// Brutalist SVG Shapes\n// Import these SVG files directly or use them as React components\n\nexport const shapes = {\n  square: '/shapes/BrutalSquare.svg',\n  triangle: '/shapes/BrutalTriangle.svg',\n  circle: '/shapes/BrutalCircle.svg',\n  diamond: '/shapes/BrutalDiamond.svg',\n  hexagon: '/shapes/BrutalHexagon.svg',\n  arrow: '/shapes/BrutalArrow.svg',\n  cross: '/shapes/BrutalCross.svg',\n  star: '/shapes/BrutalStar.svg',\n  lightning: '/shapes/BrutalLightning.svg',\n  octagon: '/shapes/BrutalOctagon.svg',\n} as const\n\nexport const shapesList = [\n  {\n    name: 'Square',\n    id: 'square',\n    file: 'BrutalSquare.svg',\n    description: 'Classic brutalist square with thick borders'\n  },\n  {\n    name: 'Triangle',\n    id: 'triangle', \n    file: 'BrutalTriangle.svg',\n    description: 'Sharp angular triangle with bold edges'\n  },\n  {\n    name: 'Circle',\n    id: 'circle',\n    file: 'BrutalCircle.svg', \n    description: 'Solid circle with contrasting inner border'\n  },\n  {\n    name: 'Diamond',\n    id: 'diamond',\n    file: 'BrutalDiamond.svg',\n    description: 'Rotated square creating diamond shape'\n  },\n  {\n    name: 'Hexagon',\n    id: 'hexagon',\n    file: 'BrutalHexagon.svg',\n    description: 'Six-sided polygon with clean geometry'\n  },\n  {\n    name: 'Arrow',\n    id: 'arrow',\n    file: 'BrutalArrow.svg',\n    description: 'Directional arrow for navigation and flow'\n  },\n  {\n    name: 'Cross',\n    id: 'cross',\n    file: 'BrutalCross.svg',\n    description: 'Plus/cross shape for icons and UI elements'\n  },\n  {\n    name: 'Star',\n    id: 'star',\n    file: 'BrutalStar.svg',\n    description: 'Five-pointed star with sharp angles'\n  },\n  {\n    name: 'Lightning',\n    id: 'lightning',\n    file: 'BrutalLightning.svg',\n    description: 'Jagged lightning bolt for energy and power'\n  },\n  {\n    name: 'Octagon',\n    id: 'octagon',\n    file: 'BrutalOctagon.svg',\n    description: 'Eight-sided stop sign inspired shape'\n  }\n] as const\n\nexport type ShapeId = keyof typeof shapes\nexport type ShapeInfo = typeof shapesList[number]","import React from 'react'\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'default' | 'brutal' | 'destructive' | 'outline' | 'ghost'\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  fullWidth?: boolean\n  loading?: boolean\n  brutalistShadow?: boolean\n  glitch?: boolean\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  variant = 'default',\n  size = 'md',\n  fullWidth = false,\n  loading = false,\n  brutalistShadow = true,\n  glitch = false,\n  leftIcon,\n  rightIcon,\n  disabled,\n  children,\n  className = '',\n  ...props\n}) => {\n  const baseClasses = `\n    relative inline-flex items-center justify-center gap-[0.5rem]\n    font-bold uppercase tracking-wider\n    border-[3px] border-solid border-black\n    cursor-pointer transition-all duration-[150ms] ease-in-out\n    select-none whitespace-nowrap outline-none\n    focus-visible:outline focus-visible:outline-[3px] focus-visible:outline-red-500 focus-visible:outline-offset-2\n    disabled:opacity-50 disabled:cursor-not-allowed\n    rounded-none\n  `\n\n  const sizeClasses = {\n    sm: 'py-[0.5rem] px-[1rem] text-xs',      // --brutal-space-2 (0.5rem) --brutal-space-4 (1rem)\n    md: 'py-[0.75rem] px-[1.5rem] text-sm',   // --brutal-space-3 (0.75rem) --brutal-space-6 (1.5rem) \n    lg: 'py-[1rem] px-[2rem] text-base',      // --brutal-space-4 (1rem) --brutal-space-8 (2rem)\n    xl: 'py-[1.5rem] px-[2.5rem] text-lg'     // --brutal-space-6 (1.5rem) --brutal-space-10 (2.5rem)\n  }\n\n  const variantClasses = {\n    default: `\n      bg-white text-black\n      hover:bg-[#f5f5f5]\n      disabled:hover:bg-white\n    `,\n    brutal: `\n      bg-black text-white\n      hover:bg-[#171717]\n      disabled:hover:bg-black\n    `,\n    destructive: `\n      bg-[#ff0000] text-white border-[#cc0000]\n      hover:bg-[#cc0000]\n      disabled:hover:bg-[#ff0000]\n    `,\n    outline: `\n      bg-transparent text-black\n      hover:bg-black hover:text-white\n      disabled:hover:bg-transparent disabled:hover:text-black\n    `,\n    ghost: `\n      bg-transparent text-black border-transparent\n      hover:bg-[#f5f5f5] hover:border-black\n      disabled:hover:bg-transparent disabled:hover:border-transparent\n    `\n  }\n\n  const shadowClasses = brutalistShadow && !disabled ? `\n    shadow-[8px_8px_0px_black]\n    hover:shadow-[12px_12px_0px_black] hover:-translate-x-[4px] hover:-translate-y-[4px]\n    active:shadow-[4px_4px_0px_black] active:translate-x-0 active:translate-y-0\n  ` : brutalistShadow && disabled ? 'shadow-[8px_8px_0px_black]' : ''\n\n  const glitchClasses = glitch ? 'before:content-[attr(data-text)] after:content-[attr(data-text)] before:absolute after:absolute before:top-0 after:top-0 before:left-0 after:left-0 before:w-full after:w-full before:h-full after:h-full before:flex after:flex before:items-center after:items-center before:justify-center after:justify-center before:px-inherit after:px-inherit before:py-inherit after:py-inherit before:animate-[glitch-1_0.5s_infinite] after:animate-[glitch-2_0.5s_infinite] before:text-red-500 after:text-blue-600 before:-z-10 after:-z-20 before:opacity-80 after:opacity-80 hover:before:animate-[glitch-1_0.2s_infinite] hover:after:animate-[glitch-2_0.2s_infinite]' : ''\n\n  const widthClasses = fullWidth ? 'w-full' : ''\n  const loadingClasses = loading ? 'text-transparent' : ''\n\n  const combinedClasses = `\n    ${baseClasses}\n    ${sizeClasses[size]}\n    ${variantClasses[variant]}\n    ${shadowClasses}\n    ${glitchClasses}\n    ${widthClasses}\n    ${loadingClasses}\n    ${className}\n  `.replace(/\\s+/g, ' ').trim()\n\n  return (\n    <button\n      className={combinedClasses}\n      style={{\n        fontFamily: \"'JetBrains Mono', 'Courier New', monospace\",\n        letterSpacing: '0.05em',\n        ...props.style\n      }}\n      disabled={disabled || loading}\n      data-text={glitch ? children : undefined}\n      {...props}\n    >\n      {loading && (\n        <span className=\"absolute w-4 h-4 border-2 border-current border-r-transparent animate-spin rounded-full\" />\n      )}\n      {leftIcon && <span className=\"inline-flex items-center justify-center\">{leftIcon}</span>}\n      <span className=\"inline-flex items-center\">{children}</span>\n      {rightIcon && <span className=\"inline-flex items-center justify-center\">{rightIcon}</span>}\n    </button>\n  )\n}","import React, { forwardRef } from 'react'\n\nexport interface AspectRatioProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** The aspect ratio to maintain (e.g., 16/9, 4/3, 1/1) */\n  ratio?: number\n  /** Content to display within the aspect ratio container */\n  children: React.ReactNode\n  /** Whether to apply object-fit to child images/videos */\n  objectFit?: 'contain' | 'cover' | 'fill' | 'none' | 'scale-down'\n  /** Background color when content doesn't fill the container */\n  backgroundColor?: string\n}\n\n/**\n * AspectRatio component maintains a specific width-to-height ratio for its content.\n * Useful for responsive images, videos, embeds, and any content that needs consistent dimensions.\n */\nexport const AspectRatio = forwardRef<HTMLDivElement, AspectRatioProps>(\n  ({ \n    ratio = 16/9, \n    children, \n    className = '',\n    objectFit = 'cover',\n    backgroundColor,\n    style,\n    ...props \n  }, ref) => {\n    const paddingBottom = `${(1 / ratio) * 100}%`\n\n    const baseClasses = `\n      relative w-full overflow-hidden\n      border-[3px] border-solid border-black\n      bg-gray-100\n      shadow-[4px_4px_0px_black]\n      rounded-none\n      transition-none\n      dark:bg-gray-800 dark:border-white\n      contrast-more:border-[4px] contrast-more:shadow-[5px_5px_0px_black]\n      print:shadow-none print:border print:border-black\n    `\n\n    const objectFitClasses = {\n      contain: '[&>div>img]:object-contain [&>div>video]:object-contain',\n      cover: '[&>div>img]:object-cover [&>div>video]:object-cover',\n      fill: '[&>div>img]:object-fill [&>div>video]:object-fill',\n      none: '[&>div>img]:object-none [&>div>video]:object-none',\n      'scale-down': '[&>div>img]:object-scale-down [&>div>video]:object-scale-down'\n    }\n\n    const combinedClasses = `\n      ${baseClasses}\n      ${objectFitClasses[objectFit]}\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={combinedClasses}\n        style={{\n          ...style,\n          backgroundColor: backgroundColor || undefined\n        }}\n        {...props}\n      >\n        {/* Sizer div to maintain aspect ratio */}\n        <div style={{ paddingBottom }} />\n        \n        {/* Content container */}\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"w-full h-full [&>img]:w-full [&>img]:h-full [&>img]:block [&>video]:w-full [&>video]:h-full [&>video]:block [&>iframe]:w-full [&>iframe]:h-full [&>iframe]:block [&>svg]:w-full [&>svg]:h-full [&>svg]:block\">\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nAspectRatio.displayName = 'AspectRatio'","import { forwardRef, HTMLAttributes } from 'react'\n\nexport interface CardProps extends HTMLAttributes<HTMLDivElement> {\n  /** Visual variant of the card */\n  variant?: 'elevated' | 'flat' | 'outline'\n  /** Padding options */\n  padding?: 'none' | 'sm' | 'md' | 'lg'\n  /** Whether the card is clickable */\n  clickable?: boolean\n  /** Whether to show hover effects */\n  hover?: boolean\n}\n\nexport interface CardHeaderProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface CardBodyProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface CardFooterProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst Card = forwardRef<HTMLDivElement, CardProps>(\n  (\n    {\n      children,\n      className = '',\n      variant = 'elevated',\n      padding = 'md',\n      clickable = false,\n      hover = true,\n      ...props\n    },\n    ref\n  ) => {\n    const baseClasses = `\n      bg-white border-[3px] border-solid border-black\n      transition-all duration-150 ease-in-out\n      rounded-none\n    `\n\n    const variantClasses = {\n      elevated: 'shadow-[8px_8px_0px_black]',\n      flat: '',\n      outline: 'bg-transparent'\n    }\n\n    const paddingClasses = {\n      none: '',\n      sm: 'p-3',\n      md: 'p-6',\n      lg: 'p-8'\n    }\n\n    const interactionClasses = clickable \n      ? 'cursor-pointer hover:shadow-[12px_12px_0px_black] hover:-translate-x-1 hover:-translate-y-1 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'\n      : hover\n        ? 'hover:shadow-[12px_12px_0px_black] hover:-translate-x-1 hover:-translate-y-1'\n        : ''\n\n    const combinedClasses = `\n      ${baseClasses}\n      ${variantClasses[variant]}\n      ${paddingClasses[padding]}\n      ${interactionClasses}\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={combinedClasses}\n        role={clickable ? 'button' : undefined}\n        tabIndex={clickable ? 0 : undefined}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardHeader = forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ children, className = '', ...props }, ref) => {\n    const headerClasses = `\n      pb-4 border-b-[2px] border-black mb-4\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={headerClasses}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardBody = forwardRef<HTMLDivElement, CardBodyProps>(\n  ({ children, className = '', ...props }, ref) => {\n    const bodyClasses = `\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={bodyClasses}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst CardFooter = forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ children, className = '', ...props }, ref) => {\n    const footerClasses = `\n      pt-4 border-t-[2px] border-black mt-4\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={footerClasses}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCard.displayName = 'Card'\nCardHeader.displayName = 'Card.Header'\nCardBody.displayName = 'Card.Body'\nCardFooter.displayName = 'Card.Footer'\n\n// Compound component\nconst CardComponent = Card as typeof Card & {\n  Header: typeof CardHeader\n  Body: typeof CardBody\n  Footer: typeof CardFooter\n}\n\nCardComponent.Header = CardHeader\nCardComponent.Body = CardBody\nCardComponent.Footer = CardFooter\n\nexport { CardComponent as Card }","import React, { forwardRef, InputHTMLAttributes } from 'react'\n\nexport interface InputProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  variant?: 'default' | 'error' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n  fullWidth?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className = '',\n      variant = 'default',\n      size = 'md',\n      leftIcon,\n      rightIcon,\n      fullWidth = false,\n      brutalistShadow = true,\n      disabled,\n      readOnly,\n      type = 'text',\n      ...props\n    },\n    ref\n  ) => {\n    const baseClasses = `\n      border-[3px] border-solid border-black\n      bg-white text-black placeholder-gray-500\n      transition-all duration-150 ease-in-out\n      focus:outline-none focus:border-black\n      hover:border-gray-700\n      disabled:opacity-60 disabled:cursor-not-allowed disabled:bg-gray-100\n      read-only:cursor-default read-only:bg-gray-100\n      w-full block\n      rounded-none\n    `\n\n    const sizeClasses = {\n      sm: 'px-3 py-2 text-sm leading-tight',\n      md: 'px-4 py-3 text-base leading-normal',\n      lg: 'px-5 py-4 text-lg leading-normal'\n    }\n\n    const variantClasses = {\n      default: 'border-black focus:border-black',\n      error: 'border-red-500 focus:border-red-500 bg-red-50',\n      success: 'border-green-500 focus:border-green-500 bg-green-50'\n    }\n\n    const shadowClasses = brutalistShadow && !disabled && !readOnly\n      ? 'shadow-[4px_4px_0px_black] focus:shadow-[6px_6px_0px_black] focus:-translate-x-0.5 focus:-translate-y-0.5'\n      : ''\n\n    const widthClasses = fullWidth ? 'w-full' : ''\n\n    const iconPadding = {\n      left: leftIcon ? 'pl-12' : '',\n      right: rightIcon ? 'pr-12' : ''\n    }\n\n    if (leftIcon || rightIcon) {\n      return (\n        <div className={`relative ${fullWidth ? 'w-full' : 'inline-block'}`}>\n          {leftIcon && (\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-600 pointer-events-none\">\n              {leftIcon}\n            </div>\n          )}\n          <input\n            ref={ref}\n            type={type}\n            className={`\n              ${baseClasses}\n              ${sizeClasses[size]}\n              ${variantClasses[variant]}\n              ${shadowClasses}\n              ${widthClasses}\n              ${iconPadding.left}\n              ${iconPadding.right}\n              ${className}\n            `.replace(/\\s+/g, ' ').trim()}\n            style={{\n              fontFamily: \"'JetBrains Mono', 'Courier New', monospace\",\n              fontWeight: 500,\n              ...props.style\n            }}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...props}\n          />\n          {rightIcon && (\n            <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-600 pointer-events-none\">\n              {rightIcon}\n            </div>\n          )}\n        </div>\n      )\n    }\n\n    return (\n      <input\n        ref={ref}\n        type={type}\n        className={`\n          ${baseClasses}\n          ${sizeClasses[size]}\n          ${variantClasses[variant]}\n          ${shadowClasses}\n          ${widthClasses}\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        style={{\n          fontFamily: \"'JetBrains Mono', 'Courier New', monospace\",\n          fontWeight: 500,\n          ...props.style\n        }}\n        disabled={disabled}\n        readOnly={readOnly}\n        {...props}\n      />\n    )\n  }\n)\n\nInput.displayName = 'Input'","import React, { forwardRef, HTMLAttributes } from 'react'\n\nexport interface BadgeProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Badge content */\n  children?: React.ReactNode\n  /** Badge variant */\n  variant?: 'solid' | 'outline' | 'dot' | 'secondary'\n  /** Badge color */\n  color?: 'accent' | 'success' | 'warning' | 'error' | 'info' | 'neutral'\n  /** Badge size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the badge is dismissible */\n  dismissible?: boolean\n  /** Click handler for dismissible badges */\n  onDismiss?: () => void\n  /** Additional CSS classes */\n  className?: string\n  /** Custom click handler */\n  onClick?: () => void\n  /** Whether the badge is clickable */\n  clickable?: boolean\n}\n\nexport const Badge = forwardRef<HTMLSpanElement, BadgeProps>(\n  (\n    {\n      children,\n      variant = 'solid',\n      color = 'accent',\n      size = 'md',\n      dismissible = false,\n      onDismiss,\n      className = '',\n      onClick,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) => {\n    const isDot = variant === 'dot'\n    const isClickable = clickable || !!onClick\n    const isDismissible = dismissible && !!onDismiss\n\n    const handleDismiss = (e: React.MouseEvent) => {\n      e.stopPropagation()\n      onDismiss?.()\n    }\n\n    const handleClick = () => {\n      if (isClickable) {\n        onClick?.()\n      }\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (isClickable && (e.key === 'Enter' || e.key === ' ')) {\n        e.preventDefault()\n        onClick?.()\n      }\n    }\n\n    // For dot variant, don't render children\n    const content = isDot ? null : children\n\n    const baseClasses = `\n      inline-flex items-center justify-center\n      font-mono font-bold uppercase tracking-wider\n      border-[3px] border-solid border-black\n      rounded-none whitespace-nowrap\n      transition-all duration-150 ease-in-out\n      shadow-[4px_4px_0px_black]\n    `\n\n    const sizeClasses = {\n      sm: isDot ? 'w-2 h-2' : 'px-2 py-1 text-xs min-h-[20px]',\n      md: isDot ? 'w-3 h-3' : 'px-3 py-2 text-sm min-h-[24px]',\n      lg: isDot ? 'w-4 h-4' : 'px-4 py-3 text-base min-h-[32px]'\n    }\n\n    const variantClasses = {\n      solid: 'bg-black text-white border-black',\n      outline: 'bg-transparent text-black border-black',\n      dot: 'rounded-full',\n      secondary: 'bg-gray-100 text-gray-900 border-gray-600'\n    }\n\n    const colorClasses = {\n      accent: variant === 'outline' ? 'text-red-500 border-red-500' : 'bg-red-500 text-white border-red-700',\n      success: variant === 'outline' ? 'text-green-500 border-green-500' : 'bg-green-500 text-white border-green-700',\n      warning: variant === 'outline' ? 'text-yellow-500 border-yellow-500' : 'bg-yellow-400 text-black border-yellow-600',\n      error: variant === 'outline' ? 'text-red-500 border-red-500' : 'bg-red-500 text-white border-red-700',\n      info: variant === 'outline' ? 'text-blue-500 border-blue-500' : 'bg-blue-500 text-white border-blue-700',\n      neutral: variant === 'outline' ? 'text-gray-500 border-gray-500' : 'bg-gray-500 text-white border-gray-700'\n    }\n\n    const interactionClasses = isClickable\n      ? 'cursor-pointer hover:shadow-[6px_6px_0px_black] hover:-translate-x-0.5 hover:-translate-y-0.5 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'\n      : ''\n\n    const combinedClasses = `\n      ${baseClasses}\n      ${sizeClasses[size]}\n      ${variantClasses[variant]}\n      ${variant !== 'solid' && variant !== 'secondary' ? colorClasses[color] : ''}\n      ${interactionClasses}\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    // Dismiss icon\n    const dismissIcon = (\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        className=\"w-3 h-3 ml-1\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n      </svg>\n    )\n\n    return (\n      <span\n        ref={ref}\n        className={combinedClasses}\n        style={{\n          fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n          fontWeight: 700,\n          letterSpacing: '0.02em',\n          lineHeight: 1,\n          ...props.style\n        }}\n        onClick={isClickable ? handleClick : undefined}\n        onKeyDown={isClickable ? handleKeyDown : undefined}\n        role={isClickable ? 'button' : isDot ? 'status' : undefined}\n        tabIndex={isClickable ? 0 : undefined}\n        aria-label={\n          isDot \n            ? `${color} status indicator` \n            : typeof children === 'string' \n              ? children \n              : undefined\n        }\n        {...props}\n      >\n        {content}\n        \n        {isDismissible && (\n          <button\n            type=\"button\"\n            className=\"ml-1 text-current hover:text-gray-700 focus:outline-none\"\n            onClick={handleDismiss}\n            aria-label=\"Dismiss badge\"\n            tabIndex={-1}\n          >\n            {dismissIcon}\n          </button>\n        )}\n      </span>\n    )\n  }\n)\n\nBadge.displayName = 'Badge'","import { forwardRef, HTMLAttributes, useState } from 'react'\n\nexport interface AlertProps extends HTMLAttributes<HTMLDivElement> {\n  /** Type of alert */\n  type?: 'info' | 'success' | 'warning' | 'error'\n  /** Visual variant */\n  variant?: 'filled' | 'outline'\n  /** Size of the alert */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether the alert can be dismissed */\n  dismissible?: boolean\n  /** Callback when alert is dismissed */\n  onDismiss?: () => void\n}\n\nexport interface AlertIconProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface AlertContentProps extends HTMLAttributes<HTMLDivElement> {}\nexport interface AlertTitleProps extends HTMLAttributes<HTMLHeadingElement> {}\nexport interface AlertDescriptionProps extends HTMLAttributes<HTMLParagraphElement> {}\nexport interface AlertActionsProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(\n  (\n    {\n      children,\n      className = '',\n      type = 'info',\n      variant = 'filled',\n      size = 'md',\n      dismissible = false,\n      onDismiss,\n      ...props\n    },\n    ref\n  ) => {\n    const [dismissed, setDismissed] = useState(false)\n    const [isExiting, setIsExiting] = useState(false)\n\n    const handleDismiss = () => {\n      setIsExiting(true)\n      // Wait for animation to complete before removing from DOM\n      setTimeout(() => {\n        setDismissed(true)\n        onDismiss?.()\n      }, 300) // Match animation duration\n    }\n\n    if (dismissed) {\n      return null\n    }\n\n    const baseClasses = `\n      relative flex items-start gap-3\n      border-[3px] border-solid rounded-none\n      font-medium transition-all duration-150 ease-in-out\n      shadow-[4px_4px_0px_black]\n      hover:shadow-[6px_6px_0px_black] hover:-translate-x-0.5 hover:-translate-y-0.5\n      motion-reduce:transition-none motion-reduce:animate-none\n      contrast-more:border-[4px]\n    `\n\n    const sizeClasses = {\n      sm: 'p-3 text-sm leading-tight',\n      md: 'p-4 text-base leading-normal',\n      lg: 'p-6 text-lg leading-normal'\n    }\n\n    const typeVariantClasses = {\n      info: {\n        filled: 'bg-blue-500 border-black text-white',\n        outline: 'bg-white border-blue-500 text-blue-500 border-[5px]'\n      },\n      success: {\n        filled: 'bg-green-500 border-black text-white',\n        outline: 'bg-white border-green-500 text-green-500 border-[5px]'\n      },\n      warning: {\n        filled: 'bg-yellow-400 border-black text-black',\n        outline: 'bg-white border-yellow-400 text-yellow-600 border-[5px]'\n      },\n      error: {\n        filled: 'bg-red-500 border-black text-white hover:animate-[alertShake_0.15s_ease-in-out]',\n        outline: 'bg-white border-red-500 text-red-500 border-[5px] hover:animate-[alertShake_0.15s_ease-in-out]'\n      }\n    }\n\n    const dismissibleClasses = dismissible ? 'pr-12' : ''\n\n    const combinedClasses = `\n      ${baseClasses}\n      ${sizeClasses[size]}\n      ${typeVariantClasses[type][variant]}\n      ${dismissibleClasses}\n      ${className}\n    `.replace(/\\s+/g, ' ').trim()\n\n    return (\n      <div\n        ref={ref}\n        className={combinedClasses}\n        style={{\n          fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n          animation: isExiting \n            ? 'alertExit 0.3s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards'\n            : 'alertEnter 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) forwards',\n          ...props.style\n        }}\n        role=\"alert\"\n        aria-live=\"polite\"\n        {...props}\n      >\n        <style>\n          {`\n            @keyframes alertEnter {\n              from {\n                opacity: 0;\n                transform: translateY(-20px) scale(0.95);\n              }\n              to {\n                opacity: 1;\n                transform: translateY(0) scale(1);\n              }\n            }\n            @keyframes alertExit {\n              from {\n                opacity: 1;\n                transform: translateX(0) scale(1);\n              }\n              to {\n                opacity: 0;\n                transform: translateX(100px) scale(0.9);\n              }\n            }\n            @keyframes alertShake {\n              0%, 100% {\n                transform: translateX(0);\n              }\n              25% {\n                transform: translateX(-4px);\n              }\n              75% {\n                transform: translateX(4px);\n              }\n            }\n          `}\n        </style>\n        {children}\n        {dismissible && (\n          <button\n            className={`\n              absolute top-3 right-3 bg-transparent border-none text-current cursor-pointer\n              p-1 flex items-center justify-center rounded-none opacity-70 transition-all duration-100 ease-in-out\n              hover:opacity-100 hover:scale-110 active:scale-95\n              focus:outline focus:outline-2 focus:outline-current focus:outline-offset-1\n              motion-reduce:transition-none motion-reduce:hover:scale-100 motion-reduce:active:scale-100\n              ${size === 'sm' ? 'top-2 right-2 p-0.5' : size === 'lg' ? 'top-4 right-4' : ''}\n            `}\n            onClick={handleDismiss}\n            aria-label=\"Dismiss alert\"\n            type=\"button\"\n          >\n            <svg\n              width={size === 'sm' ? 14 : size === 'lg' ? 18 : 16}\n              height={size === 'sm' ? 14 : size === 'lg' ? 18 : 16}\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M12 4L4 12M4 4L12 12\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"square\"\n              />\n            </svg>\n          </button>\n        )}\n      </div>\n    )\n  }\n)\n\nconst AlertIcon = forwardRef<HTMLDivElement, AlertIconProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={`\n          flex-shrink-0 flex items-center justify-center mt-1\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        {...props}\n      >\n        {children || <DefaultIcon />}\n      </div>\n    )\n  }\n)\n\nconst AlertContent = forwardRef<HTMLDivElement, AlertContentProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={`\n          flex-1 min-w-0\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst AlertTitle = forwardRef<HTMLHeadingElement, AlertTitleProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <h4\n        ref={ref}\n        className={`\n          font-bold text-inherit leading-tight uppercase tracking-wider\n          m-0 mb-1\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        style={{\n          fontFamily: \"'Space Grotesk', 'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n          letterSpacing: '0.05em',\n          ...props.style\n        }}\n        {...props}\n      >\n        {children}\n      </h4>\n    )\n  }\n)\n\nconst AlertDescription = forwardRef<HTMLParagraphElement, AlertDescriptionProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={`\n          m-0 leading-normal opacity-90\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        {...props}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\nconst AlertActions = forwardRef<HTMLDivElement, AlertActionsProps>(\n  ({ children, className = '', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={`\n          flex items-center gap-2 mt-3 flex-wrap\n          max-md:flex-col max-md:items-stretch max-md:[&>button]:w-full\n          ${className}\n        `.replace(/\\s+/g, ' ').trim()}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\n// Default icon component\nconst DefaultIcon = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle\n      cx=\"10\"\n      cy=\"10\"\n      r=\"8\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M10 6V10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n    />\n    <circle\n      cx=\"10\"\n      cy=\"14\"\n      r=\"1\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nAlert.displayName = 'Alert'\nAlertIcon.displayName = 'Alert.Icon'\nAlertContent.displayName = 'Alert.Content'\nAlertTitle.displayName = 'Alert.Title'\nAlertDescription.displayName = 'Alert.Description'\nAlertActions.displayName = 'Alert.Actions'\n\n// Compound component\nconst AlertComponent = Alert as typeof Alert & {\n  Icon: typeof AlertIcon\n  Content: typeof AlertContent\n  Title: typeof AlertTitle\n  Description: typeof AlertDescription\n  Actions: typeof AlertActions\n}\n\nAlertComponent.Icon = AlertIcon\nAlertComponent.Content = AlertContent\nAlertComponent.Title = AlertTitle\nAlertComponent.Description = AlertDescription\nAlertComponent.Actions = AlertActions\n\nexport { AlertComponent as Alert }","import React, { forwardRef, InputHTMLAttributes, useRef, useEffect } from 'react'\n\nexport interface CheckboxProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'size'> {\n  size?: 'sm' | 'md' | 'lg'\n  label?: React.ReactNode\n  indeterminate?: boolean\n  error?: boolean\n  brutalistShadow?: boolean\n}\n\nexport const Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  (\n    {\n      className = '',\n      size = 'md',\n      label,\n      indeterminate = false,\n      error = false,\n      brutalistShadow = true,\n      disabled,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    const internalRef = useRef<HTMLInputElement>(null)\n    const checkboxRef = ref || internalRef\n\n    // Handle indeterminate state\n    useEffect(() => {\n      const checkbox = typeof checkboxRef === 'function' ? null : checkboxRef.current\n      if (checkbox) {\n        checkbox.indeterminate = indeterminate\n      }\n    }, [indeterminate, checkboxRef])\n\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`\n\n    const sizeClasses = {\n      sm: 'w-4 h-4',\n      md: 'w-5 h-5', \n      lg: 'w-6 h-6'\n    }\n\n    const labelSizeClasses = {\n      sm: 'text-sm',\n      md: 'text-base',\n      lg: 'text-lg'\n    }\n\n    const containerClasses = `\n      inline-flex items-center gap-3 relative select-none\n      ${disabled ? 'cursor-not-allowed opacity-50' : ''}\n      ${className}\n    `\n\n    const checkboxClasses = `\n      flex items-center justify-center\n      bg-white border-[3px] border-solid rounded-none\n      cursor-pointer transition-all duration-150 ease-in-out\n      relative overflow-hidden\n      ${sizeClasses[size]}\n      ${brutalistShadow ? 'shadow-[4px_4px_0px_black]' : ''}\n      ${error ? 'border-red-500' : 'border-black'}\n      ${disabled ? 'cursor-not-allowed bg-gray-300' : ''}\n      hover:bg-gray-100 hover:-translate-x-0.5 hover:-translate-y-0.5\n      ${brutalistShadow ? 'hover:shadow-[6px_6px_0px_black]' : ''}\n      ${error && brutalistShadow ? 'hover:shadow-[6px_6px_0px_red-500]' : ''}\n      active:translate-x-0.5 active:translate-y-0.5\n      ${brutalistShadow ? 'active:shadow-[2px_2px_0px_black]' : ''}\n      ${error && brutalistShadow ? 'active:shadow-[2px_2px_0px_red-500]' : ''}\n      focus-within:outline focus-within:outline-2 focus-within:outline-red-500 focus-within:outline-offset-2\n      ${disabled ? 'hover:bg-gray-300 hover:translate-x-0 hover:translate-y-0 hover:shadow-[4px_4px_0px_black]' : ''}\n    `\n\n    const inputClasses = `\n      absolute opacity-0 w-full h-full cursor-pointer z-10\n      ${disabled ? 'cursor-not-allowed' : ''}\n    `\n\n    const checkmarkClasses = `\n      w-full h-full opacity-0 transform scale-75 transition-all duration-150 ease-in-out\n      ${error ? 'text-red-500' : 'text-black'}\n      ${indeterminate ? 'opacity-0' : ''}\n    `\n\n    const indeterminateLineClasses = `\n      absolute h-[3px] w-[60%] transition-opacity duration-150 ease-in-out\n      ${indeterminate ? 'opacity-100' : 'opacity-0'}\n      ${error ? 'bg-red-500' : 'bg-black'}\n    `\n\n    const labelClasses = `\n      font-medium text-black cursor-pointer transition-colors duration-150 ease-in-out\n      ${labelSizeClasses[size]}\n      ${disabled ? 'cursor-not-allowed text-gray-500' : 'hover:text-gray-700'}\n    `\n\n    return (\n      <div className={containerClasses}>\n        <div className=\"relative inline-block leading-[0]\">\n          <input\n            ref={checkboxRef as React.Ref<HTMLInputElement>}\n            type=\"checkbox\"\n            id={checkboxId}\n            className={`${inputClasses} checked:~[&+div>svg]:opacity-100 checked:~[&+div>svg]:scale-100`}\n            disabled={disabled}\n            aria-invalid={error}\n            {...props}\n          />\n          <div className={checkboxClasses}>\n            <svg \n              className={checkmarkClasses}\n              viewBox=\"0 0 24 24\" \n              fill=\"none\"\n              aria-hidden=\"true\"\n            >\n              <path \n                d=\"M5 13L9 17L19 7\" \n                stroke=\"currentColor\" \n                strokeWidth=\"4\" \n                strokeLinecap=\"square\" \n                strokeLinejoin=\"miter\"\n              />\n            </svg>\n            <div className={indeterminateLineClasses} />\n          </div>\n        </div>\n        {label && (\n          <label \n            htmlFor={checkboxId} \n            className={labelClasses}\n            style={{\n              fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\"\n            }}\n          >\n            {label}\n          </label>\n        )}\n        \n        <style>\n          {`\n            input:checked + div svg {\n              opacity: 1;\n              transform: scale(1);\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n)\n\nCheckbox.displayName = 'Checkbox'","import React, { useState, forwardRef, ImgHTMLAttributes } from 'react'\n\nexport interface AvatarProps extends Omit<ImgHTMLAttributes<HTMLImageElement>, 'size' | 'children'> {\n  /** Image source URL */\n  src?: string\n  /** Alt text for the image */\n  alt?: string\n  /** Initials to display when no image */\n  initials?: string\n  /** Icon to display as fallback */\n  icon?: React.ReactNode\n  /** Avatar size */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  /** Status indicator */\n  status?: 'online' | 'offline' | 'busy' | 'away'\n  /** Additional CSS classes */\n  className?: string\n  /** Custom click handler */\n  onClick?: () => void\n  /** Whether the avatar is clickable */\n  clickable?: boolean\n}\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>(\n  (\n    {\n      src,\n      alt,\n      initials,\n      icon,\n      size = 'md',\n      status,\n      className = '',\n      onClick,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) => {\n    const [imageError, setImageError] = useState(false)\n    const [imageLoaded, setImageLoaded] = useState(false)\n\n    const handleImageError = () => {\n      setImageError(true)\n    }\n\n    const handleImageLoad = () => {\n      setImageLoaded(true)\n      setImageError(false)\n    }\n\n    const hasImage = src && !imageError\n    const hasInitials = initials && initials.length > 0\n    const hasIcon = icon\n\n    // Determine what to display based on available data and fallback order\n    const showImage = hasImage\n    const showInitials = !hasImage && hasInitials\n    const showIcon = !hasImage && !hasInitials && hasIcon\n\n    // Get initials (first 2 characters max)\n    const displayInitials = initials ? initials.slice(0, 2).toUpperCase() : ''\n\n    // Default icon if no image, initials, or custom icon\n    const defaultIcon = (\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        className=\"w-full h-full\"\n      >\n        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n      </svg>\n    )\n\n    const isClickable = clickable || !!onClick\n\n    const sizeClasses = {\n      xs: 'w-6 h-6',\n      sm: 'w-8 h-8',\n      md: 'w-10 h-10',\n      lg: 'w-12 h-12',\n      xl: 'w-16 h-16'\n    }\n\n    const textSizeClasses = {\n      xs: 'text-xs',\n      sm: 'text-sm',\n      md: 'text-base',\n      lg: 'text-lg',\n      xl: 'text-xl'\n    }\n\n    const statusSizeClasses = {\n      xs: 'w-1.5 h-1.5',\n      sm: 'w-2 h-2',\n      md: 'w-2.5 h-2.5',\n      lg: 'w-3 h-3',\n      xl: 'w-4 h-4'\n    }\n\n    const statusColorClasses = {\n      online: 'bg-green-500',\n      offline: 'bg-gray-400',\n      busy: 'bg-red-500',\n      away: 'bg-yellow-500'\n    }\n\n    const containerClasses = `\n      relative inline-block\n      ${isClickable ? 'cursor-pointer' : ''}\n      ${className}\n    `\n\n    const avatarClasses = `\n      ${sizeClasses[size]}\n      bg-gray-100 border-[3px] border-solid border-black\n      rounded-none shadow-[4px_4px_0px_black]\n      flex items-center justify-center\n      overflow-hidden text-black font-bold\n      transition-all duration-150 ease-in-out\n      ${isClickable ? 'hover:shadow-[6px_6px_0px_black] hover:-translate-x-0.5 hover:-translate-y-0.5' : ''}\n      ${isClickable ? 'active:shadow-[2px_2px_0px_black] active:translate-x-0.5 active:translate-y-0.5' : ''}\n      ${isClickable ? 'focus:outline focus:outline-2 focus:outline-red-500 focus:outline-offset-2' : ''}\n    `\n\n    const statusClasses = `\n      absolute -bottom-0.5 -right-0.5 \n      ${statusSizeClasses[size]}\n      ${statusColorClasses[status!]}\n      border-2 border-white rounded-full\n      shadow-[2px_2px_0px_black]\n    `\n\n    return (\n      <div\n        ref={ref}\n        className={containerClasses}\n        onClick={isClickable ? onClick : undefined}\n        role={isClickable ? 'button' : undefined}\n        tabIndex={isClickable ? 0 : undefined}\n        onKeyDown={\n          isClickable\n            ? (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault()\n                  onClick?.()\n                }\n              }\n            : undefined\n        }\n        aria-label={alt || `Avatar${initials ? ` for ${initials}` : ''}`}\n      >\n        <div className={avatarClasses}>\n          {showImage && (\n            <img\n              src={src}\n              alt={alt}\n              className={`w-full h-full object-cover ${imageLoaded ? 'opacity-100' : 'opacity-0'} transition-opacity duration-200`}\n              onError={handleImageError}\n              onLoad={handleImageLoad}\n              {...props}\n            />\n          )}\n          \n          {showInitials && (\n            <span \n              className={`${textSizeClasses[size]} font-bold uppercase`}\n              style={{\n                fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\"\n              }}\n              aria-label={`Initials: ${displayInitials}`}\n            >\n              {displayInitials}\n            </span>\n          )}\n          \n          {showIcon && (\n            <span \n              className=\"w-3/5 h-3/5 flex items-center justify-center text-gray-600\" \n              aria-label=\"Avatar icon\"\n            >\n              {icon}\n            </span>\n          )}\n          \n          {!showImage && !showInitials && !showIcon && (\n            <span \n              className=\"w-3/5 h-3/5 flex items-center justify-center text-gray-600\" \n              aria-label=\"Default avatar\"\n            >\n              {defaultIcon}\n            </span>\n          )}\n        </div>\n        \n        {status && (\n          <div\n            className={statusClasses}\n            aria-label={`Status: ${status}`}\n            role=\"img\"\n          />\n        )}\n      </div>\n    )\n  }\n)\n\nAvatar.displayName = 'Avatar'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface ProgressProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  /** Progress value (0-max for determinate, undefined for indeterminate) */\n  value?: number\n  /** Maximum value */\n  max?: number\n  /** Progress type */\n  type?: 'linear' | 'circular'\n  /** Progress variant */\n  variant?: 'default' | 'striped' | 'animated'\n  /** Progress size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Whether to show the value label */\n  showLabel?: boolean\n  /** Custom label text (overrides default percentage) */\n  label?: string\n  /** Whether progress is indeterminate */\n  indeterminate?: boolean\n  /** Progress bar color */\n  color?: 'accent' | 'success' | 'warning' | 'error' | 'info'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  (\n    {\n      value,\n      max = 100,\n      type = 'linear',\n      variant = 'default', // eslint-disable-line @typescript-eslint/no-unused-vars\n      size = 'md',\n      showLabel = false,\n      label,\n      indeterminate = false,\n      color = 'accent',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Calculate progress percentage\n    const progressValue = indeterminate ? undefined : Math.min(Math.max((value ?? 0) / max * 100, 0), 100)\n    const isCircular = type === 'circular'\n    \n    // Calculate label text\n    const labelText = label || (progressValue !== undefined ? `${Math.round(progressValue)}%` : '')\n    \n    // Squared circular progress calculations\n    const boxSize = isCircular ? (size === 'sm' ? 40 : size === 'lg' ? 80 : 60) : 0\n    const pathLength = isCircular ? boxSize * 4 - 16 : 0 // Perimeter minus corners\n    const dashOffset = isCircular && progressValue !== undefined \n      ? pathLength - (progressValue / 100) * pathLength \n      : 0\n\n    // Accessibility props\n    const progressRole = 'progressbar'\n    const ariaValueNow = indeterminate ? undefined : value ?? 0\n    const ariaValueMin = 0\n    const ariaValueMax = max\n    const ariaLabel = label || (indeterminate ? 'Loading' : `${Math.round(progressValue ?? 0)} percent complete`)\n\n    // Base classes\n    const baseClasses = clsx(\n      'relative',\n      'font-mono font-bold text-black',\n      className\n    )\n\n    // Color variants\n    const colorClasses = {\n      accent: 'bg-yellow-400 border-yellow-400',\n      success: 'bg-green-400 border-green-400',\n      warning: 'bg-orange-400 border-orange-400',\n      error: 'bg-red-400 border-red-400',\n      info: 'bg-blue-400 border-blue-400'\n    }\n\n    const trackColorClasses = {\n      accent: 'bg-yellow-100 border-yellow-400',\n      success: 'bg-green-100 border-green-400',\n      warning: 'bg-orange-100 border-orange-400',\n      error: 'bg-red-100 border-red-400',\n      info: 'bg-blue-100 border-blue-400'\n    }\n\n    if (isCircular) {\n      const strokeWidth = size === 'sm' ? 3 : size === 'lg' ? 6 : 4\n      const padding = strokeWidth + 2\n      const svgSize = boxSize + padding * 2\n      const cornerSize = 4\n\n      const circularClasses = clsx(\n        baseClasses,\n        'inline-flex items-center justify-center'\n      )\n\n      const strokeColorClasses = {\n        accent: 'stroke-yellow-400',\n        success: 'stroke-green-400',\n        warning: 'stroke-orange-400',\n        error: 'stroke-red-400',\n        info: 'stroke-blue-400'\n      }\n\n      const trackStrokeClasses = {\n        accent: 'stroke-yellow-200',\n        success: 'stroke-green-200',\n        warning: 'stroke-orange-200',\n        error: 'stroke-red-200',\n        info: 'stroke-blue-200'\n      }\n\n      return (\n        <div\n          ref={ref}\n          className={circularClasses}\n          role={progressRole}\n          aria-valuenow={ariaValueNow}\n          aria-valuemin={ariaValueMin}\n          aria-valuemax={ariaValueMax}\n          aria-label={ariaLabel}\n          {...props}\n        >\n          <div className=\"relative flex items-center justify-center\">\n            <svg\n              className=\"transform rotate-0\"\n              width={svgSize}\n              height={svgSize}\n              viewBox={`0 0 ${svgSize} ${svgSize}`}\n              style={{\n                fontFamily: 'JetBrains Mono, monospace',\n                fontWeight: 'bold'\n              }}\n            >\n              {/* Background square track */}\n              <rect\n                className={clsx('fill-white', trackStrokeClasses[color])}\n                x={padding}\n                y={padding}\n                width={boxSize}\n                height={boxSize}\n                rx={cornerSize}\n                ry={cornerSize}\n                fill=\"none\"\n                strokeWidth={strokeWidth}\n              />\n              {/* Progress square */}\n              <rect\n                className={clsx('fill-none transition-all duration-300', strokeColorClasses[color])}\n                x={padding}\n                y={padding}\n                width={boxSize}\n                height={boxSize}\n                rx={cornerSize}\n                ry={cornerSize}\n                fill=\"none\"\n                strokeWidth={strokeWidth}\n                style={{\n                  strokeDasharray: pathLength,\n                  strokeDashoffset: dashOffset,\n                }}\n                strokeLinecap=\"square\"\n                transform={`rotate(-90 ${svgSize / 2} ${svgSize / 2})`}\n              />\n            </svg>\n            {showLabel && (\n              <div \n                className={clsx(\n                  'absolute text-center font-bold text-black leading-none',\n                  size === 'sm' ? 'text-xs' : size === 'lg' ? 'text-base' : 'text-sm'\n                )}\n                style={{\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              >\n                {labelText}\n              </div>\n            )}\n          </div>\n        </div>\n      )\n    }\n\n    // Linear progress\n    const linearClasses = clsx(\n      baseClasses,\n      'w-full',\n      showLabel && 'mb-6'\n    )\n\n    const sizeClasses = {\n      sm: 'h-2',\n      md: 'h-3',\n      lg: 'h-4'\n    }\n\n    const trackClasses = clsx(\n      'relative overflow-hidden border-2 border-black',\n      'shadow-[inset_2px_2px_0px_rgba(0,0,0,0.2),3px_3px_0px_black]',\n      'transform -translate-y-px',\n      sizeClasses[size],\n      trackColorClasses[color]\n    )\n\n    const barClasses = clsx(\n      'h-full relative transition-all duration-300',\n      'shadow-[inset_-2px_-2px_0px_rgba(0,0,0,0.2)]',\n      'after:absolute after:top-0 after:right-0 after:w-1 after:h-full after:bg-black',\n      colorClasses[color],\n      indeterminate && 'animate-pulse'\n    )\n\n    return (\n      <div\n        ref={ref}\n        className={linearClasses}\n        role={progressRole}\n        aria-valuenow={ariaValueNow}\n        aria-valuemin={ariaValueMin}\n        aria-valuemax={ariaValueMax}\n        aria-label={ariaLabel}\n        {...props}\n      >\n        <div className={trackClasses}>\n          <div\n            className={barClasses}\n            style={{\n              width: indeterminate ? '30%' : `${progressValue}%`,\n              fontFamily: 'JetBrains Mono, monospace'\n            }}\n            aria-hidden=\"true\"\n          />\n        </div>\n        {showLabel && (\n          <div \n            className=\"mt-2 text-sm font-bold text-center text-black\"\n            style={{\n              fontFamily: 'JetBrains Mono, monospace'\n            }}\n          >\n            {labelText}\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nProgress.displayName = 'Progress'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface SpinnerProps extends Omit<HTMLAttributes<HTMLDivElement>, 'children'> {\n  /** Size of the spinner */\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  /** Color variant */\n  color?: 'default' | 'accent' | 'success' | 'warning' | 'error' | 'info'\n  /** Animation variant */\n  variant?: 'dots' | 'bars' | 'square' | 'glitch'\n  /** Speed of animation */\n  speed?: 'slow' | 'normal' | 'fast'\n  /** Label for accessibility */\n  label?: string\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>(\n  (\n    {\n      size = 'md',\n      color = 'default',\n      variant = 'dots',\n      speed = 'normal',\n      label = 'Loading',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    // Size classes\n    const sizeClasses = {\n      sm: {\n        container: 'w-4 h-4',\n        dot: 'w-1 h-1',\n        bar: 'w-0.5 h-2',\n        square: 'w-4 h-4',\n        glitch: 'w-4 h-4'\n      },\n      md: {\n        container: 'w-6 h-6',\n        dot: 'w-1.5 h-1.5',\n        bar: 'w-0.5 h-3',\n        square: 'w-6 h-6',\n        glitch: 'w-6 h-6'\n      },\n      lg: {\n        container: 'w-8 h-8',\n        dot: 'w-2 h-2',\n        bar: 'w-1 h-4',\n        square: 'w-8 h-8',\n        glitch: 'w-8 h-8'\n      },\n      xl: {\n        container: 'w-12 h-12',\n        dot: 'w-3 h-3',\n        bar: 'w-1.5 h-6',\n        square: 'w-12 h-12',\n        glitch: 'w-12 h-12'\n      }\n    }\n\n    // Color classes\n    const colorClasses = {\n      default: 'bg-black border-black',\n      accent: 'bg-yellow-400 border-yellow-400',\n      success: 'bg-green-400 border-green-400',\n      warning: 'bg-orange-400 border-orange-400',\n      error: 'bg-red-400 border-red-400',\n      info: 'bg-blue-400 border-blue-400'\n    }\n\n    // Animation speed classes\n    const speedClasses = {\n      slow: 'duration-2000',\n      normal: 'duration-1000',\n      fast: 'duration-500'\n    }\n\n    const renderSpinner = () => {\n      const baseClasses = clsx(\n        'border-2 border-black',\n        colorClasses[color],\n        speedClasses[speed]\n      )\n\n      switch (variant) {\n        case 'dots':\n          return (\n            <>\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].dot,\n                  'animate-pulse'\n                )}\n                style={{\n                  animationDelay: '0ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].dot,\n                  'animate-pulse'\n                )}\n                style={{\n                  animationDelay: '200ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].dot,\n                  'animate-pulse'\n                )}\n                style={{\n                  animationDelay: '400ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n            </>\n          )\n        case 'bars':\n          return (\n            <>\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].bar,\n                  'animate-bounce'\n                )}\n                style={{\n                  animationDelay: '0ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].bar,\n                  'animate-bounce'\n                )}\n                style={{\n                  animationDelay: '100ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].bar,\n                  'animate-bounce'\n                )}\n                style={{\n                  animationDelay: '200ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].bar,\n                  'animate-bounce'\n                )}\n                style={{\n                  animationDelay: '300ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n            </>\n          )\n        case 'square':\n          return (\n            <span \n              className={clsx(\n                baseClasses,\n                sizeClasses[size].square,\n                'animate-spin border-4'\n              )}\n              style={{\n                fontFamily: 'JetBrains Mono, monospace'\n              }}\n            />\n          )\n        case 'glitch':\n          return (\n            <>\n              <span \n                className={clsx(\n                  baseClasses,\n                  sizeClasses[size].glitch,\n                  'absolute animate-ping border-4'\n                )}\n                style={{\n                  animationDelay: '0ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  'absolute border-2 bg-transparent',\n                  colorClasses[color].replace('bg-', 'border-'),\n                  sizeClasses[size].glitch,\n                  'animate-pulse'\n                )}\n                style={{\n                  animationDelay: '100ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n              <span \n                className={clsx(\n                  'absolute bg-black border-none scale-75',\n                  sizeClasses[size].glitch,\n                  'animate-ping'\n                )}\n                style={{\n                  animationDelay: '200ms',\n                  fontFamily: 'JetBrains Mono, monospace'\n                }}\n              />\n            </>\n          )\n        default:\n          return null\n      }\n    }\n\n    const containerClasses = clsx(\n      'inline-flex items-center justify-center gap-2',\n      variant === 'glitch' && 'relative',\n      variant === 'bars' && sizeClasses[size].container,\n      className\n    )\n\n    return (\n      <div\n        ref={ref}\n        className={containerClasses}\n        role=\"status\"\n        aria-label={label}\n        style={{\n          fontFamily: 'JetBrains Mono, monospace',\n          fontWeight: 'bold'\n        }}\n        {...props}\n      >\n        {renderSpinner()}\n        <span className=\"sr-only\">{label}</span>\n      </div>\n    )\n  }\n)\n\nSpinner.displayName = 'Spinner'","import React from 'react'\nimport { clsx } from 'clsx'\n\nexport interface SeparatorProps {\n  /** Orientation of the separator */\n  orientation?: 'horizontal' | 'vertical'\n  /** Thickness variant */\n  thickness?: 'thin' | 'medium' | 'thick'\n  /** Style variant */\n  variant?: 'solid' | 'dashed' | 'dotted' | 'double'\n  /** Custom CSS class */\n  className?: string\n  /** Additional CSS properties */\n  style?: React.CSSProperties\n  /** Decorative element in the middle (horizontal only) */\n  label?: string | React.ReactNode\n  /** Position of the label */\n  labelPosition?: 'start' | 'center' | 'end'\n  /** ARIA label for accessibility */\n  ariaLabel?: string\n}\n\nexport const Separator: React.FC<SeparatorProps> = ({\n  orientation = 'horizontal',\n  thickness = 'medium',\n  variant = 'solid',\n  className,\n  style,\n  label,\n  labelPosition = 'center',\n  ariaLabel = 'Separator',\n}) => {\n  const isHorizontal = orientation === 'horizontal'\n  \n  // Base classes\n  const baseClasses = clsx(\n    'flex items-center relative text-black',\n    isHorizontal ? 'w-full my-6' : 'h-full mx-6 flex-col',\n    className\n  )\n\n  // Thickness classes\n  const thicknessClasses = {\n    thin: isHorizontal ? 'border-t' : 'border-l',\n    medium: isHorizontal ? 'border-t-2' : 'border-l-2',\n    thick: isHorizontal ? 'border-t-4' : 'border-l-4'\n  }\n\n  // Style classes\n  const styleClasses = {\n    solid: 'border-black',\n    dashed: 'border-black border-dashed',\n    dotted: 'border-black border-dotted',\n    double: 'border-black border-double'\n  }\n\n  // If there's a label and it's horizontal, use different layout\n  if (label && isHorizontal) {\n    const lineClasses = clsx(\n      'flex-1 bg-black',\n      thickness === 'thin' ? 'h-px' : thickness === 'thick' ? 'h-1' : 'h-0.5'\n    )\n\n    // Special handling for different line styles\n    const getLineStyle = () => {\n      switch (variant) {\n        case 'dashed':\n          return {\n            background: 'repeating-linear-gradient(to right, black 0, black 8px, transparent 8px, transparent 16px)',\n            backgroundSize: '16px 100%',\n            backgroundColor: 'transparent'\n          }\n        case 'dotted':\n          return {\n            background: 'repeating-linear-gradient(to right, black 0, black 4px, transparent 4px, transparent 8px)',\n            backgroundSize: '8px 100%',\n            backgroundColor: 'transparent'\n          }\n        case 'double':\n          return {\n            backgroundColor: 'transparent',\n            borderTop: '2px solid black',\n            borderBottom: '2px solid black',\n            height: '6px'\n          }\n        default:\n          return {}\n      }\n    }\n\n    const labelClasses = clsx(\n      'flex-shrink-0 px-2 font-mono text-sm font-bold uppercase tracking-wide',\n      'text-black'\n    )\n\n    return (\n      <div\n        className={clsx(baseClasses, 'gap-4 border-none')}\n        style={{\n          ...style,\n          fontFamily: 'JetBrains Mono, monospace',\n          fontWeight: 'bold'\n        }}\n        role=\"separator\"\n        aria-orientation={orientation}\n        aria-label={ariaLabel}\n      >\n        {labelPosition !== 'start' && (\n          <div className={lineClasses} style={getLineStyle()} />\n        )}\n        <div className={labelClasses}>\n          {typeof label === 'string' ? <span>{label}</span> : label}\n        </div>\n        {labelPosition !== 'end' && (\n          <div className={lineClasses} style={getLineStyle()} />\n        )}\n      </div>\n    )\n  }\n\n  // Simple separator without label\n  return (\n    <div\n      className={clsx(\n        baseClasses,\n        thicknessClasses[thickness],\n        styleClasses[variant]\n      )}\n      style={{\n        ...style,\n        fontFamily: 'JetBrains Mono, monospace',\n        fontWeight: 'bold'\n      }}\n      role=\"separator\"\n      aria-orientation={orientation}\n      aria-label={ariaLabel}\n    />\n  )\n}\n\nSeparator.displayName = 'Separator'","import React, { forwardRef, HTMLAttributes } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface SkeletonProps extends HTMLAttributes<HTMLDivElement> {\n  /** Shape of the skeleton */\n  shape?: 'text' | 'circular' | 'rectangular'\n  /** Animation type */\n  animation?: 'pulse' | 'wave' | 'none'\n  /** Width of the skeleton (for rectangular and circular) */\n  width?: number | string\n  /** Height of the skeleton (for rectangular and circular) */\n  height?: number | string\n  /** Number of text lines (only for text shape) */\n  lines?: 1 | 2 | 3 | 4 | 5\n  /** Variant style */\n  variant?: 'default' | 'rounded'\n  /** Additional CSS classes */\n  className?: string\n}\n\nexport const Skeleton = forwardRef<HTMLDivElement, SkeletonProps>(\n  (\n    {\n      shape = 'text',\n      animation = 'pulse',\n      width,\n      height,\n      lines = 1,\n      variant = 'default',\n      className,\n      style,\n      ...props\n    },\n    ref\n  ) => {\n    const isText = shape === 'text'\n    const isCircular = shape === 'circular'\n\n    // Generate styles for width and height\n    const dimensionStyles: React.CSSProperties = {\n      ...style,\n      ...(width && { width: typeof width === 'number' ? `${width}px` : width }),\n      ...(height && { height: typeof height === 'number' ? `${height}px` : height }),\n      fontFamily: 'JetBrains Mono, monospace',\n      fontWeight: 'bold'\n    }\n\n    // For circular, use width as diameter if height not specified\n    if (isCircular && width && !height) {\n      dimensionStyles.height = dimensionStyles.width\n    }\n\n    // Base classes\n    const baseClasses = clsx(\n      'bg-gray-200 border border-black block relative overflow-hidden',\n      // Shape classes\n      isText && 'h-5 leading-normal',\n      isCircular && 'rounded-full min-w-10 min-h-10',\n      shape === 'rectangular' && 'min-w-50 min-h-30',\n      // Variant classes\n      variant === 'rounded' && !isCircular && 'rounded',\n      // Animation classes\n      animation === 'pulse' && 'animate-pulse',\n      animation === 'wave' && 'bg-gradient-to-r from-gray-200 via-gray-100 to-gray-200 bg-[length:200%_100%] animate-[wave_1.6s_linear_infinite]',\n      className\n    )\n\n    // For text skeleton with multiple lines\n    if (isText && lines > 1) {\n      const textLines = Array.from({ length: lines }, (_, index) => {\n        const isLastLine = index === lines - 1\n        const lineWidth = isLastLine ? '75%' : '100%'\n        \n        return (\n          <div\n            key={index}\n            className={clsx(\n              'bg-gray-200 border border-black block relative overflow-hidden h-5 leading-normal',\n              animation === 'pulse' && 'animate-pulse',\n              animation === 'wave' && 'bg-gradient-to-r from-gray-200 via-gray-100 to-gray-200 bg-[length:200%_100%] animate-[wave_1.6s_linear_infinite]',\n              variant === 'rounded' && 'rounded'\n            )}\n            style={{ \n              width: lineWidth,\n              marginBottom: index < lines - 1 ? '8px' : 0,\n              fontFamily: 'JetBrains Mono, monospace',\n              fontWeight: 'bold'\n            }}\n            aria-hidden=\"true\"\n          />\n        )\n      })\n\n      return (\n        <div\n          ref={ref}\n          className=\"flex flex-col w-full\"\n          role=\"status\"\n          aria-label=\"Loading content\"\n          style={{\n            fontFamily: 'JetBrains Mono, monospace',\n            fontWeight: 'bold'\n          }}\n          {...props}\n        >\n          {textLines}\n        </div>\n      )\n    }\n\n    // Single skeleton element\n    return (\n      <div\n        ref={ref}\n        className={baseClasses}\n        style={dimensionStyles}\n        role=\"status\"\n        aria-label=\"Loading content\"\n        aria-hidden=\"true\"\n        {...props}\n      />\n    )\n  }\n)\n\nSkeleton.displayName = 'Skeleton'"],"names":["r","f","n","o","clsx","Button","forwardRef","children","className","variant","size","fullWidth","loading","leftIcon","rightIcon","brutalistShadow","glitch","disabled","props","ref","jsxs","styles","jsx","Input","readOnly","type","inputElement","InputOTP","length","value","onChange","onComplete","autoFocus","placeholder","otp","setOtp","useState","arr","inputRefs","useRef","useEffect","focusInput","index","_a","_b","handleChange","val","newOtp","otpValue","handleKeyDown","e","handlePaste","pastedData","char","i","lastFilledIndex","_","el","Textarea","autoResize","showCharacterCount","maxCharacters","minRows","maxRows","width","minWidth","maxWidth","defaultValue","internalValue","setInternalValue","textareaRef","isControlled","currentValue","charCount","setRefs","useCallback","element","adjustHeight","textarea","scrollHeight","minHeight","maxHeight","handleResize","newValue","isOverLimit","getWidthValue","wrapperStyle","isOptionGroup","option","CustomSelect","options","onBlur","onFocus","name","id","isOpen","setIsOpen","selectedValue","setSelectedValue","focusedIndex","setFocusedIndex","dropdownRef","triggerRef","useImperativeHandle","flatOptions","opt","handleClickOutside","event","handleToggle","handleOptionSelect","optionValue","prev","selectedOption","displayValue","groupIndex","flatIndex","fo","Select","customArrow","useCustomDropdown","onValueChange","processedOptions","React","child","label","groupLabel","groupOptions","optionChild","syntheticEvent","selectElement","Checkbox","indeterminate","error","internalRef","checkboxRef","checkbox","checkboxId","RadioGroupContext","createContext","RadioGroup","controlledValue","direction","uncontrolledValue","setUncontrolledValue","Radio","propSize","propDisabled","propError","propShadow","context","useContext","groupValue","groupDisabled","groupError","groupSize","groupShadow","isChecked","radioId","Switch","labelPosition","controlledChecked","defaultChecked","onCheckedChange","internalChecked","setInternalChecked","newChecked","switchId","isDisabled","switchElement","labelElement","Toggle","controlledPressed","defaultPressed","onPressedChange","onClick","asChild","internalPressed","setInternalPressed","isPressed","handleClick","newPressed","HoverCardContext","useHoverCard","HoverCard","defaultOpen","controlledOpen","onOpenChange","openDelay","closeDelay","internalOpen","setInternalOpen","open","openTimerRef","closeTimerRef","setOpen","newOpen","timer","HoverCardTrigger","_ref","triggerProps","HoverCardContent","side","align","sideOffset","alignOffset","collisionBoundary","hideWhenDetached","contentRef","position","setPosition","actualSide","setActualSide","handleMouseEnter","handleMouseLeave","updatePosition","trigger","content","triggerRect","contentRect","viewportWidth","viewportHeight","top","left","finalSide","variantElementMap","Typography","weight","transform","color","family","truncate","Component","TypographyH1","TypographyH2","TypographyH3","TypographyH4","TypographyP","TypographyLead","TypographyLarge","TypographySmall","TypographyMuted","TypographyBlockquote","TypographyCode","TypographyList","CommandContext","useCommand","Command","onSelect","filter","shouldFilter","search","setSearch","selectedIndex","setSelectedIndex","items","setItems","visibleCount","setVisibleCount","currentSearch","handleSearchChange","newSearch","CommandInput","CommandList","CommandEmpty","CommandGroup","heading","CommandItem","keywords","onItemSelect","itemIndex","item","newItems","isSelected","shouldShow","searchLower","keyword","CommandSeparator","Slider","orientation","showValue","marks","min","max","step","propValue","trackClassName","thumbClassName","valueClassName","setValue","sliderRef","percentage","renderMarks","normalizedMarks","mark","markPercentage","markStyle","sliderStyle","Avatar","src","alt","initials","icon","status","clickable","imageError","setImageError","imageLoaded","setImageLoaded","handleImageError","handleImageLoad","hasImage","hasInitials","hasIcon","showImage","showInitials","showIcon","displayInitials","defaultIcon","isClickable","Badge","dismissible","onDismiss","isDot","isDismissible","handleDismiss","dismissIcon","Card","padding","hover","CardHeader","CardBody","CardFooter","CardComponent","Alert","dismissed","setDismissed","isExiting","setIsExiting","AlertIcon","DefaultIcon","AlertContent","AlertTitle","AlertDescription","AlertActions","AlertComponent","AlertStack","gap","Progress","showLabel","progressValue","isCircular","labelText","boxSize","pathLength","dashOffset","progressBarStyles","commonClasses","progressRole","ariaValueNow","ariaValueMin","ariaValueMax","ariaLabel","strokeWidth","svgSize","cornerSize","Skeleton","shape","animation","height","lines","style","isText","dimensionStyles","baseClasses","textLines","lineWidth","Tooltip","showDelay","hideDelay","controlledVisible","onVisibilityChange","showArrow","visible","setVisible","actualPosition","setActualPosition","coords","setCoords","tooltipRef","showTimeoutRef","hideTimeoutRef","isVisible","calculatePosition","tooltipRect","scrollX","scrollY","finalPosition","x","y","spaceTop","spaceBottom","spaceLeft","spaceRight","showTooltip","hideTooltip","handleScroll","triggerElement","childRef","tooltipPortal","createPortal","Fragment","PopoverContext","Popover","closeOnClickOutside","closeOnEscape","initialFocus","popoverRef","previousActiveElementRef","popoverRect","openPopover","closePopover","target","handleFocusManagement","focusableElements","initialElement","handleFocusTrap","firstElement","lastElement","_e","contextValue","popoverPortal","PopoverContent","PopoverHeader","PopoverBody","PopoverFooter","usePopover","Separator","thickness","isHorizontal","CLASSIC_THEME","NEON_THEME","PASTEL_THEME","DARK_THEME","RETRO_THEME","NATURE_THEME","OCEAN_THEME","MONOCHROME_THEME","AVAILABLE_THEMES","DEFAULT_THEME","getThemeById","theme","CSS_VARIABLES_MAP","applyTheme","root","colorKey","colorValue","cssVariable","generateRandomTheme","randomId","randomColors","getRandomColorFromThemes","generateThemeCSS","generateThemeJS","generateCSSVariablesCode","generateReactThemeCode","generateThemeFile","generateAppFile","componentName","componentImport","componentUsage","generateMultiFileCode","componentCode","saveThemeToStorage","loadThemeFromStorage","savedTheme","isValidTheme","themeObj","prop","getCurrentThemeFromDOM","computedStyle","currentColors","resetToDefaultTheme","ThemeContext","ThemeProvider","initialTheme","enablePersistence","currentTheme","setCurrentTheme","randomTheme","useTheme","useThemeColors","useIsThemeActive","themeId","useThemeSwitcher","setTheme","ThemePicker","showCode","onThemeChange","availableThemes","randomizeTheme","resetToDefault","showCodeSection","setShowCodeSection","codeType","setCodeType","copyFeedback","setCopyFeedback","handleThemeSelect","handleRandomize","handleReset","copyToClipboard","text","generateCode","getPreviewColors","colorName","Table","hoverable","TableHead","sticky","TableBody","TableRow","TableHeader","sortable","sortDirection","onSort","TableCell","numeric","TableNamespace","Spinner","speed","renderSpinner","ToastContext","ToastProvider","maxToasts","toasts","setToasts","showToast","toast","newToast","hideToast","hideAllToasts","registerToastStore","toastStore","ToastContainer","ToastItem","title","message","duration","action","getIcon","useToast","store","DialogContext","Dialog","backdrop","closeOnBackdropClick","animate","dialogRef","close","handleBackdropClick","DialogHeader","DialogTitle","DialogBody","DialogFooter","DialogClose","useDialog","DialogNamespace","DrawerContext","useDrawer","Drawer","handleOpenChange","DrawerTrigger","DrawerContent","showOverlay","closeOnOverlayClick","handleEscape","originalStyle","activeElement","drawerContent","focusableElement","DrawerHeader","DrawerTitle","DrawerDescription","DrawerBody","DrawerFooter","DrawerClose","DrawerWithSubComponents","DropdownContext","Dropdown","offset","closeOnItemClick","menuContent","DropdownMenu","dropdownRect","main","alignment","toggleDropdown","closeDropdown","rect","DropdownItem","destructive","shortcut","DropdownSeparator","DropdownLabel","useDropdown","TabsContext","Tabs","activeTab","setActiveTab","TabsList","TabsTrigger","isActive","TabsContent","forceMount","useTabs","TabsNamespace","Container","centered","Stack","justify","wrap","Breadcrumb","separator","isLast","BreadcrumbItem","isCurrentPage","BreadcrumbLink","BreadcrumbPage","SidebarContext","Sidebar","collapsible","collapsed","_onCollapsedChange","SidebarHeader","SidebarContent","SidebarFooter","SidebarGroup","SidebarGroupLabel","SidebarGroupContent","SidebarMenu","SidebarMenuItem","SidebarMenuButton","useSidebar","Navigation","vertical","NavigationList","NavigationItem","NavigationLink","href","NavigationSeparator","TableOfContents","showTitle","TableOfContentsList","TableOfContentsItem","level","TableOfContentsLink","AccordionContext","AccordionItemContext","Accordion","handleValueChange","AccordionItem","itemDisabled","accordionValue","accordionDisabled","baseId","useId","triggerId","contentId","toggle","v","AccordionTrigger","hideIcon","itemContext","accordionContext","DefaultChevronIcon","AccordionContent","AccordionComponent","ComboboxContext","useCombobox","Combobox","emptyMessage","searchPlaceholder","searchValue","setSearchValue","highlightedIndex","setHighlightedIndex","filteredOptions","ComboboxTrigger","triggerPlaceholder","contextPlaceholder","finalPlaceholder","ComboboxContent","contentSearchPlaceholder","contentEmptyMessage","contextSearchPlaceholder","contextEmptyMessage","finalSearchPlaceholder","finalEmptyMessage","handleUpdate","ComboboxOption","optionIndex","isHighlighted","ComboboxWithSubComponents","BarChart","data","subtitle","showValues","showGrid","animated","showContainer","borderStyle","maxValue","d","config","headerHeight","actualChartHeight","defaultColors","barHeight","LineChart","lineColor","showDots","smooth","minValue","valueRange","pathData","points","point","path","cp1x","cp1y","cp2x","cp2y","dotSize","PieChart","showLabels","total","sum","radius","centerX","centerY","cumulativeAngle","slices","angle","startAngle","endAngle","startAngleRad","endAngleRad","x1","y1","x2","y2","largeArcFlag","labelAngle","labelRadius","labelX","labelY","slice","AreaChart","fillColor","fillOpacity","generateAreaPath","linePath","areaPath","AspectRatio","ratio","objectFit","backgroundColor","paddingBottom","DOTS","usePaginationRange","currentPage","totalPages","siblingCount","boundaryCount","useMemo","leftSiblingIndex","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPages","lastPages","leftItemCount","rightItemCount","rightRange","middleRange","Pagination","showPrevNext","showFirstLast","labels","paginationRange","page","pageNumber","ContextMenuContext","useContextMenu","ContextMenu","onOpen","onClose","ContextMenuTrigger","ContextMenuContent","collisionPadding","avoidCollisions","container","sizeProp","variantProp","rest","contextSize","contextVariant","adjustedPosition","setAdjustedPosition","node","ContextMenuItem","closeOnSelect","checked","dotted","setIsHighlighted","ContextMenuSeparator","ContextMenuLabel","ContextMenuSub","parentContext","hoverTimeoutRef","closeTimeoutRef","handleOpen","handleKeepOpen","handleClose","ContextMenuSubTrigger","ContextMenuSubContent","onMouseEnter","onMouseLeave","elementRef","ContextMenuNamespace","SheetContext","useSheet","Sheet","SheetTrigger","SheetContent","onEscapeKeyDown","onPointerDownOutside","onInteractOutside","onOpenAutoFocus","onCloseAutoFocus","overlayRef","previousActiveElement","firstFocusable","focusEvent","handlePointerDown","overlay","SheetHeader","SheetTitle","SheetDescription","SheetFooter","SheetClose","SheetNamespace","CarouselContext","useCarousel","Carousel","autoPlay","autoPlayInterval","loop","currentIndex","setCurrentIndexState","totalItems","setTotalItems","setCurrentIndex","newIndex","interval","CarouselContent","CarouselControls","CarouselPrevious","CarouselNext","CarouselIndicators","CarouselComponent","ChartContext","useChart","Chart","showBorder","showShadow","aspectRatio","chartStyle","ChartHeader","ChartTitle","ChartSubtitle","ChartContent","ChartLegend","ChartFooter","ChartComponent","shapes","shapesList","sizeClasses","variantClasses","shadowClasses","glitchClasses","widthClasses","loadingClasses","combinedClasses","paddingClasses","interactionClasses","headerClasses","bodyClasses","footerClasses","iconPadding","colorClasses","typeVariantClasses","dismissibleClasses","labelSizeClasses","containerClasses","checkboxClasses","inputClasses","checkmarkClasses","indeterminateLineClasses","labelClasses","textSizeClasses","statusSizeClasses","statusColorClasses","avatarClasses","statusClasses","trackColorClasses","circularClasses","strokeColorClasses","trackStrokeClasses","linearClasses","trackClasses","barClasses","speedClasses","thicknessClasses","styleClasses","lineClasses","getLineStyle"],"mappings":";;;AAAA,SAASA,GAAE,GAAE;AAAC,MAAI,GAAEC,GAAEC,IAAE;AAAG,MAAa,OAAO,KAAjB,YAA8B,OAAO,KAAjB,SAAmB,CAAAA,KAAG;AAAA,WAAoB,OAAO,KAAjB,SAAmB,KAAG,MAAM,QAAQ,CAAC,GAAE;AAAC,QAAIC,IAAE,EAAE;AAAO,SAAI,IAAE,GAAE,IAAEA,GAAE,IAAI,GAAE,CAAC,MAAIF,IAAED,GAAE,EAAE,CAAC,CAAC,OAAKE,MAAIA,KAAG,MAAKA,KAAGD;AAAA,EAAE,MAAM,MAAIA,KAAK,EAAE,GAAEA,CAAC,MAAIC,MAAIA,KAAG,MAAKA,KAAGD;AAAG,SAAOC;AAAC;AAAQ,SAASE,IAAM;AAAC,WAAQ,GAAE,GAAEH,IAAE,GAAEC,IAAE,IAAGC,IAAE,UAAU,QAAOF,IAAEE,GAAEF,IAAI,EAAC,IAAE,UAAUA,CAAC,OAAK,IAAED,GAAE,CAAC,OAAKE,MAAIA,KAAG,MAAKA,KAAG;AAAG,SAAOA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;GCelWG,KAASC;AAAA,EACpB,CACE;AAAA,IACE,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,WAAAC,IAAY;AAAA,IACZ,SAAAC,IAAU;AAAA,IACV,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,iBAAAC,IAAkB;AAAA,IAClB,QAAAC,IAAS;AAAA,IACT,UAAAC;AAAA,IACA,GAAGC;AAAA,EAAA,GAELC,MAGE,gBAAAC;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAD;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAOZ,CAAO;AAAA,QACdY,GAAOX,CAAI;AAAA,QACX;AAAA,UACE,CAACW,GAAO,SAAS,GAAGV;AAAA,UACpB,CAACU,GAAO,OAAO,GAAGT;AAAA,UAClB,CAACS,GAAO,UAAU,GAAGN;AAAA,UACrB,CAACM,GAAO,MAAM,GAAGL;AAAA,UACjB,CAACK,GAAO,QAAQ,GAAGJ,KAAYL;AAAA,QAAA;AAAA,QAEjCJ;AAAA,MAAA;AAAA,MAEF,UAAUS,KAAYL;AAAA,MACtB,aAAWI,IAAST,IAAW;AAAA,MAC9B,GAAGW;AAAA,MAEH,UAAA;AAAA,QAAAN,KAAW,gBAAAU,EAAC,QAAA,EAAK,WAAWD,GAAO,QAAQ;AAAA,QAC3CR,KAAY,gBAAAS,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAO,UAAAR,GAAS;AAAA,QACrD,gBAAAS,EAAC,QAAA,EAAK,WAAWD,GAAO,SAAU,UAAAd,GAAS;AAAA,QAC1CO,KAAa,gBAAAQ,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAO,UAAAP,EAAA,CAAU;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAI/D;AAEAT,GAAO,cAAc;;;;;;;;;;;;;;;;;;;GCjDRkB,KAAQjB;AAAA,EACnB,CACE;AAAA,IACE,WAAAE;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,UAAAG;AAAA,IACA,WAAAC;AAAA,IACA,WAAAH,IAAY;AAAA,IACZ,iBAAAI,IAAkB;AAAA,IAClB,UAAAE;AAAA,IACA,UAAAO;AAAA,IACA,MAAAC,IAAO;AAAA,IACP,GAAGP;AAAA,EAAA,GAELC,MACG;AACH,UAAMO,IACJ,gBAAAJ;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,MAAAM;AAAA,QACA,WAAWrB;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOZ,CAAO;AAAA,UACdY,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,YAAY,GAAGR;AAAA,YACvB,CAACQ,GAAO,aAAa,GAAGP;AAAA,YACxB,CAACO,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,QAAQ,GAAGG;AAAA,YACnB,CAACH,GAAO,UAAU,GAAGN,KAAmB,CAACE,KAAY,CAACO;AAAA,UAAA;AAAA,UAExDhB;AAAA,QAAA;AAAA,QAEF,UAAAS;AAAA,QACA,UAAAO;AAAA,QACC,GAAGN;AAAA,MAAA;AAAA,IAAA;AAIR,WAAIL,KAAYC,IAEZ,gBAAAM;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAWhB;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOZ,CAAO;AAAA,UACdY,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,SAAS,GAAGV;AAAA,YACpB,CAACU,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,QAAQ,GAAGG;AAAA,YACnB,CAACH,GAAO,UAAU,GAAGN,KAAmB,CAACE,KAAY,CAACO;AAAA,UAAA;AAAA,QACxD;AAAA,QAGD,UAAA;AAAA,UAAAX,KACC,gBAAAS,EAAC,UAAK,WAAWlB,EAAKiB,GAAO,MAAMA,GAAO,QAAQ,GAAI,UAAAR,EAAA,CAAS;AAAA,UAEhEa;AAAA,UACAZ,KACC,gBAAAQ,EAAC,QAAA,EAAK,WAAWlB,EAAKiB,GAAO,MAAMA,GAAO,SAAS,GAAI,UAAAP,EAAA,CAAU;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA,IAMlEY;AAAA,EACT;AACF;AAEAH,GAAM,cAAc;;;;;;;;;;;;;GChEPI,KAAWrB;AAAA,EACtB,CACE;AAAA,IACE,QAAAsB,IAAS;AAAA,IACT,OAAAC,IAAQ;AAAA,IACR,UAAAC;AAAA,IACA,YAAAC;AAAA,IACA,SAAAtB,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,UAAAO,IAAW;AAAA,IACX,WAAAe,IAAY;AAAA,IACZ,MAAAP,IAAO;AAAA,IACP,aAAAQ,IAAc;AAAA,IACd,WAAAzB;AAAA,IACA,iBAAAO,IAAkB;AAAA,EAAA,GAEpBI,MACG;AACH,UAAM,CAACe,GAAKC,CAAM,IAAIC,EAAmB,MAAM;AAC7C,YAAMC,IAAMR,EAAM,MAAM,EAAE,EAAE,MAAM,GAAGD,CAAM;AAC3C,aAAO,CAAC,GAAGS,GAAK,GAAG,MAAMT,IAASS,EAAI,MAAM,EAAE,KAAK,EAAE,CAAC;AAAA,IACxD,CAAC,GACKC,IAAYC,EAAoC,EAAE;AAExD,IAAAC,EAAU,MAAM;AACd,YAAMH,IAAMR,EAAM,MAAM,EAAE,EAAE,MAAM,GAAGD,CAAM;AAC3C,MAAAO,EAAO,CAAC,GAAGE,GAAK,GAAG,MAAMT,IAASS,EAAI,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AAAA,IACzD,GAAG,CAACR,GAAOD,CAAM,CAAC;AAElB,UAAMa,IAAa,CAACC,MAAkB;;AACpC,MAAIJ,EAAU,QAAQI,CAAK,OACzBC,IAAAL,EAAU,QAAQI,CAAK,MAAvB,QAAAC,EAA0B,UAC1BC,IAAAN,EAAU,QAAQI,CAAK,MAAvB,QAAAE,EAA0B;AAAA,IAE9B,GAEMC,IAAe,CAACH,GAAeI,MAAgB;AACnD,UAAIrB,MAAS,YAAYqB,KAAO,CAAC,QAAQ,KAAKA,CAAG,EAAG;AAEpD,YAAMC,IAAS,CAAC,GAAGb,CAAG;AACtB,MAAAa,EAAOL,CAAK,IAAII,EAAI,MAAM,EAAE,GAE5BX,EAAOY,CAAM;AACb,YAAMC,IAAWD,EAAO,KAAK,EAAE;AAC/B,MAAAjB,KAAA,QAAAA,EAAWkB,IAGPF,KAAOJ,IAAQd,IAAS,KAC1Ba,EAAWC,IAAQ,CAAC,GAIlBM,EAAS,WAAWpB,KAAU,CAACmB,EAAO,SAAS,EAAE,MACnDhB,KAAA,QAAAA,EAAaiB;AAAA,IAEjB,GAEMC,IAAgB,CAACP,GAAeQ,MAAuC;AAC3E,MAAIA,EAAE,QAAQ,eAAe,CAAChB,EAAIQ,CAAK,KAAKA,IAAQ,KAGzCQ,EAAE,QAAQ,eAAeR,IAAQ,KAF1CQ,EAAE,eAAA,GACFT,EAAWC,IAAQ,CAAC,KAIXQ,EAAE,QAAQ,gBAAgBR,IAAQd,IAAS,MACpDsB,EAAE,eAAA,GACFT,EAAWC,IAAQ,CAAC;AAAA,IAExB,GAEMS,IAAc,CAACD,MAAwC;AAC3D,MAAAA,EAAE,eAAA;AACF,YAAME,IAAaF,EAAE,cAAc,QAAQ,YAAY,EAAE,MAAM,GAAGtB,CAAM;AAExE,UAAIH,MAAS,YAAY,CAAC,QAAQ,KAAK2B,CAAU,EAAG;AAEpD,YAAML,IAAS,CAAC,GAAGb,CAAG;AACtB,MAAAkB,EAAW,MAAM,EAAE,EAAE,QAAQ,CAACC,GAAMC,MAAM;AACxC,QAAIA,IAAI1B,MACNmB,EAAOO,CAAC,IAAID;AAAA,MAEhB,CAAC,GAEDlB,EAAOY,CAAM;AACb,YAAMC,IAAWD,EAAO,KAAK,EAAE;AAC/B,MAAAjB,KAAA,QAAAA,EAAWkB;AAGX,YAAMO,IAAkBR,EAAO,cAAc,CAAAD,MAAOA,MAAQ,EAAE;AAC9D,MAAAL,EAAW,KAAK,IAAIc,IAAkB,GAAG3B,IAAS,CAAC,CAAC,GAGhDoB,EAAS,WAAWpB,KAAU,CAACmB,EAAO,SAAS,EAAE,MACnDhB,KAAA,QAAAA,EAAaiB;AAAA,IAEjB;AAEA,WACE,gBAAA1B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOX,CAAI;AAAA,UACXF;AAAA,QAAA;AAAA,QAGD,UAAA,MAAM,KAAK,EAAE,QAAAoB,EAAA,CAAQ,EAAE,IAAI,CAAC4B,GAAGd,MAC9B,gBAAApB;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,KAAK,CAAAmC,MAAMnB,EAAU,QAAQI,CAAK,IAAIe;AAAA,YACtC,MAAK;AAAA,YACL,WAAWhC,MAAS,WAAW,YAAY;AAAA,YAC3C,SAASA,MAAS,WAAW,SAAS;AAAA,YACtC,WAAW;AAAA,YACX,OAAOS,EAAIQ,CAAK;AAAA,YAChB,UAAU,CAAAQ,MAAKL,EAAaH,GAAOQ,EAAE,OAAO,KAAK;AAAA,YACjD,WAAW,CAAAA,MAAKD,EAAcP,GAAOQ,CAAC;AAAA,YACtC,SAASR,MAAU,IAAIS,IAAc;AAAA,YACrC,SAAS,CAAAD,MAAKA,EAAE,OAAO,OAAA;AAAA,YACvB,aAAAjB;AAAA,YACA,UAAAhB;AAAA,YACA,WAAWe,KAAaU,MAAU;AAAA,YAClC,WAAWtC;AAAA,cACTiB,GAAO;AAAA,cACPA,GAAOZ,CAAO;AAAA,cACdY,GAAOX,CAAI;AAAA,cACX;AAAA,gBACE,CAACW,GAAO,MAAM,GAAGa,EAAIQ,CAAK;AAAA,gBAC1B,CAACrB,GAAO,QAAQ,GAAGJ;AAAA,gBACnB,CAACI,GAAO,UAAU,GAAGN,KAAmB,CAACE;AAAA,cAAA;AAAA,YAC3C;AAAA,UACF;AAAA,UAvBKyB;AAAA,QAAA,CAyBR;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF;AAEAf,GAAS,cAAc;;;;;;;;;;;;;;;;;GC3IV+B,KAAWpD;AAAA,EACtB,CACE;AAAA,IACE,WAAAE;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,YAAAiD,IAAa;AAAA,IACb,oBAAAC,IAAqB;AAAA,IACrB,eAAAC;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,SAAAC,IAAU;AAAA,IACV,WAAApD,IAAY;AAAA,IACZ,iBAAAI,IAAkB;AAAA,IAClB,OAAAiD;AAAA,IACA,UAAAC;AAAA,IACA,UAAAC;AAAA,IACA,UAAAjD;AAAA,IACA,UAAAO;AAAA,IACA,OAAAK;AAAA,IACA,cAAAsC;AAAA,IACA,UAAArC;AAAA,IACA,GAAGZ;AAAA,EAAA,GAELC,MACG;AACH,UAAM,CAACiD,GAAeC,CAAgB,IAAIjC,EAAS+B,KAAgB,EAAE,GAC/DG,IAAc/B,EAAmC,IAAI,GAGrDgC,IAAe1C,MAAU,QACzB2C,IAAeD,IAAe1C,IAAQuC,GACtCK,IAAY,OAAOD,CAAY,EAAE,QAGjCE,IAAUC;AAAA,MACd,CAACC,MAAwC;AACvC,QAAAN,EAAY,UAAUM,GAClBzD,MACE,OAAOA,KAAQ,aACjBA,EAAIyD,CAAO,IAEXzD,EAAI,UAAUyD;AAAA,MAGpB;AAAA,MACA,CAACzD,CAAG;AAAA,IAAA,GAIA0D,IAAeF,EAAY,MAAM;AACrC,YAAMG,IAAWR,EAAY;AAC7B,UAAI,CAACQ,KAAY,CAACnB,EAAY;AAG9B,MAAAmB,EAAS,MAAM,SAAS;AACxB,YAAMC,IAAeD,EAAS,cAGxBE,IAAY,GAAGlB,IAAU,GAAG,OAC5BmB,IAAY,GAAGlB,IAAU,GAAG;AAElC,MAAIgB,KAAgB,SAASC,CAAS,IAAI,MACxCF,EAAS,MAAM,SAASE,GACxBF,EAAS,MAAM,YAAY,YAClBC,KAAgB,SAASE,CAAS,IAAI,MAC/CH,EAAS,MAAM,SAASG,GACxBH,EAAS,MAAM,YAAY,WAE3BA,EAAS,MAAM,SAAS,GAAGC,CAAY,MACvCD,EAAS,MAAM,YAAY;AAAA,IAE/B,GAAG,CAACnB,GAAYG,GAASC,CAAO,CAAC;AAGjC,IAAAvB,EAAU,MAAM;AACd,MAAAqC,EAAA;AAAA,IACF,GAAG,CAACL,GAAcK,CAAY,CAAC,GAG/BrC,EAAU,MAAM;AACd,UAAI,CAACmB,EAAY;AAEjB,YAAMuB,IAAe,MAAML,EAAA;AAC3B,oBAAO,iBAAiB,UAAUK,CAAY,GACvC,MAAM,OAAO,oBAAoB,UAAUA,CAAY;AAAA,IAChE,GAAG,CAACvB,GAAYkB,CAAY,CAAC;AAE7B,UAAMhC,IAAe,CAACK,MAA8C;AAClE,YAAMiC,IAAWjC,EAAE,OAAO;AAG1B,MAAIW,KAAiBsB,EAAS,SAAStB,MAIlCU,KACHF,EAAiBc,CAAQ,GAG3BrD,KAAA,QAAAA,EAAWoB,IAGPS,KACF,WAAW,MAAMkB,EAAA,GAAgB,CAAC;AAAA,IAEtC,GAEMO,IAAcvB,IAAgBY,IAAYZ,IAAgB,IAG1DwB,IAAgB,CAACxD,MAAuC;AAC5D,UAAIA,MAAU;AACd,eAAO,OAAOA,KAAU,WAAW,GAAGA,CAAK,OAAOA;AAAAA,IACpD,GAEMyD,IAAoC;AAAA,MACxC,OAAOD,EAAcrB,CAAK;AAAA,MAC1B,UAAUqB,EAAcpB,CAAQ;AAAA,MAChC,UAAUoB,EAAcnB,CAAQ;AAAA,IAAA;AAGlC,WACE,gBAAA9C;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAWhB;AAAA,UACTiB,GAAO;AAAA,UACP;AAAA,YACE,CAACA,GAAO,SAAS,GAAGV;AAAA,UAAA;AAAA,QACtB;AAAA,QAEF,OAAO2E;AAAA,QAEP,UAAA;AAAA,UAAA,gBAAAhE;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,KAAKoD;AAAA,cACL,WAAWtE;AAAA,gBACTiB,GAAO;AAAA,gBACPA,GAAOZ,CAAO;AAAA,gBACdY,GAAOX,CAAI;AAAA,gBACX;AAAA,kBACE,CAACW,GAAO,QAAQ,GAAGJ;AAAA,kBACnB,CAACI,GAAO,QAAQ,GAAGG;AAAA,kBACnB,CAACH,GAAO,UAAU,GAAGN,KAAmB,CAACE,KAAY,CAACO;AAAA,kBACtD,CAACH,GAAO,UAAU,GAAGsC;AAAA,kBACrB,CAACtC,GAAO,SAAS,GAAG+D;AAAA,gBAAA;AAAA,gBAEtB5E;AAAA,cAAA;AAAA,cAEF,UAAAS;AAAA,cACA,UAAAO;AAAA,cACA,OAAOgD;AAAA,cACP,UAAU3B;AAAA,cACV,MAAOc,IAAuB,SAAVG;AAAA,cACnB,GAAG5C;AAAA,YAAA;AAAA,UAAA;AAAA,UAEL0C,KACC,gBAAAtC;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWlB;AAAA,gBACTiB,GAAO;AAAA,gBACP;AAAA,kBACE,CAACA,GAAO,KAAK,GAAG+D,KAAe3E,MAAY;AAAA,kBAC3C,CAACY,GAAO,OAAO,GAAGZ,MAAY;AAAA,gBAAA;AAAA,cAChC;AAAA,cAGF,UAAA,gBAAAW,EAAC,QAAA,EAAK,WAAWC,GAAO,OACrB,UAAA;AAAA,gBAAAoD;AAAA,gBACAZ,KAAiB,MAAMA,CAAa;AAAA,cAAA,EAAA,CACvC;AAAA,YAAA;AAAA,UAAA;AAAA,QACF;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAH,GAAS,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;AChKvB,SAAS6B,GAAcC,GAAuE;AAC5F,SAAO,aAAaA;AACtB;AAEO,MAAMC,KAAenF;AAAA,EAC1B,CACE;AAAA,IACE,WAAAE;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,SAAAgF,IAAU,CAAA;AAAA,IACV,aAAAzD,IAAc;AAAA,IACd,WAAAtB,IAAY;AAAA,IACZ,iBAAAI,IAAkB;AAAA,IAClB,UAAAE,IAAW;AAAA,IACX,OAAAY;AAAA,IACA,cAAAsC;AAAA,IACA,UAAArC;AAAA,IACA,QAAA6D;AAAA,IACA,SAAAC;AAAA,IACA,MAAAC;AAAA,IACA,IAAAC;AAAA,EAAA,GAEF3E,MACG;AACH,UAAM,CAAC4E,GAAQC,CAAS,IAAI5D,EAAS,EAAK,GACpC,CAAC6D,GAAeC,CAAgB,IAAI9D,EAASP,KAASsC,KAAgB,EAAE,GACxE,CAACgC,GAAcC,CAAe,IAAIhE,EAAS,EAAE,GAC7CiE,IAAc9D,EAAuB,IAAI,GACzC+D,IAAa/D,EAA0B,IAAI;AAEjD,IAAAgE,GAAoBpF,GAAK,MAAMkF,EAAY,SAAU,CAAA,CAAE;AAGvD,UAAMG,IAA8B,CAAA;AACpC,IAAAd,EAAQ,QAAQ,CAAAF,MAAU;AACxB,MAAID,GAAcC,CAAM,IACtBgB,EAAY,KAAK,GAAGhB,EAAO,QAAQ,OAAO,CAAAiB,MAAO,CAACA,EAAI,QAAQ,CAAC,IACrDjB,EAAO,YACjBgB,EAAY,KAAKhB,CAAM;AAAA,IAE3B,CAAC,GAGDhD,EAAU,MAAM;AACd,MAAIX,MAAU,UACZqE,EAAiBrE,CAAK;AAAA,IAE1B,GAAG,CAACA,CAAK,CAAC,GAGVW,EAAU,MAAM;AACd,YAAMkE,IAAqB,CAACC,MAAsB;AAChD,QAAIN,EAAY,WAAW,CAACA,EAAY,QAAQ,SAASM,EAAM,MAAc,MAC3EX,EAAU,EAAK,GACfI,EAAgB,EAAE;AAAA,MAEtB;AAEA,UAAIL;AACF,wBAAS,iBAAiB,aAAaW,CAAkB,GAClD,MAAM,SAAS,oBAAoB,aAAaA,CAAkB;AAAA,IAE7E,GAAG,CAACX,CAAM,CAAC;AAEX,UAAMa,IAAe,MAAM;AACzB,MAAI3F,MAEJ+E,EAAU,CAACD,CAAM,GACjBK,EAAgB,EAAE,GAEbL,IAGHJ,KAAA,QAAAA,MAFAC,KAAA,QAAAA;AAAA,IAIJ,GAEMiB,IAAqB,CAACC,MAAwB;;AAClD,MAAAZ,EAAiBY,CAAW,GAC5Bd,EAAU,EAAK,GACfI,EAAgB,EAAE,GAClBtE,KAAA,QAAAA,EAAWgF,IACXnB,KAAA,QAAAA,MACAhD,IAAA2D,EAAW,YAAX,QAAA3D,EAAoB;AAAA,IACtB,GAEMM,IAAgB,CAAC0D,MAA+B;;AACpD,UAAI,CAAA1F;AAEJ,gBAAQ0F,EAAM,KAAA;AAAA,UACZ,KAAK;AAAA,UACL,KAAK;AACH,YAAAA,EAAM,eAAA,GACFZ,KAAUI,KAAgB,IAC5BU,EAAmBL,EAAYL,CAAY,EAAE,KAAK,IAElDH,EAAU,CAACD,CAAM;AAEnB;AAAA,UACF,KAAK;AACH,YAAAC,EAAU,EAAK,GACfI,EAAgB,EAAE,IAClBzD,IAAA2D,EAAW,YAAX,QAAA3D,EAAoB;AACpB;AAAA,UACF,KAAK;AACH,YAAAgE,EAAM,eAAA,GACDZ,IAIHK;AAAA,cAAgB,OACdW,IAAOP,EAAY,SAAS,IAAIO,IAAO,IAAIA;AAAA,YAAA,KAJ7Cf,EAAU,EAAI,GACdI,EAAgB,CAAC;AAMnB;AAAA,UACF,KAAK;AACH,YAAAO,EAAM,eAAA,GACFZ,KACFK,EAAgB,CAAAW,MAAQA,IAAO,IAAIA,IAAO,IAAIA,CAAI;AAEpD;AAAA,QAAA;AAAA,IAEN,GAGMC,IAAiBR,EAAY,KAAK,CAAAC,MAAOA,EAAI,UAAUR,CAAa,GACpEgB,KAAeD,KAAA,gBAAAA,EAAgB,UAAS/E;AAE9C,WACE,gBAAAb;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAKiF;AAAA,QACL,WAAWjG;AAAA,UACTiB,EAAO;AAAA,UACPA,EAAOZ,CAAO;AAAA,UACdY,EAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,EAAO,SAAS,GAAGV;AAAA,YACpB,CAACU,EAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,EAAO,UAAU,GAAGN,KAAmB,CAACE;AAAA,YACzC,CAACI,EAAO,MAAM,GAAG0E;AAAA,UAAA;AAAA,UAEnBvF;AAAA,QAAA;AAAA,QAIF,UAAA;AAAA,UAAA,gBAAAc;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,MAAAuE;AAAA,cACA,OAAOI;AAAA,YAAA;AAAA,UAAA;AAAA,UAIT,gBAAA7E;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,KAAKkF;AAAA,cACL,MAAK;AAAA,cACL,WAAWjF,EAAO;AAAA,cAClB,SAASuF;AAAA,cACT,WAAW3D;AAAA,cACX,UAAAhC;AAAA,cACA,iBAAc;AAAA,cACd,iBAAe8E;AAAA,cACf,mBAAiBD;AAAA,cACjB,IAAAA;AAAA,cAEA,UAAA;AAAA,gBAAA,gBAAAxE,EAAC,QAAA,EAAK,WAAWlB,EAAKiB,EAAO,OAAO,EAAE,CAACA,EAAO,WAAW,GAAG,CAAC2F,EAAA,CAAgB,GAC1E,UAAAC,EAAA,CACH;AAAA,gBACA,gBAAA3F,EAAC,OAAA,EAAI,WAAWD,EAAO,OACrB,UAAA,gBAAAC;AAAA,kBAAC;AAAA,kBAAA;AAAA,oBACC,OAAM;AAAA,oBACN,QAAO;AAAA,oBACP,SAAQ;AAAA,oBACR,MAAK;AAAA,oBACL,OAAM;AAAA,oBACN,WAAWlB,EAAK,EAAE,CAACiB,EAAO,SAAS,GAAG0E,GAAQ;AAAA,oBAE9C,UAAA,gBAAAzE;AAAA,sBAAC;AAAA,sBAAA;AAAA,wBACC,GAAE;AAAA,wBACF,QAAO;AAAA,wBACP,aAAY;AAAA,wBACZ,eAAc;AAAA,wBACd,gBAAe;AAAA,sBAAA;AAAA,oBAAA;AAAA,kBACjB;AAAA,gBAAA,EACF,CACF;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA;AAAA,UAIDyE,KACC,gBAAAzE,EAAC,OAAA,EAAI,WAAWD,EAAO,UAAU,MAAK,WACnC,UAAAqE,EAAQ,IAAI,CAACF,GAAQ0B,MAAe;AACnC,gBAAI3B,GAAcC,CAAM;AACtB,qBACE,gBAAApE,EAAC,OAAA,EAAgC,WAAWC,EAAO,aACjD,UAAA;AAAA,gBAAA,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,YAAa,YAAO,OAAM;AAAA,gBAChDmE,EAAO,QAAQ,IAAI,CAACiB,MAAQ;AAC3B,wBAAMU,IAAYX,EAAY,UAAU,OAAMY,EAAG,UAAUX,EAAI,KAAK;AACpE,yBACE,gBAAAnF;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBAEC,MAAK;AAAA,sBACL,WAAWlB;AAAA,wBACTiB,EAAO;AAAA,wBACP;AAAA,0BACE,CAACA,EAAO,QAAQ,GAAGoF,EAAI,UAAUR;AAAA,0BACjC,CAAC5E,EAAO,OAAO,GAAG8F,MAAchB;AAAA,0BAChC,CAAC9E,EAAO,QAAQ,GAAGoF,EAAI;AAAA,wBAAA;AAAA,sBACzB;AAAA,sBAEF,SAAS,MAAM,CAACA,EAAI,YAAYI,EAAmBJ,EAAI,KAAK;AAAA,sBAC5D,UAAUA,EAAI;AAAA,sBACd,MAAK;AAAA,sBACL,iBAAeA,EAAI,UAAUR;AAAA,sBAE5B,UAAAQ,EAAI;AAAA,oBAAA;AAAA,oBAfAA,EAAI;AAAA,kBAAA;AAAA,gBAkBf,CAAC;AAAA,cAAA,EAAA,GAxBO,SAASS,CAAU,EAyB7B;AAEG;AACL,oBAAMC,IAAYX,EAAY,UAAU,OAAMY,EAAG,UAAU5B,EAAO,KAAK;AACvE,qBACE,gBAAAlE;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBAEC,MAAK;AAAA,kBACL,WAAWlB;AAAA,oBACTiB,EAAO;AAAA,oBACP;AAAA,sBACE,CAACA,EAAO,QAAQ,GAAGmE,EAAO,UAAUS;AAAA,sBACpC,CAAC5E,EAAO,OAAO,GAAG8F,MAAchB;AAAA,sBAChC,CAAC9E,EAAO,QAAQ,GAAGmE,EAAO;AAAA,oBAAA;AAAA,kBAC5B;AAAA,kBAEF,SAAS,MAAM,CAACA,EAAO,YAAYqB,EAAmBrB,EAAO,KAAK;AAAA,kBAClE,UAAUA,EAAO;AAAA,kBACjB,MAAK;AAAA,kBACL,iBAAeA,EAAO,UAAUS;AAAA,kBAE/B,UAAAT,EAAO;AAAA,gBAAA;AAAA,gBAfHA,EAAO;AAAA,cAAA;AAAA,YAkBlB;AAAA,UACF,CAAC,EAAA,CACH;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAC,GAAa,cAAc;;;;;;;;;;;;;;;;ACjQ3B,SAASF,GAAcC,GAAuE;AAC5F,SAAO,aAAaA;AACtB;AAEO,MAAM6B,KAAS/G;AAAA,EACpB,CACE;AAAA,IACE,WAAAE;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,SAAAgF,IAAU,CAAA;AAAA,IACV,aAAAzD;AAAA,IACA,WAAAtB,IAAY;AAAA,IACZ,iBAAAI,IAAkB;AAAA,IAClB,aAAAuG,IAAc;AAAA,IACd,mBAAAC,IAAoB;AAAA,IACpB,eAAAC;AAAA,IACA,UAAAvG;AAAA,IACA,UAAAV;AAAA,IACA,GAAGW;AAAA,EAAA,GAELC,MACG;AAEH,QAAIoG,GAAmB;AAErB,UAAIE,IAAmB/B;AAEvB,aAAIA,EAAQ,WAAW,KAAKnF,MAC1BkH,IAAmB,CAAA,GACnBC,EAAM,SAAS,QAAQnH,GAAU,CAACoH,MAAU;AAC1C,YAAID,EAAM,eAAeC,CAAK;AAC5B,cAAIA,EAAM,SAAS,UAAU;AAC3B,kBAAM9F,IAAQ8F,EAAM,MAAM,SAAS,IAC7BC,IAAQD,EAAM,MAAM,YAAY;AACtC,YAAI9F,KAAS+F,KACXH,EAAiB,KAAK;AAAA,cACpB,OAAA5F;AAAA,cACA,OAAA+F;AAAA,cACA,UAAUD,EAAM,MAAM;AAAA,YAAA,CACvB;AAAA,UAEL,WAAWA,EAAM,SAAS,YAAY;AACpC,kBAAME,IAAaF,EAAM,MAAM,SAAS,IAClCG,IAA+B,CAAA;AAErC,YAAAJ,EAAM,SAAS,QAAQC,EAAM,MAAM,UAAU,CAACI,MAAgB;AAC5D,kBAAIL,EAAM,eAAeK,CAAW,KAAKA,EAAY,SAAS,UAAU;AACtE,sBAAM7G,IAAQ6G,EAAY,OACpBlG,IAAQX,EAAM,SAAS,IACvB0G,IAAQ1G,EAAM,YAAY;AAChC,gBAAIW,KAAS+F,KACXE,EAAa,KAAK;AAAA,kBAChB,OAAO,OAAOjG,CAAK;AAAA,kBACnB,OAAO,OAAO+F,CAAK;AAAA,kBACnB,UAAU1G,EAAM;AAAA,gBAAA,CACjB;AAAA,cAEL;AAAA,YACF,CAAC,GAEG4G,EAAa,SAAS,KACxBL,EAAiB,KAAK;AAAA,cACpB,OAAOI;AAAA,cACP,SAASC;AAAA,YAAA,CACV;AAAA,UAEL;AAAA;AAAA,MAEJ,CAAC,IAID,gBAAAxG;AAAA,QAACmE;AAAA,QAAA;AAAA,UACC,SAAAhF;AAAA,UACA,MAAAC;AAAA,UACA,SAAS+G;AAAA,UACT,aAAAxF;AAAA,UACA,WAAAtB;AAAA,UACA,iBAAAI;AAAA,UACA,UAAAE;AAAA,UACA,OAAOC,EAAM;AAAA,UACb,cAAcA,EAAM;AAAA,UACpB,UAAUsG,MAAkB,CAAC3F,MAAU;;AAErC,kBAAMmG,IAAiB;AAAA,cACrB,QAAQ,EAAE,OAAAnG,EAAA;AAAA,cACV,eAAe,EAAE,OAAAA,EAAA;AAAA,YAAM;AAEzB,aAAAc,IAAAzB,EAAM,aAAN,QAAAyB,EAAA,KAAAzB,GAAiB8G;AAAA,UACnB;AAAA,UACA,QAAQ9G,EAAM,SAAS,MAAA;;AAAM,oBAAAyB,IAAAzB,EAAM,WAAN,gBAAAyB,EAAA,KAAAzB,GAAe,CAAA;AAAA,cAA6C;AAAA,UACzF,SAASA,EAAM,UAAU,MAAA;;AAAM,oBAAAyB,IAAAzB,EAAM,YAAN,gBAAAyB,EAAA,KAAAzB,GAAgB,CAAA;AAAA,cAA6C;AAAA,UAC5F,WAAAV;AAAA,UACA,MAAMU,EAAM;AAAA,UACZ,IAAIA,EAAM;AAAA,QAAA;AAAA,MAAA;AAAA,IAGhB;AACA,UAAM+G,IACJ,gBAAA7G;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOZ,CAAO;AAAA,UACdY,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,UAAU,GAAGN,KAAmB,CAACE;AAAA,YACzC,CAACI,GAAO,SAAS,GAAGV;AAAA,YACpB,CAACU,GAAO,cAAc,GAAGY,KAAe,CAACf,EAAM,SAAS,CAACA,EAAM;AAAA,UAAA;AAAA,UAEjEV;AAAA,QAAA;AAAA,QAEF,UAAAS;AAAA,QACC,GAAGC;AAAA,QAEH,UAAA;AAAA,UAAAe,KACC,gBAAAX,EAAC,YAAO,OAAM,IAAG,UAAQ,IAAC,QAAM,IAC7B,UAAAW,EAAA,CACH;AAAA,UAED1B,KAEGmF,EAAQ,IAAI,CAACF,GAAQ9C,MACf6C,GAAcC,CAAM,IAEpB,gBAAAlE,EAAC,cAAgC,OAAOkE,EAAO,OAC5C,UAAAA,EAAO,QAAQ,IAAI,CAACiB,MACnB,gBAAAnF;AAAA,YAAC;AAAA,YAAA;AAAA,cAEC,OAAOmF,EAAI;AAAA,cACX,UAAUA,EAAI;AAAA,cAEb,UAAAA,EAAI;AAAA,YAAA;AAAA,YAJAA,EAAI;AAAA,UAAA,CAMZ,KATY,SAAS/D,CAAK,EAU7B,IAIA,gBAAApB;AAAA,YAAC;AAAA,YAAA;AAAA,cAEC,OAAOkE,EAAO;AAAA,cACd,UAAUA,EAAO;AAAA,cAEhB,UAAAA,EAAO;AAAA,YAAA;AAAA,YAJHA,EAAO;AAAA,UAAA,CAQnB;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAIT,WAAI8B,IAEA,gBAAAlG;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAWhB;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOZ,CAAO;AAAA,UACdY,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,SAAS,GAAGV;AAAA,YACpB,CAACU,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,UAAU,GAAGN,KAAmB,CAACE;AAAA,UAAA;AAAA,QAC3C;AAAA,QAGD,UAAA;AAAA,UAAAgH;AAAA,UACD,gBAAA3G,EAAC,OAAA,EAAI,WAAWD,GAAO,OACrB,UAAA,gBAAAC;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAM;AAAA,cACN,QAAO;AAAA,cACP,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,OAAM;AAAA,cAEN,UAAA,gBAAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,GAAE;AAAA,kBACF,QAAO;AAAA,kBACP,aAAY;AAAA,kBACZ,eAAc;AAAA,kBACd,gBAAe;AAAA,gBAAA;AAAA,cAAA;AAAA,YACjB;AAAA,UAAA,EACF,CACF;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA,IAKC2G;AAAA,EACT;AACF;AAEAZ,GAAO,cAAc;;;;;;;;;;;;;;;;;GClNRa,KAAW5H;AAAA,EACtB,CACE;AAAA,IACE,WAAAE;AAAA,IACA,MAAAE,IAAO;AAAA,IACP,OAAAkH;AAAA,IACA,eAAAO,IAAgB;AAAA,IAChB,OAAAC,IAAQ;AAAA,IACR,iBAAArH,IAAkB;AAAA,IAClB,UAAAE;AAAA,IACA,IAAA6E;AAAA,IACA,GAAG5E;AAAA,EAAA,GAELC,MACG;AACH,UAAMkH,IAAc9F,EAAyB,IAAI,GAC3C+F,IAAcnH,KAAOkH;AAG3B,IAAA7F,EAAU,MAAM;AACd,YAAM+F,IAAW,OAAOD,KAAgB,aAAa,OAAOA,EAAY;AACxE,MAAIC,MACFA,EAAS,gBAAgBJ;AAAA,IAE7B,GAAG,CAACA,GAAeG,CAAW,CAAC;AAE/B,UAAME,IAAa1C,KAAM,YAAY,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC;AAE5E,WACE,gBAAA1E;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAWhB;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,KAAK,GAAG+G;AAAA,UAAA;AAAA,UAElB5H;AAAA,QAAA;AAAA,QAGF,UAAA;AAAA,UAAA,gBAAAY,EAAC,OAAA,EAAI,WAAWC,GAAO,iBACrB,UAAA;AAAA,YAAA,gBAAAC;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,KAAKgH;AAAA,gBACL,MAAK;AAAA,gBACL,IAAIE;AAAA,gBACJ,WAAWnH,GAAO;AAAA,gBAClB,UAAAJ;AAAA,gBACA,gBAAcmH;AAAA,gBACb,GAAGlH;AAAA,cAAA;AAAA,YAAA;AAAA,YAEN,gBAAAE;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWhB;AAAA,kBACTiB,GAAO;AAAA,kBACP;AAAA,oBACE,CAACA,GAAO,UAAU,GAAGN;AAAA,oBACrB,CAACM,GAAO,aAAa,GAAG8G;AAAA,kBAAA;AAAA,gBAC1B;AAAA,gBAGF,UAAA;AAAA,kBAAA,gBAAA7G;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,WAAWD,GAAO;AAAA,sBAClB,SAAQ;AAAA,sBACR,MAAK;AAAA,sBACL,eAAY;AAAA,sBAEZ,UAAA,gBAAAC;AAAA,wBAAC;AAAA,wBAAA;AAAA,0BACC,GAAE;AAAA,0BACF,QAAO;AAAA,0BACP,aAAY;AAAA,0BACZ,eAAc;AAAA,0BACd,gBAAe;AAAA,wBAAA;AAAA,sBAAA;AAAA,oBACjB;AAAA,kBAAA;AAAA,kBAEF,gBAAAA,EAAC,OAAA,EAAI,WAAWD,GAAO,kBAAA,CAAmB;AAAA,gBAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UAC5C,GACF;AAAA,UACCuG,uBACE,SAAA,EAAM,SAASY,GAAY,WAAWnH,GAAO,OAC3C,UAAAuG,EAAA,CACH;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAM,GAAS,cAAc;;;;;;;;;;;;;;;;;;;GCnFjBO,KAAoBC,GAAkD,MAAS,GAiBxEC,KAAwC,CAAC;AAAA,EACpD,MAAA9C;AAAA,EACA,OAAO+C;AAAA,EACP,cAAAzE;AAAA,EACA,UAAArC;AAAA,EACA,UAAAvB;AAAA,EACA,WAAAsI,IAAY;AAAA,EACZ,MAAAnI,IAAO;AAAA,EACP,UAAAO,IAAW;AAAA,EACX,OAAAmH,IAAQ;AAAA,EACR,iBAAArH,IAAkB;AAAA,EAClB,WAAAP;AACF,MAAM;AACJ,QAAM,CAACsI,GAAmBC,CAAoB,IAAI3G,EAAS+B,CAAY,GACjEI,IAAeqE,MAAoB,QACnC/G,IAAQ0C,IAAeqE,IAAkBE,GAEzCjG,IAAe,CAACsC,MAAqB;AACzC,IAAKZ,KACHwE,EAAqB5D,CAAQ,GAE/BrD,KAAA,QAAAA,EAAWqD;AAAA,EACb;AAEA,SACE,gBAAA7D;AAAA,IAACmH,GAAkB;AAAA,IAAlB;AAAA,MACC,OAAO;AAAA,QACL,MAAA5C;AAAA,QACA,OAAAhE;AAAA,QACA,UAAUgB;AAAA,QACV,UAAA5B;AAAA,QACA,OAAAmH;AAAA,QACA,MAAA1H;AAAA,QACA,iBAAAK;AAAA,MAAA;AAAA,MAGF,UAAA,gBAAAO;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAWlB;AAAA,YACTiB,GAAO;AAAA,YACPA,GAAOwH,CAAS;AAAA,YAChB;AAAA,cACE,CAACxH,GAAO,QAAQ,GAAGJ;AAAA,cACnB,CAACI,GAAO,KAAK,GAAG+G;AAAA,YAAA;AAAA,YAElB5H;AAAA,UAAA;AAAA,UAEF,MAAK;AAAA,UACL,gBAAc4H;AAAA,UAEb,UAAA7H;AAAA,QAAA;AAAA,MAAA;AAAA,IACH;AAAA,EAAA;AAGN,GAYayI,KAAQ1I;AAAA,EACnB,CACE;AAAA,IACE,WAAAE;AAAA,IACA,OAAAqB;AAAA,IACA,OAAA+F;AAAA,IACA,MAAMqB;AAAA,IACN,UAAUC;AAAA,IACV,OAAOC;AAAA,IACP,iBAAiBC;AAAA,IACjB,IAAAtD;AAAA,IACA,GAAG5E;AAAA,EAAA,GAELC,MACG;AACH,UAAMkI,IAAUC,EAAWb,EAAiB;AAE5C,QAAI,CAACY;AACH,YAAM,IAAI,MAAM,sCAAsC;AAGxD,UAAM;AAAA,MACJ,MAAAxD;AAAA,MACA,OAAO0D;AAAA,MACP,UAAAzH;AAAA,MACA,UAAU0H;AAAA,MACV,OAAOC;AAAA,MACP,MAAMC;AAAA,MACN,iBAAiBC;AAAA,IAAA,IACfN,GAEE3I,IAAOuI,KAAYS,KAAa,MAChCzI,IAAWiI,KAAgBM,GAC3BpB,IAAQe,KAAaM,GACrB1I,IAAkBqI,MAAe,SAAYA,IAAaO,GAC1DC,IAAY/H,MAAU0H,GACtBM,IAAU/D,KAAM,SAASD,CAAI,IAAIhE,CAAK,IAEtCgB,IAAe,MAAM;AACzB,MAAK5B,KACHa,EAASD,CAAK;AAAA,IAElB;AAEA,WACE,gBAAAT;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAWhB;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,KAAK,GAAG+G;AAAA,YAChB,CAAC/G,GAAO,OAAO,GAAGuI;AAAA,UAAA;AAAA,UAEpBpJ;AAAA,QAAA;AAAA,QAGF,UAAA;AAAA,UAAA,gBAAAY,EAAC,OAAA,EAAI,WAAWC,GAAO,cACrB,UAAA;AAAA,YAAA,gBAAAC;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,KAAAH;AAAA,gBACA,MAAK;AAAA,gBACL,IAAI0I;AAAA,gBACJ,MAAAhE;AAAA,gBACA,OAAAhE;AAAA,gBACA,SAAS+H;AAAA,gBACT,UAAU,MAAM/G,EAAA;AAAA,gBAChB,WAAWxB,GAAO;AAAA,gBAClB,UAAAJ;AAAA,gBACA,gBAAcmH;AAAA,gBACb,GAAGlH;AAAA,cAAA;AAAA,YAAA;AAAA,YAEN,gBAAAI;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiB,GAAO;AAAA,kBACP;AAAA,oBACE,CAACA,GAAO,UAAU,GAAGN;AAAA,kBAAA;AAAA,gBACvB;AAAA,gBAGF,UAAA,gBAAAO,EAAC,OAAA,EAAI,WAAWD,GAAO,UAAA,CAAW;AAAA,cAAA;AAAA,YAAA;AAAA,UACpC,GACF;AAAA,UACCuG,uBACE,SAAA,EAAM,SAASiC,GAAS,WAAWxI,GAAO,OACxC,UAAAuG,EAAA,CACH;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAoB,GAAM,cAAc;;;;;;;;;;;;;;;;;;;GChLPc,KAASxJ;AAAA,EACpB,CACE;AAAA,IACE,WAAAE;AAAA,IACA,MAAAE,IAAO;AAAA,IACP,OAAAkH;AAAA,IACA,eAAAmC,IAAgB;AAAA,IAChB,SAAAnJ,IAAU;AAAA,IACV,iBAAAG,IAAkB;AAAA,IAClB,UAAAE;AAAA,IACA,SAAS+I;AAAA,IACT,gBAAAC;AAAA,IACA,UAAAnI;AAAA,IACA,iBAAAoI;AAAA,IACA,IAAApE;AAAA,IACA,GAAG5E;AAAA,EAAA,GAELC,MACG;AAEH,UAAM,CAACgJ,GAAiBC,CAAkB,IAAIhI,EAAS6H,KAAkB,EAAK,GACxE1F,IAAeyF,MAAsB,QACrCJ,IAAYrF,IAAeyF,IAAoBG,GAE/CtH,IAAe8B,EAAY,CAACgC,MAA+C;AAC/E,YAAM0D,IAAa1D,EAAM,OAAO;AAGhC,MAAKpC,KACH6F,EAAmBC,CAAU,GAI/BvI,KAAA,QAAAA,EAAW6E,IACXuD,KAAA,QAAAA,EAAkBG;AAAA,IACpB,GAAG,CAAC9F,GAAczC,GAAUoI,CAAe,CAAC,GAEtCI,IAAWxE,KAAM,UAAU,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC,IAClEyE,IAAatJ,KAAYL,GAEzB4J,IACJ,gBAAApJ,EAAC,OAAA,EAAI,WAAWC,GAAO,eACrB,UAAA;AAAA,MAAA,gBAAAC;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,MAAK;AAAA,UACL,IAAImJ;AAAA,UACJ,WAAWjJ,GAAO;AAAA,UAClB,UAAUkJ;AAAA,UACV,SAASX;AAAA,UACT,UAAU/G;AAAA,UACT,GAAG3B;AAAA,QAAA;AAAA,MAAA;AAAA,MAEN,gBAAAI;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAWlB;AAAA,YACTiB,GAAO;AAAA,YACP;AAAA,cACE,CAACA,GAAO,UAAU,GAAGN;AAAA,cACrB,CAACM,GAAO,OAAO,GAAGuI;AAAA,cAClB,CAACvI,GAAO,OAAO,GAAGT;AAAA,YAAA;AAAA,UACpB;AAAA,UAGF,UAAA,gBAAAU,EAAC,OAAA,EAAI,WAAWD,GAAO,OACpB,UAAAT,KACC,gBAAAU,EAAC,OAAA,EAAI,WAAWD,GAAO,iBAAA,CAAkB,EAAA,CAE7C;AAAA,QAAA;AAAA,MAAA;AAAA,IACF,GACF,GAGIoJ,IAAe7C,KACnB,gBAAAtG,EAAC,SAAA,EAAM,SAASgJ,GAAU,WAAWjJ,GAAO,OACzC,UAAAuG,EAAA,CACH;AAGF,WACE,gBAAAxG;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAWhB;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,QAAQ,GAAGkJ;AAAA,YACnB,CAAClJ,GAAO,SAAS,GAAG0I,MAAkB;AAAA,UAAA;AAAA,UAExCvJ;AAAA,QAAA;AAAA,QAGD,UAAA;AAAA,UAAAuJ,MAAkB,UAAUU;AAAA,UAC5BD;AAAA,UACAT,MAAkB,WAAWU;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGpC;AACF;AAEAX,GAAO,cAAc;;;;;;;;;;;;;GChGRY,KAASpK;AAAA,EACpB,CACE;AAAA,IACE,WAAAE;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,SAASiK;AAAA,IACT,gBAAAC,IAAiB;AAAA,IACjB,iBAAAC;AAAA,IACA,SAAAC;AAAA,IACA,UAAA7J;AAAA,IACA,iBAAAF,IAAkB;AAAA,IAClB,UAAAR;AAAA,IACA,SAAAwK,IAAU;AAAA,IACV,GAAG7J;AAAA,EAAA,GAELC,MACG;AAEH,UAAM,CAAC6J,GAAiBC,CAAkB,IAAI7I,EAASwI,CAAc,GAC/DrG,IAAeoG,MAAsB,QACrCO,IAAY3G,IAAeoG,IAAoBK,GAE/CG,IAAcxG,EAAY,CAACgC,MAA+C;AAC9E,UAAI1F,EAAU;AAEd,YAAMmK,IAAa,CAACF;AAGpB,MAAK3G,KACH0G,EAAmBG,CAAU,GAI/BN,KAAA,QAAAA,EAAUnE,IACVkE,KAAA,QAAAA,EAAkBO;AAAA,IACpB,GAAG,CAAC7G,GAAc2G,GAAWJ,GAASD,GAAiB5J,CAAQ,CAAC;AAIhE,WACE,gBAAAK;AAAA,MAHWyJ,IAAU,SAAS;AAAA,MAG7B;AAAA,QACC,KAAA5J;AAAA,QACA,MAAM4J,IAAU,SAAY;AAAA,QAC5B,MAAK;AAAA,QACL,gBAAcG;AAAA,QACd,cAAYA,IAAY,OAAO;AAAA,QAC/B,WAAW9K;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOZ,CAAO;AAAA,UACdY,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,OAAO,GAAG6J;AAAA,YAClB,CAAC7J,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,UAAU,GAAGN,KAAmB,CAACE;AAAA,UAAA;AAAA,UAE3CT;AAAA,QAAA;AAAA,QAEF,SAAS2K;AAAA,QACT,UAAAlK;AAAA,QACC,GAAGC;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF;AAEAmK,GAAO,cAAc;;;;;;;;;;;;;;;;;;;;;;GC7EfW,KAAmB3D,EAAM,cAIrB,IAAI,GAER4D,KAAe,MAAM;AACzB,QAAMjC,IAAU3B,EAAM,WAAW2D,EAAgB;AACjD,MAAI,CAAChC;AACH,UAAM,IAAI,MAAM,sDAAsD;AAExE,SAAOA;AACT,GAWakC,KAGT,CAAC;AAAA,EACH,UAAAhL;AAAA,EACA,aAAAiL,IAAc;AAAA,EACd,MAAMC;AAAA,EACN,cAAAC;AAAA,EACA,WAAAC,IAAY;AAAA,EACZ,YAAAC,IAAa;AACf,MAAM;AACJ,QAAM,CAACC,GAAcC,CAAe,IAAI1J,EAASoJ,CAAW,GACtDjH,IAAekH,MAAmB,QAClCM,IAAOxH,IAAekH,IAAiBI,GACvCvF,IAAa/D,EAAuB,IAAI,GACxCyJ,IAAezJ,EAAA,GACf0J,IAAgB1J,EAAA,GAEhB2J,IAAU,CAACC,MAAqB;AAEpC,IAAIH,EAAa,WAAS,aAAaA,EAAa,OAAO,GACvDC,EAAc,WAAS,aAAaA,EAAc,OAAO;AAI7D,UAAMG,IAAQ,WAAW,MAAM;AAC7B,MAAK7H,KACHuH,EAAgBK,CAAO,GAEzBT,KAAA,QAAAA,EAAeS;AAAA,IACjB,GAPcA,IAAUR,IAAYC,CAO5B;AAER,IAAIO,IACFH,EAAa,UAAUI,IAEvBH,EAAc,UAAUG;AAAA,EAE5B;AAGA,SAAA5J,EAAU,MACD,MAAM;AACX,IAAIwJ,EAAa,WAAS,aAAaA,EAAa,OAAO,GACvDC,EAAc,WAAS,aAAaA,EAAc,OAAO;AAAA,EAC/D,GACC,CAAA,CAAE,qBAGFZ,GAAiB,UAAjB,EAA0B,OAAO,EAAE,MAAAU,GAAM,SAAAG,GAAS,YAAA5F,EAAA,GACjD,4BAAC,OAAA,EAAI,WAAWjF,GAAO,MACpB,UAAAd,GACH,GACF;AAEJ,GAQM8L,KAAmB/L;AAAA,EACvB,CAAC,EAAE,UAAAC,GAAU,SAAAwK,IAAU,IAAO,WAAAvK,EAAA,GAAa8L,MAAS;AAClD,UAAM,EAAE,SAAAJ,GAAS,YAAA5F,EAAA,IAAegF,GAAA,GAO1BiB,IAAe;AAAA,MACnB,KAAKjG;AAAA,MACL,cAPuB,MAAM4F,EAAQ,EAAI;AAAA,MAQzC,cAPuB,MAAMA,EAAQ,EAAK;AAAA,MAQ1C,SAPkB,MAAMA,EAAQ,EAAI;AAAA,MAQpC,QAPiB,MAAMA,EAAQ,EAAK;AAAA,MAQpC,WAAW9L,EAAKiB,GAAO,SAASb,CAAS;AAAA,IAAA;AAG3C,WAAIuK,KAAWrD,EAAM,eAAenH,CAAQ,IACnCmH,EAAM,aAAanH,GAA6CgM,CAAY,IAInF,gBAAAjL,EAAC,OAAA,EAAK,GAAGiL,GACN,UAAAhM,EAAA,CACH;AAAA,EAEJ;AACF;AAEA8L,GAAiB,cAAc;AAc/B,MAAMG,KAAmBlM;AAAA,EACvB,CAAC;AAAA,IACC,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,MAAAiM,IAAO;AAAA,IACP,OAAAC,IAAQ;AAAA,IACR,YAAAC,IAAa;AAAA,IACb,aAAAC,IAAc;AAAA,IACd,mBAAAC,IAAoB;AAAA,IACpB,kBAAAC,IAAmB;AAAA;AAAA,IACnB,iBAAA/L,IAAkB;AAAA,IAClB,GAAGG;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM,EAAE,MAAA4K,GAAM,YAAAzF,GAAY,SAAA4F,EAAA,IAAYZ,GAAA,GAChCjD,IAAc9F,EAAuB,IAAI,GACzCwK,IAAc5L,KAA2CkH,GACzD,CAAC2E,GAAUC,CAAW,IAAI7K,EAAS,EAAE,KAAK,GAAG,MAAM,GAAG,GACtD,CAAC8K,GAAYC,CAAa,IAAI/K,EAASqK,CAAI,GAG3CW,IAAmB,MAAMlB,EAAQ,EAAI,GACrCmB,IAAmB,MAAMnB,EAAQ,EAAK;AA2F5C,WAxFA1J,EAAU,MAAM;AACd,UAAI,CAACuJ,KAAQ,CAACzF,EAAW,WAAW,CAACyG,EAAW,QAAS;AAEzD,YAAMO,IAAiB,MAAM;AAC3B,cAAMC,IAAUjH,EAAW,SACrBkH,IAAUT,EAAW;AAC3B,YAAI,CAACQ,KAAW,CAACC,EAAS;AAE1B,cAAMC,IAAcF,EAAQ,sBAAA,GACtBG,IAAcF,EAAQ,sBAAA,GACtBG,IAAgB,OAAO,YACvBC,IAAiB,OAAO;AAE9B,YAAIC,IAAM,GACNC,IAAO,GACPC,IAAYtB;AAGhB,gBAAQA,GAAA;AAAA,UACN,KAAK;AACH,YAAAoB,IAAMJ,EAAY,MAAMC,EAAY,SAASf,GAC7CmB,IAAOL,EAAY,OAAOA,EAAY,QAAQ,IAAIC,EAAY,QAAQ;AACtE;AAAA,UACF,KAAK;AACH,YAAAG,IAAMJ,EAAY,MAAMA,EAAY,SAAS,IAAIC,EAAY,SAAS,GACtEI,IAAOL,EAAY,QAAQd;AAC3B;AAAA,UACF,KAAK;AACH,YAAAkB,IAAMJ,EAAY,SAASd,GAC3BmB,IAAOL,EAAY,OAAOA,EAAY,QAAQ,IAAIC,EAAY,QAAQ;AACtE;AAAA,UACF,KAAK;AACH,YAAAG,IAAMJ,EAAY,MAAMA,EAAY,SAAS,IAAIC,EAAY,SAAS,GACtEI,IAAOL,EAAY,OAAOC,EAAY,QAAQf;AAC9C;AAAA,QAAA;AAIJ,QAAIF,MAAS,SAASA,MAAS,WACzBC,MAAU,UACZoB,IAAOL,EAAY,OAAOb,IACjBF,MAAU,UACnBoB,IAAOL,EAAY,QAAQC,EAAY,QAAQd,KAG7CF,MAAU,UACZmB,IAAMJ,EAAY,MAAMb,IACfF,MAAU,UACnBmB,IAAMJ,EAAY,SAASC,EAAY,SAASd,IAKhDC,MAAsB,eAEpBJ,MAAS,YAAYoB,IAAMH,EAAY,SAASE,KAClDC,IAAMJ,EAAY,MAAMC,EAAY,SAASf,GAC7CoB,IAAY,SACHtB,MAAS,SAASoB,IAAM,KACjCA,IAAMJ,EAAY,SAASd,GAC3BoB,IAAY,YACHtB,MAAS,WAAWqB,IAAOJ,EAAY,QAAQC,KACxDG,IAAOL,EAAY,OAAOC,EAAY,QAAQf,GAC9CoB,IAAY,UACHtB,MAAS,UAAUqB,IAAO,MACnCA,IAAOL,EAAY,QAAQd,GAC3BoB,IAAY,UAIdD,IAAO,KAAK,IAAI,GAAG,KAAK,IAAIA,GAAMH,IAAgBD,EAAY,QAAQ,CAAC,CAAC,GACxEG,IAAM,KAAK,IAAI,GAAG,KAAK,IAAIA,GAAKD,IAAiBF,EAAY,SAAS,CAAC,CAAC,IAG1ET,EAAY,EAAE,KAAAY,GAAK,MAAAC,GAAM,GACzBX,EAAcY,CAAS;AAAA,MACzB;AAEA,aAAAT,EAAA,GACA,OAAO,iBAAiB,UAAUA,CAAc,GAChD,OAAO,iBAAiB,UAAUA,GAAgB,EAAI,GAE/C,MAAM;AACX,eAAO,oBAAoB,UAAUA,CAAc,GACnD,OAAO,oBAAoB,UAAUA,GAAgB,EAAI;AAAA,MAC3D;AAAA,IACF,GAAG,CAACvB,GAAMU,GAAMC,GAAOC,GAAYC,GAAaC,GAAmBvG,GAAYyG,CAAU,CAAC,GAErFhB,IAGH,gBAAA3K;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAK2L;AAAA,QACL,WAAW3M;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAO6L,CAAU;AAAA,UACjB;AAAA,YACE,CAAC7L,GAAO,UAAU,GAAGN;AAAA,UAAA;AAAA,UAEvBP;AAAA,QAAA;AAAA,QAEF,OAAO;AAAA,UACL,UAAU;AAAA,UACV,KAAK,GAAGwM,EAAS,GAAG;AAAA,UACpB,MAAM,GAAGA,EAAS,IAAI;AAAA,UACtB,QAAQ;AAAA,QAAA;AAAA,QAEV,cAAcI;AAAA,QACd,cAAcC;AAAA,QACb,GAAGnM;AAAA,QAEJ,UAAA;AAAA,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWD,GAAO,cACpB,UAAAd,GACH;AAAA,4BACC,OAAA,EAAI,WAAWc,GAAO,OAAO,aAAW6L,EAAA,CAAY;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA,IA1BvC;AAAA,EA6BpB;AACF;AAEAV,GAAiB,cAAc;AAG/BjB,GAAU,UAAUc;AACpBd,GAAU,UAAUiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GCzQdwB,KAAoB;AAAA,EACxB,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,GAAG;AAAA,EACH,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,MAAM;AACR,GAEaC,KAAa3N;AAAA,EACxB,CAAC;AAAA,IACC,SAAAG,IAAU;AAAA,IACV,MAAAC;AAAA,IACA,QAAAwN;AAAA,IACA,OAAAxB;AAAA,IACA,WAAAyB;AAAA,IACA,OAAAC,IAAQ;AAAA,IACR,QAAAC;AAAA,IACA,UAAAC,IAAW;AAAA,IACX,WAAA9N;AAAA,IACA,UAAAD;AAAA,IACA,SAAAwK,IAAU;AAAA,IACV,GAAG7J;AAAA,EAAA,GACFC,MAAQ;AACT,UAAMoN,IAAYxD,IAAU,SAASiD,GAAkBvN,CAAO;AAE9D,WACE,gBAAAa;AAAA,MAACiN;AAAA,MAAA;AAAA,QACC,KAAApN;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOZ,CAAO;AAAA,UACdC,KAAQW,GAAO,QAAQX,CAAI,EAAE;AAAA,UAC7BwN,KAAU7M,GAAO,UAAU6M,CAAM,EAAE;AAAA,UACnCxB,KAASrL,GAAO,SAASqL,CAAK,EAAE;AAAA,UAChCyB,KAAa9M,GAAO,aAAa8M,CAAS,EAAE;AAAA,UAC5CC,KAAS/M,GAAO,SAAS+M,CAAK,EAAE;AAAA,UAChCC,KAAUhN,GAAO,UAAUgN,CAAM,EAAE;AAAA,UACnC;AAAA,YACE,CAAChN,GAAO,QAAQ,GAAGiN;AAAA,UAAA;AAAA,UAErB9N;AAAA,QAAA;AAAA,QAED,GAAGU;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF;AAEA0N,GAAW,cAAc;AAGlB,MAAMO,KAAelO;AAAA,EAC1B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,MAAK,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AAChE;AACAsN,GAAa,cAAc;AAEpB,MAAMC,KAAenO;AAAA,EAC1B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,MAAK,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AAChE;AACAuN,GAAa,cAAc;AAEpB,MAAMC,KAAepO;AAAA,EAC1B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,MAAK,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AAChE;AACAwN,GAAa,cAAc;AAEpB,MAAMC,KAAerO;AAAA,EAC1B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,MAAK,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AAChE;AACAyN,GAAa,cAAc;AAEpB,MAAMC,KAActO;AAAA,EACzB,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,KAAI,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AAC/D;AACA0N,GAAY,cAAc;AAEnB,MAAMC,KAAiBvO;AAAA,EAC5B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,QAAO,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AAClE;AACA2N,GAAe,cAAc;AAEtB,MAAMC,KAAkBxO;AAAA,EAC7B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,SAAQ,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AACnE;AACA4N,GAAgB,cAAc;AAEvB,MAAMC,KAAkBzO;AAAA,EAC7B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,SAAQ,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AACnE;AACA6N,GAAgB,cAAc;AAEvB,MAAMC,KAAkB1O;AAAA,EAC7B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,SAAQ,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AACnE;AACA8N,GAAgB,cAAc;AAEvB,MAAMC,KAAuB3O;AAAA,EAClC,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,cAAa,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AACxE;AACA+N,GAAqB,cAAc;AAE5B,MAAMC,KAAiB5O;AAAA,EAC5B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,QAAO,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AAClE;AACAgO,GAAe,cAAc;AAEtB,MAAMC,KAAiB7O;AAAA,EAC5B,CAACY,GAAOC,MAAQ,gBAAAG,EAAC2M,MAAW,SAAQ,QAAO,KAAA9M,GAAW,GAAGD,EAAA,CAAO;AAClE;AACAiO,GAAe,cAAc;;;;;;;;;;;;;;GCpIvBC,KAAiB1H,EAAM,cAUnB,IAAI,GAER2H,KAAa,MAAM;AACvB,QAAMhG,IAAU3B,EAAM,WAAW0H,EAAc;AAC/C,MAAI,CAAC/F;AACH,UAAM,IAAI,MAAM,kDAAkD;AAEpE,SAAOA;AACT,GAoBaiG,KAOT,CAAC;AAAA,EACH,UAAA/O;AAAA,EACA,WAAAC;AAAA,EACA,UAAA+O;AAAA,EACA,cAAApL,IAAe;AAAA,EACf,OAAOyE;AAAA,EACP,eAAApB;AAAA,EACA,QAAAgI;AAAA,EACA,cAAAC,IAAe;AAAA;AAAA,EACf,GAAGvO;AACL,MAAM;AACJ,QAAM,CAACwO,GAAQC,CAAS,IAAIvN,EAAS+B,CAAY,GAC3C,CAACyL,GAAeC,CAAgB,IAAIzN,EAAS,CAAC,GAC9C,CAAC0N,GAAOC,CAAQ,IAAI3N,EAA4B,CAAA,CAAE,GAClD,CAAC4N,GAAcC,CAAe,IAAI7N,EAAS,CAAC,GAC5CmC,IAAeqE,MAAoB,QAEnCsH,IAAgB3L,IAAeqE,IAAkB8G,GAEjDS,IAAqB,CAACC,MAAsB;AAChD,IAAK7L,KACHoL,EAAUS,CAAS,GAErB5I,KAAA,QAAAA,EAAgB4I,IAChBP,EAAiB,CAAC;AAAA,EACpB;AAoBA,SACE,gBAAAvO;AAAA,IAAC8N,GAAe;AAAA,IAAf;AAAA,MACC,OAAO;AAAA,QACL,QAAQc;AAAA,QACR,WAAWC;AAAA,QACX,eAAAP;AAAA,QACA,kBAAAC;AAAA,QACA,OAAAC;AAAA,QACA,UAAAC;AAAA,QACA,UAAAR;AAAA,QACA,cAAAS;AAAA,QACA,iBAAAC;AAAA,MAAA;AAAA,MAGF,UAAA,gBAAA3O;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAWlB,EAAKiB,GAAO,SAASb,CAAS;AAAA,UACxC,GAAGU;AAAA,UAEH,UAAAX;AAAA,QAAA;AAAA,MAAA;AAAA,IACH;AAAA,EAAA;AAGN,GAMM8P,KAAe/P;AAAA,EACnB,CAAC,EAAE,WAAAE,GAAW,GAAGU,EAAA,GAASC,MAAQ;AAChC,UAAM,EAAE,QAAAuO,GAAQ,WAAAC,GAAW,eAAAC,GAAe,kBAAAC,GAAkB,OAAAC,GAAO,UAAAP,EAAA,IAAaF,GAAA,GAE1EpM,IAAgB,CAACC,MAAuC;;AAC5D,cAAQA,EAAE,KAAA;AAAA,QACR,KAAK;AACH,UAAAA,EAAE,eAAA,GACF2M,EAAiB,KAAK,IAAID,IAAgB,GAAGE,EAAM,SAAS,CAAC,CAAC;AAC9D;AAAA,QACF,KAAK;AACH,UAAA5M,EAAE,eAAA,GACF2M,EAAiB,KAAK,IAAID,IAAgB,GAAG,CAAC,CAAC;AAC/C;AAAA,QACF,KAAK;AACH,UAAA1M,EAAE,eAAA,GACE4M,EAAMF,CAAa,KAAK,CAACE,EAAMF,CAAa,EAAE,aAChDL,KAAA,QAAAA,EAAWO,EAAMF,CAAa,EAAE;AAElC;AAAA,QACF,KAAK;AACH,UAAA1M,EAAE,eAAA,GACFyM,EAAU,EAAE;AACZ;AAAA,MAAA;AAEJ,OAAAhN,IAAAzB,EAAM,cAAN,QAAAyB,EAAA,KAAAzB,GAAkBgC;AAAA,IACpB;AAEA,WACE,gBAAA5B,EAAC,OAAA,EAAI,WAAWD,GAAO,cACrB,UAAA,gBAAAC;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,QACvC,OAAOkP;AAAA,QACP,UAAU,CAACxM,MAAMyM,EAAUzM,EAAE,OAAO,KAAK;AAAA,QACzC,WAAWD;AAAA,QACV,GAAG/B;AAAA,MAAA;AAAA,IAAA,GAER;AAAA,EAEJ;AACF;AAEAmP,GAAa,cAAc;AAO3B,MAAMC,KAAchQ;AAAA,EAClB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACrC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT;AAEA+P,GAAY,cAAc;AAO1B,MAAMC,KAAejQ;AAAA,EACnB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAAQ;AAC1C,UAAM,EAAE,cAAA6O,GAAc,QAAAN,EAAA,IAAWL,GAAA;AAEjC,WAAIW,IAAe,KAAK,CAACN,IAAe,OAGtC,gBAAApO;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,QACtC,GAAGU;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF;AAEAgQ,GAAa,cAAc;AAQ3B,MAAMC,KAAelQ;AAAA,EACnB,CAAC,EAAE,UAAAC,GAAU,SAAAkQ,GAAS,WAAAjQ,GAAW,GAAGU,EAAA,GAASC,MAEzC,gBAAAC;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAD;AAAA,MACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,MACtC,GAAGU;AAAA,MAEH,UAAA;AAAA,QAAAuP,KACC,gBAAAnP,EAAC,OAAA,EAAI,WAAWD,GAAO,cACpB,UAAAoP,GACH;AAAA,QAEF,gBAAAnP,EAAC,OAAA,EAAI,WAAWD,GAAO,YACpB,UAAAd,EAAA,CACH;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIR;AAEAiQ,GAAa,cAAc;AAW3B,MAAME,KAAcpQ;AAAA,EAClB,CAAC,EAAE,UAAAC,GAAU,OAAAsB,GAAO,UAAA8O,IAAW,CAAA,GAAI,UAAA1P,IAAW,IAAO,WAAAT,GAAW,UAAUoQ,GAAc,GAAG1P,EAAA,GAASC,MAAQ;AAC1G,UAAM,EAAE,QAAAuO,GAAQ,eAAAE,GAAe,UAAAG,GAAU,UAAAR,GAAU,iBAAAU,EAAA,IAAoBZ,GAAA,GACjEwB,IAAYtO,EAAe,EAAE;AAGnC,IAAAC,EAAU,MAAM;AACd,YAAMsO,IAAwB,EAAE,OAAAjP,GAAO,UAAA8O,GAAU,UAAA1P,EAAA;AACjD,aAAA8O,EAAS,CAAChJ,MAA4B;AACpC,cAAMgK,IAAW,CAAC,GAAGhK,GAAM+J,CAAI;AAC/B,eAAAD,EAAU,UAAUE,EAAS,SAAS,GAC/BA;AAAA,MACT,CAAC,GAEM,MAAM;AACX,QAAAhB,EAAS,CAAChJ,MAA4BA,EAAK,OAAO,CAAC+J,MAA0BA,EAAK,UAAUjP,CAAK,CAAC;AAAA,MACpG;AAAA,IACF,GAAG,CAACA,GAAO8O,GAAU1P,GAAU8O,CAAQ,CAAC;AAExC,UAAMiB,IAAaH,EAAU,YAAYjB,GAEnCzE,IAAc,MAAM;AACxB,MAAKlK,MACH2P,KAAA,QAAAA,EAAe/O,IACf0N,KAAA,QAAAA,EAAW1N;AAAA,IAEf,GAEMuL,IAAmB,MAAM;AAC7B,MAAI,CAACnM,KAAY4P,EAAU,WAAW;AAAA,IAGxC,GAGMI,IAAavJ,EAAM,QAAQ,MAAM;AACrC,UAAI,CAACgI,EAAQ,QAAO;AAEpB,YAAMwB,IAAcxB,EAAO,YAAA;AAG3B,aAFmB7N,EAAM,YAAA,EAEV,SAASqP,CAAW,IAAU,KAEtCP,EAAS;AAAA,QAAK,CAAAQ,MACnBA,EAAQ,YAAA,EAAc,SAASD,CAAW;AAAA,MAAA;AAAA,IAE9C,GAAG,CAACxB,GAAQ7N,GAAO8O,CAAQ,CAAC;AAU5B,WAPAnO,EAAU,MAAM;AACd,UAAIyO;AACF,eAAAhB,EAAgB,CAAAlJ,MAAQA,IAAO,CAAC,GACzB,MAAMkJ,EAAgB,CAAAlJ,MAAQA,IAAO,CAAC;AAAA,IAEjD,GAAG,CAACkK,GAAYhB,CAAe,CAAC,GAE3BgB,IAGH,gBAAA3P;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACP;AAAA,YACE,CAACA,GAAO,YAAY,GAAG2P;AAAA,YACvB,CAAC3P,GAAO,YAAY,GAAGJ;AAAA,UAAA;AAAA,UAEzBT;AAAA,QAAA;AAAA,QAEF,SAAS2K;AAAA,QACT,cAAciC;AAAA,QACd,MAAK;AAAA,QACL,iBAAe4D;AAAA,QACf,iBAAe/P;AAAA,QACf,cAAYY;AAAA,QACX,GAAGX;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA,IArBmB;AAAA,EAwB1B;AACF;AAEAmQ,GAAY,cAAc;AAM1B,MAAMU,KAAmB9Q;AAAA,EACvB,CAAC,EAAE,WAAAE,GAAW,GAAGU,EAAA,GAASC,MAEtB,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,WAAWb,CAAS;AAAA,MAC3C,MAAK;AAAA,MACJ,GAAGU;AAAA,IAAA;AAAA,EAAA;AAIZ;AAEAkQ,GAAiB,cAAc;AAG/B9B,GAAQ,QAAQe;AAChBf,GAAQ,OAAOgB;AACfhB,GAAQ,QAAQiB;AAChBjB,GAAQ,QAAQkB;AAChBlB,GAAQ,OAAOoB;AACfpB,GAAQ,YAAY8B;;;;;;;;;;;;;;;;;;;;GCvVPC,KAAS/Q;AAAA,EACpB,CACE;AAAA,IACE,MAAAI,IAAO;AAAA,IACP,aAAA4Q,IAAc;AAAA,IACd,WAAAC,IAAY;AAAA,IACZ,OAAAC;AAAA,IACA,KAAAC,IAAM;AAAA,IACN,KAAAC,IAAM;AAAA,IACN,MAAAC,IAAO;AAAA,IACP,UAAA1Q,IAAW;AAAA,IACX,OAAO2Q;AAAA,IACP,cAAAzN,IAAesN;AAAA,IACf,UAAA3P;AAAA,IACA,WAAAtB;AAAA,IACA,gBAAAqR;AAAA,IACA,gBAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,GAAG7Q;AAAA,EAAA,GAELC,MACG;AACH,UAAM,CAACU,GAAOmQ,CAAQ,IAAI5P;AAAA,MACE,OAA1BwP,MAAc,SAAmBA,IAAoBzN,CAAX;AAAA,IAAuB,GAE7DkE,IAAc9F,EAAyB,IAAI,GAC3C0P,IAAY9Q,KAAOkH;AAEzB,IAAA7F,EAAU,MAAM;AACd,MAAIoP,MAAc,UAChBI,EAAS,OAAOJ,CAAS,CAAC;AAAA,IAE9B,GAAG,CAACA,CAAS,CAAC;AAEd,UAAM/O,IAAe,CAACK,MAA2C;AAC/D,YAAMiC,IAAW,OAAOjC,EAAE,OAAO,KAAK;AACtC,MAAA8O,EAAS7M,CAAQ,GACjBrD,KAAA,QAAAA,EAAWoB;AAAA,IACb,GAEMgP,KAAerQ,IAAQ4P,MAAQC,IAAMD,KAAQ,KAE7CU,IAAc,MAAM;AACxB,UAAI,CAACX,EAAO,QAAO;AAEnB,YAAMY,IAAkBZ,EAAM;AAAA,QAAI,CAACa,MACjC,OAAOA,KAAS,WAAW,EAAE,OAAOA,MAASA;AAAA,MAAA;AAG/C,aACE,gBAAA/Q,EAAC,SAAI,WAAWD,GAAO,OACpB,UAAA+Q,EAAgB,IAAI,CAACC,MAAS;AAC7B,cAAMC,KAAmBD,EAAK,QAAQZ,MAAQC,IAAMD,KAAQ,KACtDc,IACJjB,MAAgB,eACZ,EAAE,MAAM,GAAGgB,CAAc,IAAA,IACzB,EAAE,QAAQ,GAAGA,CAAc,IAAA;AAEjC,eACE,gBAAAlR;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,WAAWhB,EAAKiB,GAAO,MAAM;AAAA,cAC3B,CAACA,GAAO,UAAU,GAAGQ,KAASwQ,EAAK;AAAA,YAAA,CACpC;AAAA,YACD,OAAOE;AAAA,YAEP,UAAA;AAAA,cAAA,gBAAAjR,EAAC,OAAA,EAAI,WAAWD,GAAO,SAAA,CAAU;AAAA,cAChCgR,EAAK,SACJ,gBAAA/Q,EAAC,OAAA,EAAI,WAAWD,GAAO,WAAY,YAAK,MAAA,CAAM;AAAA,YAAA;AAAA,UAAA;AAAA,UAR3CgR,EAAK;AAAA,QAAA;AAAA,MAYhB,CAAC,EAAA,CACH;AAAA,IAEJ,GAEMG,IACJlB,MAAgB,eACZ;AAAA,MACE,uBAAuB,GAAGY,CAAU;AAAA,IAAA,IAEtC;AAAA,MACE,uBAAuB,GAAGA,CAAU;AAAA,MACpC,QAAQ;AAAA,IAAA;AAGhB,WACE,gBAAA9Q;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAWhB;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOX,CAAI;AAAA,UACXW,GAAOiQ,CAAW;AAAA,UAClB;AAAA,YACE,CAACjQ,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,SAAS,GAAGkQ;AAAA,UAAA;AAAA,UAEtB/Q;AAAA,QAAA;AAAA,QAEF,OAAOgS;AAAA,QAEP,UAAA;AAAA,UAAA,gBAAApR,EAAC,SAAI,WAAWhB,EAAKiB,GAAO,OAAOwQ,CAAc,GAC/C,UAAA;AAAA,YAAA,gBAAAvQ,EAAC,OAAA,EAAI,WAAWD,GAAO,SAAA,CAAU;AAAA,YACjC,gBAAAC;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,KAAK2Q;AAAA,gBACL,MAAK;AAAA,gBACL,KAAAR;AAAA,gBACA,KAAAC;AAAA,gBACA,MAAAC;AAAA,gBACA,OAAA9P;AAAA,gBACA,UAAAZ;AAAA,gBACA,UAAU4B;AAAA,gBACV,WAAWzC,EAAKiB,GAAO,KAAK;AAAA,gBAC3B,GAAGH;AAAA,cAAA;AAAA,YAAA;AAAA,8BAEL,OAAA,EAAI,WAAWd,EAAKiB,GAAO,OAAOyQ,CAAc,GAAG;AAAA,YACnDK,EAAA;AAAA,UAAY,GACf;AAAA,UACCZ,uBACE,OAAA,EAAI,WAAWnR,EAAKiB,GAAO,OAAO0Q,CAAc,GAC9C,UAAAlQ,EAAA,CACH;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAwP,GAAO,cAAc;;;;;;;;;;;;;;;;;;;;GC1HRoB,KAASnS;AAAA,EACpB,CACE;AAAA,IACE,KAAAoS;AAAA,IACA,KAAAC;AAAA,IACA,UAAAC;AAAA,IACA,MAAAC;AAAA,IACA,MAAAnS,IAAO;AAAA,IACP,QAAAoS;AAAA,IACA,WAAAtS;AAAA,IACA,SAAAsK;AAAA,IACA,WAAAiI,IAAY;AAAA,IACZ,GAAG7R;AAAA,EAAA,GAELC,MACG;AACH,UAAM,CAAC6R,GAAYC,CAAa,IAAI7Q,EAAS,EAAK,GAC5C,CAAC8Q,GAAaC,CAAc,IAAI/Q,EAAS,EAAK,GAE9CgR,IAAmB,MAAM;AAC7B,MAAAH,EAAc,EAAI;AAAA,IACpB,GAEMI,IAAkB,MAAM;AAC5B,MAAAF,EAAe,EAAI,GACnBF,EAAc,EAAK;AAAA,IACrB,GAEMK,IAAWZ,KAAO,CAACM,GACnBO,IAAcX,KAAYA,EAAS,SAAS,GAC5CY,IAAUX,GAGVY,IAAYH,GACZI,IAAe,CAACJ,KAAYC,GAC5BI,IAAW,CAACL,KAAY,CAACC,KAAeC,GAGxCI,IAAkBhB,IAAWA,EAAS,MAAM,GAAG,CAAC,EAAE,gBAAgB,IAGlEiB,IACJ,gBAAAvS;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,WAAWD,GAAO;AAAA,QAElB,UAAA,gBAAAC,EAAC,QAAA,EAAK,GAAE,gHAAA,CAA+G;AAAA,MAAA;AAAA,IAAA,GAIrHwS,IAAcf,KAAa,CAAC,CAACjI;AAEnC,WACE,gBAAA1J;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,SAAS,GAAGyS;AAAA,YACpB,CAACzS,GAAO,SAAS,GAAG,CAAC,CAACyR;AAAA,UAAA;AAAA,UAExBtS;AAAA,QAAA;AAAA,QAEF,SAASsT,IAAchJ,IAAU;AAAA,QACjC,MAAMgJ,IAAc,WAAW;AAAA,QAC/B,UAAUA,IAAc,IAAI;AAAA,QAC5B,WACEA,IACI,CAAC5Q,MAAM;AACL,WAAIA,EAAE,QAAQ,WAAWA,EAAE,QAAQ,SACjCA,EAAE,eAAA,GACF4H,KAAA,QAAAA;AAAA,QAEJ,IACA;AAAA,QAEN,cAAY6H,KAAO,SAASC,IAAW,QAAQA,CAAQ,KAAK,EAAE;AAAA,QAE9D,UAAA;AAAA,UAAA,gBAAAxR,EAAC,OAAA,EAAI,WAAWC,GAAO,QACpB,UAAA;AAAA,YAAAoS,KACC,gBAAAnS;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,KAAAoR;AAAA,gBACA,KAAAC;AAAA,gBACA,WAAWvS,EAAKiB,GAAO,OAAO;AAAA,kBAC5B,CAACA,GAAO,MAAM,GAAG6R;AAAA,gBAAA,CAClB;AAAA,gBACD,SAASE;AAAA,gBACT,QAAQC;AAAA,gBACP,GAAGnS;AAAA,cAAA;AAAA,YAAA;AAAA,YAIPwS,KACC,gBAAApS,EAAC,QAAA,EAAK,WAAWD,GAAO,UAAU,cAAY,aAAauS,CAAe,IACvE,UAAAA,EAAA,CACH;AAAA,YAGDD,uBACE,QAAA,EAAK,WAAWtS,GAAO,aAAa,cAAW,eAC7C,UAAAwR,EAAA,CACH;AAAA,YAGD,CAACY,KAAa,CAACC,KAAgB,CAACC,KAC/B,gBAAArS,EAAC,QAAA,EAAK,WAAWD,GAAO,aAAa,cAAW,kBAC7C,UAAAwS,EAAA,CACH;AAAA,UAAA,GAEJ;AAAA,UAECf,KACC,gBAAAxR;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWlB,EAAKiB,GAAO,QAAQA,GAAOyR,CAAM,CAAC;AAAA,cAC7C,cAAY,WAAWA,CAAM;AAAA,cAC7B,MAAK;AAAA,YAAA;AAAA,UAAA;AAAA,QACP;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAL,GAAO,cAAc;;;;;;;;;;;;;;;;;;;;GC7HRsB,KAAQzT;AAAA,EACnB,CACE;AAAA,IACE,UAAAC;AAAA,IACA,SAAAE,IAAU;AAAA,IACV,OAAA2N,IAAQ;AAAA,IACR,MAAA1N,IAAO;AAAA,IACP,aAAAsT,IAAc;AAAA,IACd,WAAAC;AAAA,IACA,WAAAzT;AAAA,IACA,SAAAsK;AAAA,IACA,WAAAiI,IAAY;AAAA,IACZ,GAAG7R;AAAA,EAAA,GAELC,MACG;AACH,UAAM+S,IAAQzT,MAAY,OACpBqT,IAAcf,KAAa,CAAC,CAACjI,GAC7BqJ,IAAgBH,KAAe,CAAC,CAACC,GAEjCG,IAAgB,CAAClR,MAAwB;AAC7C,MAAAA,EAAE,gBAAA,GACF+Q,KAAA,QAAAA;AAAA,IACF,GAEM9I,IAAc,MAAM;AACxB,MAAI2I,MACFhJ,KAAA,QAAAA;AAAA,IAEJ,GAEM7H,IAAgB,CAACC,MAA2B;AAChD,MAAI4Q,MAAgB5Q,EAAE,QAAQ,WAAWA,EAAE,QAAQ,SACjDA,EAAE,eAAA,GACF4H,KAAA,QAAAA;AAAA,IAEJ,GAGM0C,IAAU0G,IAAQ,OAAO3T,GAGzB8T,IACJ,gBAAA/S;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,WAAWD,GAAO;AAAA,QAClB,eAAY;AAAA,QAEZ,UAAA,gBAAAC,EAAC,QAAA,EAAK,GAAE,wGAAA,CAAuG;AAAA,MAAA;AAAA,IAAA;AAInH,WACE,gBAAAF;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOZ,CAAO;AAAA,UACdY,GAAO+M,CAAK;AAAA,UACZ/M,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,SAAS,GAAGyS;AAAA,YACpB,CAACzS,GAAO,WAAW,GAAG8S;AAAA,YACtB,CAAC9S,GAAO,GAAG,GAAG6S;AAAA,UAAA;AAAA,UAEhB1T;AAAA,QAAA;AAAA,QAEF,SAASsT,IAAc3I,IAAc;AAAA,QACrC,WAAW2I,IAAc7Q,IAAgB;AAAA,QACzC,MAAM6Q,IAAc,WAAWI,IAAQ,WAAW;AAAA,QAClD,UAAUJ,IAAc,IAAI;AAAA,QAC5B,cACEI,IACI,GAAG9F,CAAK,sBACR,OAAO7N,KAAa,WAClBA,IACA;AAAA,QAEP,GAAGW;AAAA,QAEH,UAAA;AAAA,UAAAsM;AAAA,UAEA2G,KACC,gBAAA7S;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,WAAWD,GAAO;AAAA,cAClB,SAAS+S;AAAA,cACT,cAAW;AAAA,cACX,UAAU;AAAA,cAET,UAAAC;AAAA,YAAA;AAAA,UAAA;AAAA,QACH;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAN,GAAM,cAAc;;;;;;;;;;;;;;;GCzGdO,KAAOhU;AAAA,EACX,CACE;AAAA,IACE,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,SAAA8T,IAAU;AAAA,IACV,WAAAxB,IAAY;AAAA,IACZ,OAAAyB,IAAQ;AAAA,IACR,GAAGtT;AAAA,EAAA,GAELC,MAGE,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAOZ,CAAO;AAAA,QACdY,GAAO,WAAWkT,CAAO,EAAE;AAAA,QAC3B;AAAA,UACE,CAAClT,GAAO,SAAS,GAAG0R;AAAA,UACpB,CAAC1R,GAAO,KAAK,GAAGmT,KAAS,CAACzB;AAAA,QAAA;AAAA,QAE5BvS;AAAA,MAAA;AAAA,MAEF,MAAMuS,IAAY,WAAW;AAAA,MAC7B,UAAUA,IAAY,IAAI;AAAA,MACzB,GAAG7R;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEMkU,KAAanU;AAAA,EACjB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,QAAQb,CAAS;AAAA,MACvC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEMmU,KAAWpU;AAAA,EACf,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACrC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEMoU,KAAarU;AAAA,EACjB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,QAAQb,CAAS;AAAA,MACvC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT;AAEA+T,GAAK,cAAc;AACnBG,GAAW,cAAc;AACzBC,GAAS,cAAc;AACvBC,GAAW,cAAc;AAGzB,MAAMC,KAAgBN;AAMtBM,GAAc,SAASH;AACvBG,GAAc,OAAOF;AACrBE,GAAc,SAASD;;;;;;;;;;;;;;;;;;;;;;;GCxFjBE,KAAQvU;AAAA,EACZ,CACE;AAAA,IACE,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,MAAAiB,IAAO;AAAA,IACP,SAAAhB,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,aAAAsT,IAAc;AAAA,IACd,WAAAC;AAAA,IACA,GAAG/S;AAAA,EAAA,GAELC,MACG;AACH,UAAM,CAAC2T,GAAWC,CAAY,IAAI3S,EAAS,EAAK,GAC1C,CAAC4S,GAAWC,CAAY,IAAI7S,EAAS,EAAK,GAE1CgS,IAAgB,MAAM;AAC1B,MAAAa,EAAa,EAAI,GAEjB,WAAW,MAAM;AACf,QAAAF,EAAa,EAAI,GACjBd,KAAA,QAAAA;AAAA,MACF,GAAG,GAAG;AAAA,IACR;AAEA,WAAIa,IACK,OAIP,gBAAA1T;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOI,CAAI;AAAA,UACXJ,GAAOZ,CAAO;AAAA,UACdY,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,WAAW,GAAG2S;AAAA,YACtB,CAAC3S,GAAO,OAAO,GAAG2T;AAAA,UAAA;AAAA,UAEpBxU;AAAA,QAAA;AAAA,QAEF,MAAK;AAAA,QACL,aAAU;AAAA,QACT,GAAGU;AAAA,QAEH,UAAA;AAAA,UAAAX;AAAA,UACAyT,KACC,gBAAA1S;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWD,GAAO;AAAA,cAClB,SAAS+S;AAAA,cACT,cAAW;AAAA,cACX,MAAK;AAAA,cAEL,UAAA,gBAAA9S;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,OAAM;AAAA,kBACN,QAAO;AAAA,kBACP,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,OAAM;AAAA,kBAEN,UAAA,gBAAAA;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,GAAE;AAAA,sBACF,QAAO;AAAA,sBACP,aAAY;AAAA,sBACZ,eAAc;AAAA,oBAAA;AAAA,kBAAA;AAAA,gBAChB;AAAA,cAAA;AAAA,YACF;AAAA,UAAA;AAAA,QACF;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF,GAEM4T,KAAY5U;AAAA,EAChB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACrC,GAAGU;AAAA,MAEH,UAAAX,uBAAa4U,IAAA,CAAA,CAAY;AAAA,IAAA;AAAA,EAAA;AAIlC,GAEMC,KAAe9U;AAAA,EACnB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,SAASb,CAAS;AAAA,MACxC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEM8U,KAAa/U;AAAA,EACjB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,MACtC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEM+U,KAAmBhV;AAAA,EACvB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,aAAab,CAAS;AAAA,MAC5C,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEMgV,KAAejV;AAAA,EACnB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,SAASb,CAAS;AAAA,MACxC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAGM4U,KAAc,MAClB,gBAAA/T;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IACR,MAAK;AAAA,IACL,OAAM;AAAA,IAEN,UAAA;AAAA,MAAA,gBAAAE;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,IAAG;AAAA,UACH,GAAE;AAAA,UACF,QAAO;AAAA,UACP,aAAY;AAAA,UACZ,MAAK;AAAA,QAAA;AAAA,MAAA;AAAA,MAEP,gBAAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,GAAE;AAAA,UACF,QAAO;AAAA,UACP,aAAY;AAAA,UACZ,eAAc;AAAA,QAAA;AAAA,MAAA;AAAA,MAEhB,gBAAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,IAAG;AAAA,UACH,GAAE;AAAA,UACF,MAAK;AAAA,QAAA;AAAA,MAAA;AAAA,IACP;AAAA,EAAA;AACF;AAGFuT,GAAM,cAAc;AACpBK,GAAU,cAAc;AACxBE,GAAa,cAAc;AAC3BC,GAAW,cAAc;AACzBC,GAAiB,cAAc;AAC/BC,GAAa,cAAc;AAG3B,MAAMC,KAAiBX;AAQvBW,GAAe,OAAON;AACtBM,GAAe,UAAUJ;AACzBI,GAAe,QAAQH;AACvBG,GAAe,cAAcF;AAC7BE,GAAe,UAAUD;;;;;;;;GCnNZE,KAAanV;AAAA,EACxB,CACE;AAAA,IACE,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,WAAAqI,IAAY;AAAA,IACZ,KAAA6M,IAAM;AAAA,IACN,GAAGxU;AAAA,EAAA,GAELC,MAGE,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAOwH,CAAS;AAAA,QAChBxH,GAAO,OAAOqU,CAAG,EAAE;AAAA,QACnBlV;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT;AAEAkV,GAAW,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GCZZE,KAAWrV;AAAA,EACtB,CACE;AAAA,IACE,OAAAuB;AAAA,IACA,KAAA6P,IAAM;AAAA,IACN,MAAAjQ,IAAO;AAAA,IACP,SAAAhB,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,WAAAkV,IAAY;AAAA,IACZ,OAAAhO;AAAA,IACA,eAAAO,IAAgB;AAAA,IAChB,OAAAiG,IAAQ;AAAA,IACR,WAAA5N;AAAA,IACA,GAAGU;AAAA,EAAA,GAELC,MACG;AAEH,UAAM0U,IAAgB1N,IAAgB,SAAY,KAAK,IAAI,KAAK,KAAKtG,KAAS,KAAK6P,IAAM,KAAK,CAAC,GAAG,GAAG,GAC/FoE,IAAarU,MAAS,YAGtBsU,IAAYnO,MAAUiO,MAAkB,SAAY,GAAG,KAAK,MAAMA,CAAa,CAAC,MAAM,KAGtFG,IAAUF,IAAcpV,MAAS,OAAO,KAAKA,MAAS,OAAO,KAAK,KAAM,GACxEuV,IAAaH,IAAaE,IAAU,IAAI,KAAK,GAC7CE,IAAaJ,KAAcD,MAAkB,SAC/CI,IAAcJ,IAAgB,MAAOI,IACrC,GAEEE,IAAoB;AAAA,MACxB,GAAI1U,MAAS,YAAYoU,MAAkB,UAAa;AAAA,QACtD,OAAO,GAAGA,CAAa;AAAA,MAAA;AAAA,MAEzB,GAAIC,KAAcD,MAAkB,UAAa;AAAA,QAC/C,iBAAiBI;AAAA,QACjB,kBAAkBC;AAAA,MAAA;AAAA,IACpB,GAGIE,IAAgBhW;AAAA,MACpBiB,GAAO;AAAA,MACPA,GAAOI,CAAI;AAAA,MACXJ,GAAOZ,CAAO;AAAA,MACdY,GAAOX,CAAI;AAAA,MACXW,GAAO+M,CAAK;AAAA,MACZ;AAAA,QACE,CAAC/M,GAAO,aAAa,GAAG8G;AAAA,QACxB,CAAC9G,GAAO,SAAS,GAAGuU;AAAA,MAAA;AAAA,MAEtBpV;AAAA,IAAA,GAII6V,IAAe,eACfC,IAAenO,IAAgB,SAAYtG,KAAS,GACpD0U,IAAe,GACfC,IAAe9E,GACf+E,IAAY7O,MAAUO,IAAgB,YAAY,GAAG,KAAK,MAAM0N,KAAiB,CAAC,CAAC;AAEzF,QAAIC,GAAY;AACd,YAAMY,IAAchW,MAAS,OAAO,IAAIA,MAAS,OAAO,IAAI,GACtD6T,IAAUmC,IAAc,GACxBC,IAAUX,IAAUzB,IAAU,GAC9BqC,IAAa;AAEnB,aACE,gBAAAtV;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAWiV;AAAA,UACX,MAAMC;AAAA,UACN,iBAAeC;AAAA,UACf,iBAAeC;AAAA,UACf,iBAAeC;AAAA,UACf,cAAYC;AAAA,UACX,GAAGvV;AAAA,UAEJ,UAAA,gBAAAE,EAAC,OAAA,EAAI,WAAWC,GAAO,mBACrB,UAAA;AAAA,YAAA,gBAAAD;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWC,GAAO;AAAA,gBAClB,OAAOsV;AAAA,gBACP,QAAQA;AAAA,gBACR,SAAS,OAAOA,CAAO,IAAIA,CAAO;AAAA,gBAGlC,UAAA;AAAA,kBAAA,gBAAArV;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,WAAWD,GAAO;AAAA,sBAClB,GAAGkT;AAAA,sBACH,GAAGA;AAAA,sBACH,OAAOyB;AAAA,sBACP,QAAQA;AAAA,sBACR,IAAIY;AAAA,sBACJ,IAAIA;AAAA,sBACJ,MAAK;AAAA,sBACL,aAAAF;AAAA,oBAAA;AAAA,kBAAA;AAAA,kBAGF,gBAAApV;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,WAAWD,GAAO;AAAA,sBAClB,GAAGkT;AAAA,sBACH,GAAGA;AAAA,sBACH,OAAOyB;AAAA,sBACP,QAAQA;AAAA,sBACR,IAAIY;AAAA,sBACJ,IAAIA;AAAA,sBACJ,MAAK;AAAA,sBACL,aAAAF;AAAA,sBACA,OAAOP;AAAA,sBACP,eAAc;AAAA,sBACd,WAAW,cAAcQ,IAAU,CAAC,IAAIA,IAAU,CAAC;AAAA,oBAAA;AAAA,kBAAA;AAAA,gBACrD;AAAA,cAAA;AAAA,YAAA;AAAA,YAEDf,KACC,gBAAAtU,EAAC,OAAA,EAAI,WAAWD,GAAO,eACpB,UAAA0U,EAAA,CACH;AAAA,UAAA,EAAA,CAEJ;AAAA,QAAA;AAAA,MAAA;AAAA,IAGN;AAEA,WACE,gBAAA3U;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWiV;AAAA,QACX,MAAMC;AAAA,QACN,iBAAeC;AAAA,QACf,iBAAeC;AAAA,QACf,iBAAeC;AAAA,QACf,cAAYC;AAAA,QACX,GAAGvV;AAAA,QAEJ,UAAA;AAAA,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWD,GAAO,OACrB,UAAA,gBAAAC;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWD,GAAO;AAAA,cAClB,OAAO8U;AAAA,cACP,eAAY;AAAA,YAAA;AAAA,UAAA,GAEhB;AAAA,UACCP,KACC,gBAAAtU,EAAC,OAAA,EAAI,WAAWD,GAAO,OACpB,UAAA0U,EAAA,CACH;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAJ,GAAS,cAAc;;;;;;;;;;;;;;GC7JVkB,KAAWvW;AAAA,EACtB,CACE;AAAA,IACE,OAAAwW,IAAQ;AAAA,IACR,WAAAC,IAAY;AAAA,IACZ,OAAA/S;AAAA,IACA,QAAAgT;AAAA,IACA,OAAAC,IAAQ;AAAA,IACR,SAAAxW,IAAU;AAAA,IACV,WAAAD;AAAA,IACA,OAAA0W;AAAA,IACA,GAAGhW;AAAA,EAAA,GAELC,MACG;AACH,UAAMgW,IAASL,MAAU,QACnBhB,IAAagB,MAAU,YAGvBM,IAAuC;AAAA,MAC3C,GAAGF;AAAA,MACH,GAAIlT,KAAS,EAAE,OAAO,OAAOA,KAAU,WAAW,GAAGA,CAAK,OAAOA,EAAA;AAAA,MACjE,GAAIgT,KAAU,EAAE,QAAQ,OAAOA,KAAW,WAAW,GAAGA,CAAM,OAAOA,EAAA;AAAA,IAAO;AAI9E,IAAIlB,KAAc9R,KAAS,CAACgT,MAC1BI,EAAgB,SAASA,EAAgB;AAG3C,UAAMC,IAAcjX;AAAA,MAClBiB,GAAO;AAAA,MACPA,GAAOyV,CAAK;AAAA,MACZzV,GAAO0V,CAAS;AAAA,MAChB1V,GAAOZ,CAAO;AAAA,MACdD;AAAA,IAAA;AAIF,QAAI2W,KAAUF,IAAQ,GAAG;AACvB,YAAMK,IAAY,MAAM,KAAK,EAAE,QAAQL,EAAA,GAAS,CAACzT,GAAGd,MAAU;AAE5D,cAAM6U,IADa7U,MAAUuU,IAAQ,IACN,QAAQ;AAEvC,eACE,gBAAA3V;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,WAAWlB,EAAKiB,GAAO,UAAUA,GAAO,MAAMA,GAAO0V,CAAS,GAAG1V,GAAOZ,CAAO,CAAC;AAAA,YAChF,OAAO;AAAA,cACL,OAAO8W;AAAA,cACP,cAAc7U,IAAQuU,IAAQ,IAAI,0BAA0B;AAAA,YAAA;AAAA,YAE9D,eAAY;AAAA,UAAA;AAAA,UANPvU;AAAA,QAAA;AAAA,MASX,CAAC;AAED,aACE,gBAAApB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAWE,GAAO;AAAA,UAClB,MAAK;AAAA,UACL,cAAW;AAAA,UACV,GAAGH;AAAA,UAEH,UAAAoW;AAAA,QAAA;AAAA,MAAA;AAAA,IAGP;AAGA,WACE,gBAAAhW;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWkW;AAAA,QACX,OAAOD;AAAA,QACP,MAAK;AAAA,QACL,cAAW;AAAA,QACX,eAAY;AAAA,QACX,GAAGlW;AAAA,MAAA;AAAA,IAAA;AAAA,EAGV;AACF;AAEA2V,GAAS,cAAc;;;;;;;;;;;;;GCvEVW,KAAkC,CAAC;AAAA,EAC9C,SAAAhK;AAAA,EACA,UAAAjN;AAAA,EACA,UAAAyM,IAAW;AAAA,EACX,SAAAO,IAAU;AAAA,EACV,WAAAkK,IAAY;AAAA,EACZ,WAAAC,IAAY;AAAA,EACZ,SAASC;AAAA,EACT,oBAAAC;AAAA,EACA,WAAAC,IAAY;AAAA,EACZ,WAAArX;AAAA,EACA,UAAAS,IAAW;AAAA,EACX,UAAAiD,IAAW;AACb,MAAM;AACJ,QAAM,CAAC4T,GAASC,CAAU,IAAI3V,EAAS,EAAK,GACtC,CAAC4V,GAAgBC,CAAiB,IAAI7V,EAA0B4K,CAAQ,GACxE,CAACkL,GAAQC,CAAS,IAAI/V,EAAS,EAAE,GAAG,GAAG,GAAG,GAAG,GAC7CkE,IAAa/D,EAAoB,IAAI,GACrC6V,IAAa7V,EAAuB,IAAI,GACxC8V,IAAiB9V,EAAA,GACjB+V,IAAiB/V,EAAA,GAEjBgW,IAAYZ,MAAsB,SAAYA,IAAoBG,GAGlEU,IAAoB7T,EAAY,MAAM;AAC1C,QAAI,CAAC2B,EAAW,WAAW,CAAC8R,EAAW,QAAS;AAEhD,UAAM3K,IAAcnH,EAAW,QAAQ,sBAAA,GACjCmS,IAAcL,EAAW,QAAQ,sBAAA,GACjCzK,IAAgB,OAAO,YACvBC,IAAiB,OAAO,aACxB8K,IAAU,OAAO,SACjBC,IAAU,OAAO;AAEvB,QAAIC,IAAgB5L,GAChB6L,KAAI,GACJC,KAAI;AAGR,QAAI9L,MAAa,QAAQ;AACvB,YAAM+L,KAAWtL,EAAY,KACvBuL,KAAcpL,IAAiBH,EAAY,QAC3CwL,KAAYxL,EAAY,MACxByL,KAAavL,IAAgBF,EAAY;AAE/C,MAAIsL,MAAYN,EAAY,SAAS,KACnCG,IAAgB,QACPI,MAAeP,EAAY,SAAS,KAC7CG,IAAgB,WACPM,MAAcT,EAAY,QAAQ,KAC3CG,IAAgB,UACPK,MAAaR,EAAY,QAAQ,KAC1CG,IAAgB,SAEhBA,IAAgB;AAAA,IAEpB;AAGA,YAAQA,GAAA;AAAA,MACN,KAAK;AACH,QAAAC,KAAIpL,EAAY,OAAOA,EAAY,QAAQ,IAAIgL,EAAY,QAAQ,GACnEK,KAAIrL,EAAY,MAAMgL,EAAY,SAAS;AAC3C;AAAA,MACF,KAAK;AACH,QAAAI,KAAIpL,EAAY,OAAOA,EAAY,QAAQ,IAAIgL,EAAY,QAAQ,GACnEK,KAAIrL,EAAY,SAAS;AACzB;AAAA,MACF,KAAK;AACH,QAAAoL,KAAIpL,EAAY,OAAOgL,EAAY,QAAQ,GAC3CK,KAAIrL,EAAY,MAAMA,EAAY,SAAS,IAAIgL,EAAY,SAAS;AACpE;AAAA,MACF,KAAK;AACH,QAAAI,KAAIpL,EAAY,QAAQ,GACxBqL,KAAIrL,EAAY,MAAMA,EAAY,SAAS,IAAIgL,EAAY,SAAS;AACpE;AAAA,IAAA;AAIJ,IAAAI,KAAI,KAAK,IAAI,GAAG,KAAK,IAAIA,IAAGlL,IAAgB8K,EAAY,QAAQ,CAAC,CAAC,GAClEK,KAAI,KAAK,IAAI,GAAG,KAAK,IAAIA,IAAGlL,IAAiB6K,EAAY,SAAS,CAAC,CAAC,GAEpER,EAAkBW,CAAa,GAC/BT,EAAU;AAAA,MACR,GAAGU,KAAIH;AAAA,MACP,GAAGI,KAAIH;AAAA,IAAA,CACR;AAAA,EACH,GAAG,CAAC3L,CAAQ,CAAC,GAGPmM,IAAcxU,EAAY,MAAM;AACpC,IAAI1D,MAEAqX,EAAe,YACjB,aAAaA,EAAe,OAAO,GACnCA,EAAe,UAAU,SAGvBb,IAAY,IACdY,EAAe,UAAU,WAAW,MAAM;AACxC,MAAIV,MAAsB,UACxBI,EAAW,EAAI,GAEjBH,KAAA,QAAAA,EAAqB;AAAA,IACvB,GAAGH,CAAS,KAERE,MAAsB,UACxBI,EAAW,EAAI,GAEjBH,KAAA,QAAAA,EAAqB;AAAA,EAEzB,GAAG,CAAC3W,GAAUwW,GAAWE,GAAmBC,CAAkB,CAAC,GAGzDwB,IAAczU,EAAY,MAAM;AACpC,IAAI0T,EAAe,YACjB,aAAaA,EAAe,OAAO,GACnCA,EAAe,UAAU,SAGvBX,IAAY,IACdY,EAAe,UAAU,WAAW,MAAM;AACxC,MAAIX,MAAsB,UACxBI,EAAW,EAAK,GAElBH,KAAA,QAAAA,EAAqB;AAAA,IACvB,GAAGF,CAAS,KAERC,MAAsB,UACxBI,EAAW,EAAK,GAElBH,KAAA,QAAAA,EAAqB;AAAA,EAEzB,GAAG,CAACF,GAAWC,GAAmBC,CAAkB,CAAC,GAG/C3U,IAAgB0B,EAAY,CAACgC,MAAyB;AAC1D,IAAIA,EAAM,QAAQ,YAAY4R,KAC5Ba,EAAA;AAAA,EAEJ,GAAG,CAACb,GAAWa,CAAW,CAAC;AAG3B,EAAA5W,EAAU,MAAM;AACd,QAAI+V,KAAajS,EAAW,SAAS;AACnC,MAAAkS,EAAA;AAEA,YAAMtT,IAAe,MAAMsT,EAAA,GACrBa,IAAe,MAAMb,EAAA;AAE3B,oBAAO,iBAAiB,UAAUtT,CAAY,GAC9C,OAAO,iBAAiB,UAAUmU,CAAY,GAC9C,SAAS,iBAAiB,WAAWpW,CAAa,GAE3C,MAAM;AACX,eAAO,oBAAoB,UAAUiC,CAAY,GACjD,OAAO,oBAAoB,UAAUmU,CAAY,GACjD,SAAS,oBAAoB,WAAWpW,CAAa;AAAA,MACvD;AAAA,IACF;AAAA,EACF,GAAG,CAACsV,GAAWC,GAAmBvV,CAAa,CAAC,GAGhDT,EAAU,MACD,MAAM;AACX,IAAI6V,EAAe,WACjB,aAAaA,EAAe,OAAO,GAEjCC,EAAe,WACjB,aAAaA,EAAe,OAAO;AAAA,EAEvC,GACC,CAAA,CAAE;AAGL,QAAM/L,IAA+E,CAAA;AAErF,EAAIgB,MAAY,WACdhB,EAAa,eAAe4M,GAC5B5M,EAAa,eAAe6M,KACnB7L,MAAY,UACrBhB,EAAa,UAAU,CAACrJ,MAAwB;AAC9C,IAAAA,EAAE,eAAA,GACEqV,IACFa,EAAA,IAEAD,EAAA;AAAA,EAEJ,IACS5L,MAAY,YACrBhB,EAAa,UAAU4M,GACvB5M,EAAa,SAAS6M;AAIxB,QAAME,IAAiB5R,EAAM,aAAanH,GAAU;AAAA,IAClD,GAAGgM;AAAA,IACH,KAAK,CAAC9I,MAAoB;AACxB,MAAI6C,MACDA,EAA0D,UAAU7C;AAEvE,YAAM8V,IAAYhZ,EAAmE;AACrF,MAAI,OAAOgZ,KAAa,aACtBA,EAAS9V,CAAE,IACF8V,KAAY,OAAOA,KAAa,aACxCA,EAAwD,UAAU9V;AAAA,IAEvE;AAAA,IACA,oBAAoB8U,IAAY,YAAY;AAAA,EAAA,CAC7C,GAGKiB,IAAgBjB,IAAYkB;AAAA,IAChC,gBAAArY;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAKgX;AAAA,QACL,WAAWhY;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAO2W,CAAc;AAAA,UACrB;AAAA,YACE,CAAC3W,GAAO,SAAS,GAAGwW;AAAA,UAAA;AAAA,UAEtBrX;AAAA,QAAA;AAAA,QAEF,OAAO;AAAA,UACL,UAAU;AAAA,UACV,MAAM0X,EAAO;AAAA,UACb,KAAKA,EAAO;AAAA,UACZ,UAAAhU;AAAA,UACA,QAAQ;AAAA,QAAA;AAAA,QAEV,MAAK;AAAA,QACL,IAAG;AAAA,QACH,cAAcqJ,MAAY,UAAU4L,IAAc;AAAA,QAClD,cAAc5L,MAAY,UAAU6L,IAAc;AAAA,QAEjD,UAAA;AAAA,UAAAvB,KAAa,gBAAAvW,EAAC,OAAA,EAAI,WAAWD,GAAO,OAAO;AAAA,UAC5C,gBAAAC,EAAC,OAAA,EAAI,WAAWD,GAAO,SACpB,UAAAmM,EAAA,CACH;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,IAEF,SAAS;AAAA,EAAA,IACP;AAEJ,SACE,gBAAApM,EAAAsY,IAAA,EACG,UAAA;AAAA,IAAAJ;AAAA,IACAE;AAAA,EAAA,GACH;AAEJ;AAEAhC,GAAQ,cAAc;;;;;;;;;;;;;;;;;;;;GC9OhBmC,KAAiBjR,GAA0C,IAAI,GAExDkR,KAKT,CAAC;AAAA,EACH,UAAArZ;AAAA,EACA,SAAAiN;AAAA,EACA,UAAAR,IAAW;AAAA,EACX,SAAAO,IAAU;AAAA,EACV,MAAM9B;AAAA,EACN,cAAAC;AAAA,EACA,qBAAAmO,IAAsB;AAAA,EACtB,eAAAC,IAAgB;AAAA,EAChB,WAAAjC,IAAY;AAAA,EACZ,WAAArX;AAAA,EACA,UAAAS,IAAW;AAAA,EACX,UAAAiD,IAAW;AAAA,EACX,WAAAlC,IAAY;AAAA,EACZ,cAAA+X;AACF,MAAM;AACJ,QAAM,CAAChO,GAAMG,CAAO,IAAI9J,EAAS,EAAK,GAChC,CAAC4V,GAAgBC,CAAiB,IAAI7V,EAA0B4K,CAAQ,GACxE,CAACkL,GAAQC,CAAS,IAAI/V,EAAS,EAAE,GAAG,GAAG,GAAG,GAAG,GAC7CkE,IAAa/D,EAA2B,IAAI,GAC5CyX,IAAazX,EAA8B,IAAI,GAC/C0X,IAA2B1X,EAA2B,IAAI,GAE1DwD,IAAS0F,MAAmB,SAAYA,IAAiBM,GAGzDyM,IAAoB7T,EAAY,MAAM;AAC1C,QAAI,CAAC2B,EAAW,WAAW,CAAC0T,EAAW,QAAS;AAEhD,UAAMvM,IAAcnH,EAAW,QAAQ,sBAAA,GACjC4T,IAAcF,EAAW,QAAQ,sBAAA,GACjCrM,KAAgB,OAAO,YACvBC,KAAiB,OAAO,aACxB8K,KAAU,OAAO,SACjBC,KAAU,OAAO;AAEvB,QAAIC,KAAgB5L,GAChB6L,KAAI,GACJC,KAAI;AAGR,QAAI9L,MAAa,QAAQ;AACvB,YAAM+L,KAAWtL,EAAY,KACvBuL,KAAcpL,KAAiBH,EAAY,QAC3CwL,KAAYxL,EAAY,MACxByL,KAAavL,KAAgBF,EAAY;AAE/C,MAAIuL,MAAekB,EAAY,SAAS,KACtCtB,KAAgB,WACPG,MAAYmB,EAAY,SAAS,KAC1CtB,KAAgB,QACPM,MAAcgB,EAAY,QAAQ,KAC3CtB,KAAgB,UACPK,MAAaiB,EAAY,QAAQ,KAC1CtB,KAAgB,SAEhBA,KAAgB;AAAA,IAEpB;AAGA,YAAQA,GAAc,MAAM,GAAG,EAAE,CAAC,GAAA;AAAA,MAChC,KAAK;AACH,QAAAE,KAAIrL,EAAY,MAAMyM,EAAY,SAAS;AAC3C;AAAA,MACF,KAAK;AACH,QAAApB,KAAIrL,EAAY,SAAS;AACzB;AAAA,MACF,KAAK;AACH,QAAAoL,KAAIpL,EAAY,OAAOyM,EAAY,QAAQ;AAC3C;AAAA,MACF,KAAK;AACH,QAAArB,KAAIpL,EAAY,QAAQ;AACxB;AAAA,IAAA;AAIJ,IAAImL,GAAc,SAAS,KAAK,KAAKA,GAAc,SAAS,QAAQ,IAC9DA,GAAc,SAAS,OAAO,IAChCC,KAAIpL,EAAY,OACPmL,GAAc,SAAS,KAAK,IACrCC,KAAIpL,EAAY,QAAQyM,EAAY,QAEpCrB,KAAIpL,EAAY,OAAOA,EAAY,QAAQ,IAAIyM,EAAY,QAAQ,KAE5DtB,GAAc,SAAS,MAAM,KAAKA,GAAc,SAAS,OAAO,OACrEA,GAAc,SAAS,OAAO,IAChCE,KAAIrL,EAAY,MACPmL,GAAc,SAAS,KAAK,IACrCE,KAAIrL,EAAY,SAASyM,EAAY,SAErCpB,KAAIrL,EAAY,MAAMA,EAAY,SAAS,IAAIyM,EAAY,SAAS,IAKxErB,KAAI,KAAK,IAAI,GAAG,KAAK,IAAIA,IAAGlL,KAAgBuM,EAAY,QAAQ,CAAC,CAAC,GAClEpB,KAAI,KAAK,IAAI,GAAG,KAAK,IAAIA,IAAGlL,KAAiBsM,EAAY,SAAS,CAAC,CAAC,GAEpEjC,EAAkBW,EAAa,GAC/BT,EAAU;AAAA,MACR,GAAGU,KAAIH;AAAA,MACP,GAAGI,KAAIH;AAAA,IAAA,CACR;AAAA,EACH,GAAG,CAAC3L,CAAQ,CAAC,GAGPmN,IAAcxV,EAAY,MAAM;AACpC,IAAI1D,MAEJgZ,EAAyB,UAAU,SAAS,eAExCxO,MAAmB,UACrBS,EAAQ,EAAI,GAEdR,KAAA,QAAAA,EAAe;AAAA,EACjB,GAAG,CAACzK,GAAUwK,GAAgBC,CAAY,CAAC,GAGrC0O,IAAezV,EAAY,MAAM;AACrC,IAAI8G,MAAmB,UACrBS,EAAQ,EAAK,GAEfR,KAAA,QAAAA,EAAe,KAGXuO,EAAyB,WAC3BA,EAAyB,QAAQ,MAAM,EAAE,eAAe,IAAM;AAAA,EAElE,GAAG,CAACxO,GAAgBC,CAAY,CAAC,GAG3BhF,IAAqB/B,EAAY,CAACgC,MAAsB;AAC5D,QAAI,CAACkT,KAAuB,CAAC9T,EAAQ;AAErC,UAAMsU,IAAS1T,EAAM;AACrB,IACEqT,EAAW,WACX1T,EAAW,WACX,CAAC0T,EAAW,QAAQ,SAASK,CAAM,KACnC,CAAC/T,EAAW,QAAQ,SAAS+T,CAAM,KAEnCD,EAAA;AAAA,EAEJ,GAAG,CAACP,GAAqB9T,GAAQqU,CAAY,CAAC,GAGxCnX,IAAgB0B,EAAY,CAACgC,MAAyB;AAC1D,IAAIA,EAAM,QAAQ,YAAYmT,KAAiB/T,KAC7CqU,EAAA;AAAA,EAEJ,GAAG,CAACN,GAAe/T,GAAQqU,CAAY,CAAC,GAGlCE,IAAwB3V,EAAY,MAAM;AAC9C,QAAI,CAAC3C,KAAa,CAAC+D,KAAU,CAACiU,EAAW,QAAS;AAElD,UAAMO,IAAoBP,EAAW,QAAQ;AAAA,MAC3C;AAAA,IAAA;AAGF,QAAID,GAAc;AAChB,YAAMS,IAAiBR,EAAW,QAAQ,cAAcD,CAAY;AACpE,UAAIS,GAAgB;AAClB,QAAAA,EAAe,MAAM,EAAE,eAAe,GAAA,CAAM;AAC5C;AAAA,MACF;AAAA,IACF;AAEA,IAAID,EAAkB,SAAS,IAC5BA,EAAkB,CAAC,EAAkB,MAAM,EAAE,eAAe,IAAM,IAEnEP,EAAW,QAAQ,MAAM,EAAE,eAAe,IAAM;AAAA,EAEpD,GAAG,CAAChY,GAAW+D,GAAQgU,CAAY,CAAC,GAG9BU,IAAkB9V,EAAY,CAACgC,MAAyB;AAC5D,QAAI,CAACZ,KAAU,CAACiU,EAAW,WAAWrT,EAAM,QAAQ,MAAO;AAE3D,UAAM4T,IAAoBP,EAAW,QAAQ;AAAA,MAC3C;AAAA,IAAA;AAGF,QAAIO,EAAkB,WAAW,EAAG;AAEpC,UAAMG,KAAeH,EAAkB,CAAC,GAClCI,KAAcJ,EAAkBA,EAAkB,SAAS,CAAC;AAElE,IAAI5T,EAAM,WACJ,SAAS,kBAAkB+T,OAC7BC,GAAY,MAAM,EAAE,eAAe,GAAA,CAAM,GACzChU,EAAM,eAAA,KAGJ,SAAS,kBAAkBgU,OAC7BD,GAAa,MAAM,EAAE,eAAe,GAAA,CAAM,GAC1C/T,EAAM,eAAA;AAAA,EAGZ,GAAG,CAACZ,CAAM,CAAC;AAGX,EAAAvD,EAAU,MAAM;AACd,QAAIuD,GAAQ;AACV,MAAAyS,EAAA,GACA8B,EAAA;AAEA,YAAMpV,IAAe,MAAMsT,EAAA,GACrBa,IAAe,MAAMb,EAAA;AAE3B,oBAAO,iBAAiB,UAAUtT,CAAY,GAC9C,OAAO,iBAAiB,UAAUmU,CAAY,GAC9C,SAAS,iBAAiB,aAAa3S,CAAkB,GACzD,SAAS,iBAAiB,WAAWzD,CAAa,GAClD,SAAS,iBAAiB,WAAWwX,CAAe,GAE7C,MAAM;AACX,eAAO,oBAAoB,UAAUvV,CAAY,GACjD,OAAO,oBAAoB,UAAUmU,CAAY,GACjD,SAAS,oBAAoB,aAAa3S,CAAkB,GAC5D,SAAS,oBAAoB,WAAWzD,CAAa,GACrD,SAAS,oBAAoB,WAAWwX,CAAe;AAAA,MACzD;AAAA,IACF;AAAA,EACF,GAAG,CAAC1U,GAAQyS,GAAmB8B,GAAuB5T,GAAoBzD,GAAewX,CAAe,CAAC;AAGzG,QAAMlO,IAAiH,CAAA;AAEvH,EAAIgB,MAAY,UACdhB,EAAa,UAAU,CAACrJ,MAAwB;AAC9C,IAAAA,EAAE,eAAA,GACFA,EAAE,gBAAA,GACE6C,IACFqU,EAAA,IAEAD,EAAA;AAAA,EAEJ,IACS5M,MAAY,YACrBhB,EAAa,UAAU4N,GACvB5N,EAAa,SAAS,CAACqO,MAAyB;AAE9C,eAAW,MAAM;AACf,MAAIZ,EAAW,WAAWA,EAAW,QAAQ,SAAS,SAAS,aAAa,KAG5EI,EAAA;AAAA,IACF,GAAG,CAAC;AAAA,EACN;AAIF,QAAMd,IAAiB5R,EAAM,aAAanH,GAAU;AAAA,IAClD,GAAGgM;AAAA,IACH,KAAK,CAAC9I,MAA2B;AAC/B,MAAIA,MACF6C,EAAW,UAAU7C;AAAA,IAEzB;AAAA,IACA,iBAAiBsC;AAAA,IACjB,iBAAiB;AAAA,EAAA,CAClB,GAGK8U,IAAoC;AAAA,IACxC,OAAOT;AAAA,EAAA,GAIHU,IAAgB/U,IAAS0T;AAAA,IAC7B,gBAAAnY,EAACqY,GAAe,UAAf,EAAwB,OAAOkB,GAC9B,UAAA,gBAAAzZ;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAK4Y;AAAA,QACL,WAAW5Z;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAO2W,EAAe,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA,UACnC;AAAA,YACE,CAAC3W,GAAO,SAAS,GAAGwW;AAAA,UAAA;AAAA,UAEtBrX;AAAA,QAAA;AAAA,QAEF,OAAO;AAAA,UACL,UAAU;AAAA,UACV,MAAM0X,EAAO;AAAA,UACb,KAAKA,EAAO;AAAA,UACZ,UAAAhU;AAAA,UACA,QAAQ;AAAA,QAAA;AAAA,QAEV,MAAK;AAAA,QACL,cAAW;AAAA,QACX,UAAU;AAAA,QAET,UAAA;AAAA,UAAA2T,KAAa,gBAAAvW,EAAC,OAAA,EAAI,WAAWD,GAAO,OAAO;AAAA,UAC5C,gBAAAC,EAAC,SAAI,WAAWD,GAAO,SACpB,UAAAmM,KAAWjN,EAAS,MAAM,SAAA,CAC7B;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA,GAEJ;AAAA,IACA,SAAS;AAAA,EAAA,IACP;AAEJ,SACE,gBAAAa,EAAAsY,IAAA,EACG,UAAA;AAAA,IAAAJ;AAAA,IACAwB;AAAA,EAAA,GACH;AAEJ,GAGaC,KAA8E,CAAC;AAAA,EAC1F,UAAAxa;AAAA,EACA,WAAAC;AACF,MAEI,gBAAAc,EAAC,SAAI,WAAWlB,EAAKiB,GAAO,gBAAgBb,CAAS,GAClD,UAAAD,GACH,GAISya,KAA6E,CAAC;AAAA,EACzF,UAAAza;AAAA,EACA,WAAAC;AACF,MAEI,gBAAAc,EAAC,SAAI,WAAWlB,EAAKiB,GAAO,QAAQb,CAAS,GAC1C,UAAAD,GACH,GAIS0a,KAA2E,CAAC;AAAA,EACvF,UAAA1a;AAAA,EACA,WAAAC;AACF,MAEI,gBAAAc,EAAC,SAAI,WAAWlB,EAAKiB,GAAO,MAAMb,CAAS,GACxC,UAAAD,GACH,GAIS2a,KAA6E,CAAC;AAAA,EACzF,UAAA3a;AAAA,EACA,WAAAC;AACF,MAEI,gBAAAc,EAAC,SAAI,WAAWlB,EAAKiB,GAAO,QAAQb,CAAS,GAC1C,UAAAD,GACH,GAKS4a,KAAa,MAAM;AAC9B,QAAM9R,IAAUC,EAAWqQ,EAAc;AACzC,MAAI,CAACtQ;AACH,UAAM,IAAI,MAAM,oDAAoD;AAEtE,SAAOA;AACT;AAGAuQ,GAAQ,UAAUmB;AAClBnB,GAAQ,SAASoB;AACjBpB,GAAQ,OAAOqB;AACfrB,GAAQ,SAASsB;AAEjBtB,GAAQ,cAAc;AACtBmB,GAAe,cAAc;AAC7BC,GAAc,cAAc;AAC5BC,GAAY,cAAc;AAC1BC,GAAc,cAAc;;;;;;;;;;;;;;;;;;GCxZfE,KAAsC,CAAC;AAAA,EAClD,aAAA9J,IAAc;AAAA,EACd,WAAA+J,IAAY;AAAA,EACZ,SAAA5a,IAAU;AAAA,EACV,WAAAD;AAAA,EACA,OAAA0W;AAAA,EACA,OAAAtP;AAAA,EACA,eAAAmC,IAAgB;AAAA,EAChB,WAAA0M,IAAY;AACd,MAAM;AACJ,QAAM6E,IAAehK,MAAgB;AAErC,SACE,gBAAAhQ;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWlB;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAOiQ,CAAW;AAAA,QAClBjQ,GAAOga,CAAS;AAAA,QAChBha,GAAOZ,CAAO;AAAA,QACd;AAAA,UACE,CAACY,GAAO,SAAS,GAAGuG,KAAS0T;AAAA,UAC7B,CAACja,GAAO,SAAS0I,CAAa,EAAE,CAAC,GAAGnC,KAAS0T;AAAA,QAAA;AAAA,QAE/C9a;AAAA,MAAA;AAAA,MAEF,OAAA0W;AAAA,MACA,MAAK;AAAA,MACL,oBAAkB5F;AAAA,MAClB,cAAYmF;AAAA,MAEX,UAAA7O,KAAS0T,KACR,gBAAAla,EAAAsY,IAAA,EACE,UAAA;AAAA,QAAA,gBAAApY,EAAC,OAAA,EAAI,WAAWD,GAAO,KAAA,CAAM;AAAA,QAC7B,gBAAAC,EAAC,OAAA,EAAI,WAAWD,GAAO,OACpB,UAAA,OAAOuG,KAAU,WAAW,gBAAAtG,EAAC,QAAA,EAAM,UAAAsG,EAAA,CAAM,IAAUA,GACtD;AAAA,QACA,gBAAAtG,EAAC,OAAA,EAAI,WAAWD,GAAO,KAAA,CAAM;AAAA,MAAA,EAAA,CAC/B;AAAA,IAAA;AAAA,EAAA;AAIR;AAEA+Z,GAAU,cAAc;AChEjB,MAAMG,KAAgC;AAAA,EAC3C,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EAAA;AAEV,GAEaC,KAA6B;AAAA,EACxC,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EAAA;AAEV,GAEaC,KAA+B;AAAA,EAC1C,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EAAA;AAEV,GAEaC,KAA6B;AAAA,EACxC,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EAAA;AAEV,GAEaC,KAA8B;AAAA,EACzC,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EAAA;AAEV,GAEaC,KAA+B;AAAA,EAC1C,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EAAA;AAEV,GAEaC,KAA8B;AAAA,EACzC,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EAAA;AAEV,GAEaC,KAAmC;AAAA,EAC9C,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EAAA;AAEV,GAGaC,KAAqC;AAAA,EAChDR;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AACF,GAGaE,KAAgBT,IAGhBU,KAAe,CAACnW,MACpBiW,GAAiB,KAAK,CAAAG,MAASA,EAAM,OAAOpW,CAAE,GC3K1CqW,KAAoB;AAAA,EAC/B,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,OAAO;AAAA,EACP,MAAM;AACR,GCnDaC,KAAa,CAACF,MAAgC;AACzD,QAAMG,IAAO,SAAS;AAEtB,SAAO,QAAQH,EAAM,MAAM,EAAE,QAAQ,CAAC,CAACI,GAAUC,CAAU,MAAM;AAC/D,UAAMC,IAAcL,GAAkBG,CAA0B;AAChE,IAAIE,KACFH,EAAK,MAAM,YAAYG,GAAaD,CAAU;AAAA,EAElD,CAAC;AACH,GAKaE,KAAsB,MAAsB;AACvD,QAAMC,IAAW,UAAU,KAAK,IAAA,CAAK,IAG/BC,IAA4B;AAAA,IAChC,OAAOC,GAAyB,OAAO;AAAA,IACvC,OAAOA,GAAyB,OAAO;AAAA,IACvC,QAAQA,GAAyB,QAAQ;AAAA,IACzC,YAAYA,GAAyB,YAAY;AAAA,IACjD,QAAQA,GAAyB,QAAQ;AAAA,IACzC,SAASA,GAAyB,SAAS;AAAA,IAC3C,SAASA,GAAyB,SAAS;AAAA,IAC3C,SAASA,GAAyB,SAAS;AAAA,IAC3C,SAASA,GAAyB,SAAS;AAAA,IAC3C,SAASA,GAAyB,SAAS;AAAA,IAC3C,SAASA,GAAyB,SAAS;AAAA,IAC3C,SAASA,GAAyB,SAAS;AAAA,IAC3C,SAASA,GAAyB,SAAS;AAAA,IAC3C,SAASA,GAAyB,SAAS;AAAA,IAC3C,OAAOA,GAAyB,OAAO;AAAA,IACvC,MAAMA,GAAyB,MAAM;AAAA,EAAA;AAGvC,SAAO;AAAA,IACL,IAAIF;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,QAAQC;AAAA,EAAA;AAEZ,GAKMC,KAA2B,CAACN,MACZP,GAAiB,KAAK,MAAM,KAAK,OAAA,IAAWA,GAAiB,MAAM,CAAC,EACrE,OAAOO,CAAQ,GAMvBO,KAAmB,CAACX,MAMxB;AAAA,EALU,OAAO,QAAQA,EAAM,MAAM,EAAE,IAAI,CAAC,CAACI,GAAUC,CAAU,MAE/D,KADaJ,GAAkBG,CAA0B,CACzC,KAAKC,CAAU,GACvC,EAE2B,KAAK;AAAA,CAAI,CAAC;AAAA,IAM3BO,KAAkB,CAACZ,MAEvB,iBADU,KAAK,UAAUA,EAAM,QAAQ,MAAM,CAAC,CACrB,IAMrBa,KAA2B,CAACb,MAChC,MAAMA,EAAM,IAAI;AAAA,EAAcW,GAAiBX,CAAK,CAAC,IAMjDc,KAAyB,CAACd,MAC9B;AAAA;AAAA,QAEDA,EAAM,EAAE,WAAW,KAAK,UAAUA,GAAO,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,4BAI7BA,EAAM,EAAE;AAAA;AAAA;AAAA;AAAA,IAUvBe,KAAoB,CAACf,MACzB;AAAA;AAAA,eAEMA,EAAM,EAAE,2BAA2B,KAAK,UAAUA,GAAO,MAAM,CAAC,CAAC;AAAA;AAAA,iBAE/DA,EAAM,EAAE,SAMZgB,KAAkB,CAAChB,GAAuBiB,MAAmC;AACxF,QAAMC,IAAkBD,IAAgB,UAAUA,CAAa,uBAAuBA,CAAa,MAAM,0DACnGE,IAAiBF,IAAgB,IAAIA,CAAa,QAAQ;AAEhE,SAAO;AAAA;AAAA,WAEEjB,EAAM,EAAE;AAAA,EACjBkB,CAAe;AAAA;AAAA;AAAA;AAAA,4BAIWlB,EAAM,EAAE;AAAA;AAAA,UAE1BmB,CAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxB,GAKaC,KAAwB,CAACpB,GAAuBqB,GAAwBJ,OAK5E;AAAA,EACL,YAAYF,GAAkBf,CAAK;AAAA,EACnC,WAAWgB,GAAgBhB,GAAOiB,CAAa;AAAA,EAC/C,iBAAiBI,KAAiB;AAAA,IAOzBC,KAAqB,CAACtB,MAAgC;AACjE,MAAI;AACF,iBAAa,QAAQ,mBAAmB,KAAK,UAAUA,CAAK,CAAC;AAAA,EAC/D,SAAS9T,GAAO;AACd,YAAQ,KAAK,yCAAyCA,CAAK;AAAA,EAC7D;AACF,GAKaqV,KAAuB,MAA6B;AAC/D,MAAI;AACF,UAAMC,IAAa,aAAa,QAAQ,iBAAiB;AACzD,QAAIA;AACF,aAAO,KAAK,MAAMA,CAAU;AAAA,EAEhC,SAAStV,GAAO;AACd,YAAQ,KAAK,2CAA2CA,CAAK;AAAA,EAC/D;AACA,SAAO;AACT,GAKauV,KAAe,CAACzB,MAA4C;AACvE,MAAI,CAACA,KAAS,OAAOA,KAAU,SAAU,QAAO;AAEhD,QAAM0B,IAAW1B;AAQjB,SAHI,CAHkB,CAAC,MAAM,QAAQ,eAAe,QAAQ,EACrB,MAAM,CAAA2B,MAAQA,KAAQD,CAAQ,KAKjE,CAACA,EAAS,UAAU,OAAOA,EAAS,UAAW,WAAiB,KAE7C,OAAO,KAAKzB,EAAiB,EACX,MAAM,CAAA/N,MAASA,KAAUwP,EAAS,MAAkC;AAG/G,GAKaE,KAAyB,MAA4B;AAChE,QAAMzB,IAAO,SAAS,iBAChB0B,IAAgB,iBAAiB1B,CAAI,GAErC2B,IAAsC,CAAA;AAE5C,gBAAO,QAAQ7B,EAAiB,EAAE,QAAQ,CAAC,CAACG,GAAUE,CAAW,MAAM;AACrE,UAAM3a,IAAQkc,EAAc,iBAAiBvB,CAAW,EAAE,KAAA;AAC1D,IAAI3a,MACFmc,EAAc1B,CAA6B,IAAIza;AAAA,EAEnD,CAAC,GAEMmc;AACT,GAKaC,KAAsB,MAAY;AAC7C,EAAA7B,GAAWJ,EAAa,GACxB,aAAa,WAAW,iBAAiB;AAC3C,GClNMkC,KAAexV,GAA6C,MAAS,GAc9DyV,KAA8C,CAAC;AAAA,EAC1D,UAAA5d;AAAA,EACA,cAAA6d;AAAA,EACA,mBAAAC,IAAoB;AACtB,MAAM;AAEJ,QAAM,CAACC,GAAcC,CAAe,IAAInc,EAAyB,MAAM;AAErE,QAAIgc,KAAgBT,GAAaS,CAAY;AAC3C,aAAOA;AAGT,QAAIC,GAAmB;AACrB,YAAMX,IAAaD,GAAA;AACnB,UAAIC,KAAcC,GAAaD,CAAU;AACvC,eAAOA;AAAA,IAEX;AAEA,WAAO1B;AAAA,EACT,CAAC;AAGD,EAAAxZ,EAAU,MAAM;AACd,IAAA4Z,GAAWkC,CAAY,GAEnBD,KACFb,GAAmBc,CAAY;AAAA,EAEnC,GAAG,CAACA,GAAcD,CAAiB,CAAC;AAwBpC,QAAMxD,IAAkC;AAAA,IACtC,cAAAyD;AAAA,IACA,UAvBe,CAACpC,MAA0B;AAC1C,MAAIyB,GAAazB,CAAK,IACpBqC,EAAgBrC,CAAK,IAErB,QAAQ,KAAK,uCAAuCA,CAAK;AAAA,IAE7D;AAAA,IAkBE,iBAAiBH;AAAA,IACjB,gBAjBqB,MAAM;AAC3B,YAAMyC,IAAc/B,GAAA;AACpB,MAAA8B,EAAgBC,CAAW;AAAA,IAC7B;AAAA,IAeE,gBAbqB,MAAM;AAC3B,MAAAD,EAAgBvC,EAAa,GACzBqC,KACFJ,GAAA;AAAA,IAEJ;AAAA,EAQE;AAGF,2BACGC,GAAa,UAAb,EAAsB,OAAOrD,GAC3B,UAAAta,GACH;AAEJ,GAOake,KAAW,MAAyB;AAC/C,QAAMpV,IAAUC,EAAW4U,EAAY;AAEvC,MAAI7U,MAAY;AACd,UAAM,IAAI,MAAM,8CAA8C;AAGhE,SAAOA;AACT,GAMaqV,KAAiB,MAAM;AAClC,QAAM,EAAE,cAAAJ,EAAA,IAAiBG,GAAA;AACzB,SAAOH,EAAa;AACtB,GAOaK,KAAmB,CAACC,MAA6B;AAC5D,QAAM,EAAE,cAAAN,EAAA,IAAiBG,GAAA;AACzB,SAAOH,EAAa,OAAOM;AAC7B,GAMaC,KAAmB,MAAM;AACpC,QAAM,EAAE,UAAAC,EAAA,IAAaL,GAAA;AAErB,SAAO,CAACG,MAAoB;AAC1B,UAAM1C,IAAQD,GAAa2C,CAAO;AAClC,IAAI1C,IACF4C,EAAS5C,CAAK,IAEd,QAAQ,KAAK,kBAAkB0C,CAAO,aAAa;AAAA,EAEvD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;GChIaG,KAA0C,CAAC;AAAA,EACtD,SAAAte,IAAU;AAAA,EACV,iBAAAM,IAAkB;AAAA,EAClB,UAAAie,IAAW;AAAA,EACX,WAAAxe;AAAA,EACA,eAAAye;AACF,MAAM;AACJ,QAAM,EAAE,cAAAX,GAAc,UAAAQ,GAAU,iBAAAI,GAAiB,gBAAAC,GAAgB,gBAAAC,EAAA,IAAmBX,GAAA,GAC9E,CAACY,GAAiBC,CAAkB,IAAIld,EAAS,EAAK,GACtD,CAACmd,GAAUC,CAAW,IAAIpd,EAA0B,KAAK,GACzD,CAACqd,GAAcC,CAAe,IAAItd,EAAS,EAAE,GAE7Cud,IAAoB,CAACzD,MAA0B;AACnD,IAAA4C,EAAS5C,CAAK,GACd+C,KAAA,QAAAA,EAAgB/C;AAAA,EAClB,GAEM0D,IAAkB,MAAM;AAC5B,IAAAT,EAAA,GACAF,KAAA,QAAAA,EAAgBX;AAAA,EAClB,GAEMuB,IAAc,MAAM;AACxB,IAAAT,EAAA,GACAH,KAAA,QAAAA,EAAgBX;AAAA,EAClB,GAEMwB,IAAkB,OAAOC,GAActe,MAAiB;AAC5D,QAAI;AACF,YAAM,UAAU,UAAU,UAAUse,CAAI,GACxCL,EAAgB,GAAGje,CAAI,UAAU,GACjC,WAAW,MAAMie,EAAgB,EAAE,GAAG,GAAI;AAAA,IAC5C,SAAStX,GAAO;AACd,cAAQ,MAAM,gCAAgCA,CAAK,GACnDsX,EAAgB,aAAa,GAC7B,WAAW,MAAMA,EAAgB,EAAE,GAAG,GAAI;AAAA,IAC5C;AAAA,EACF,GAEMM,IAAe,MACZT,MAAa,QAChBxC,GAAyBuB,CAAY,IACrCtB,GAAuBsB,CAAY,GAInC2B,IAAmB,CAAC/D,MAA0B;AAAA,IAClDA,EAAM,OAAO;AAAA,IACbA,EAAM,OAAO;AAAA,IACbA,EAAM,OAAO;AAAA,IACbA,EAAM,OAAO;AAAA,EAAA;AAGf,SACE,gBAAA9a;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWhB;AAAA,QACTiB,EAAO;AAAA,QACP;AAAA,UACE,CAACA,EAAO,OAAO,GAAGZ,MAAY;AAAA,UAC9B,CAACY,EAAO,UAAU,GAAGN;AAAA,QAAA;AAAA,QAEvBP;AAAA,MAAA;AAAA,MAIF,UAAA;AAAA,QAAA,gBAAAY,EAAC,OAAA,EAAI,WAAWC,EAAO,QACrB,UAAA;AAAA,UAAA,gBAAAC,EAAC,MAAA,EAAG,WAAWD,EAAO,OAAO,UAAA,gBAAY;AAAA,UACzC,gBAAAD,EAAC,OAAA,EAAI,WAAWC,EAAO,SACrB,UAAA;AAAA,YAAA,gBAAAC;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWD,EAAO;AAAA,gBAClB,SAASue;AAAA,gBACT,OAAM;AAAA,gBACP,UAAA;AAAA,cAAA;AAAA,YAAA;AAAA,YAGD,gBAAAte;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWD,EAAO;AAAA,gBAClB,SAASwe;AAAA,gBACT,OAAM;AAAA,gBACP,UAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UAED,EAAA,CACF;AAAA,QAAA,GACF;AAAA,QAGA,gBAAAze,EAAC,OAAA,EAAI,WAAWC,EAAO,cACrB,UAAA;AAAA,UAAA,gBAAAC,EAAC,MAAA,EAAG,WAAWD,EAAO,mBAAmB,UAAA,iBAAa;AAAA,UACtD,gBAAAD,EAAC,OAAA,EAAI,WAAWC,EAAO,kBACrB,UAAA;AAAA,YAAA,gBAAAC,EAAC,QAAA,EAAK,WAAWD,EAAO,kBAAmB,YAAa,MAAK;AAAA,YAC7D,gBAAAC;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWD,EAAO;AAAA,gBAClB,SAAS,MAAMye,EAAgB,KAAK,UAAUxB,GAAc,MAAM,CAAC,GAAG,OAAO;AAAA,gBAE5E,UAAAmB,KAAgB;AAAA,cAAA;AAAA,YAAA;AAAA,UACnB,GACF;AAAA,UAGA,gBAAAne,EAAC,OAAA,EAAI,WAAWD,EAAO,cACpB,UAAA,OAAO,QAAQid,EAAa,MAAM,EAAE,IAAI,CAAC,CAAC4B,GAAW3D,CAAU,MAC9D,gBAAAjb;AAAA,YAAC;AAAA,YAAA;AAAA,cAEC,WAAWD,EAAO;AAAA,cAClB,OAAO,EAAE,iBAAiBkb,EAAA;AAAA,cAC1B,OAAO,GAAG2D,CAAS,KAAK3D,CAAU;AAAA,cAClC,SAAS,MAAMuD,EAAgBvD,GAAY2D,CAAS;AAAA,YAAA;AAAA,YAJ/CA;AAAA,UAAA,CAMR,EAAA,CACH;AAAA,QAAA,GACF;AAAA,QAGA,gBAAA5e,EAAC,SAAI,WAAWD,EAAO,WACpB,UAAA6d,EAAgB,IAAI,CAAChD,MACpB,gBAAA9a;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,WAAWhB,EAAKiB,EAAO,WAAW;AAAA,cAChC,CAACA,EAAO,MAAM,GAAGid,EAAa,OAAOpC,EAAM;AAAA,YAAA,CAC5C;AAAA,YACD,SAAS,MAAMyD,EAAkBzD,CAAK;AAAA,YAGtC,UAAA;AAAA,cAAA,gBAAA5a,EAAC,OAAA,EAAI,WAAWD,EAAO,cACpB,UAAA4e,EAAiB/D,CAAK,EAAE,IAAI,CAAC9N,GAAO1L,MACnC,gBAAApB;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBAEC,WAAWD,EAAO;AAAA,kBAClB,OAAO,EAAE,iBAAiB+M,EAAA;AAAA,gBAAM;AAAA,gBAF3B1L;AAAA,cAAA,CAIR,GACH;AAAA,cAGA,gBAAAtB,EAAC,OAAA,EAAI,WAAWC,EAAO,WACrB,UAAA;AAAA,gBAAA,gBAAAC,EAAC,MAAA,EAAG,WAAWD,EAAO,WAAY,YAAM,MAAK;AAAA,gBAC5CZ,MAAY,aACX,gBAAAa,EAAC,KAAA,EAAE,WAAWD,EAAO,kBAAmB,YAAM,YAAA,CAAY;AAAA,cAAA,EAAA,CAE9D;AAAA,YAAA;AAAA,UAAA;AAAA,UAvBK6a,EAAM;AAAA,QAAA,CAyBd,GACH;AAAA,QAGC8C,KACC,gBAAA5d,EAAC,OAAA,EAAI,WAAWC,EAAO,aACrB,UAAA;AAAA,UAAA,gBAAAC;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWD,EAAO;AAAA,cAClB,SAAS,MAAMie,EAAmB,CAACD,CAAe;AAAA,cAEjD,cAAkB,iBAAiB;AAAA,YAAA;AAAA,UAAA;AAAA,UAGrCA,KACC,gBAAAje,EAAAsY,IAAA,EAEE,UAAA;AAAA,YAAA,gBAAAtY,EAAC,OAAA,EAAI,WAAWC,EAAO,SAAS,OAAO,EAAE,cAAc,2BACrD,UAAA;AAAA,cAAA,gBAAAC;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,WAAWlB,EAAKiB,EAAO,cAAc;AAAA,oBACnC,CAACA,EAAO,MAAM,GAAGke,MAAa;AAAA,kBAAA,CAC/B;AAAA,kBACD,SAAS,MAAMC,EAAY,KAAK;AAAA,kBACjC,UAAA;AAAA,gBAAA;AAAA,cAAA;AAAA,cAGD,gBAAAle;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,WAAWlB,EAAKiB,EAAO,cAAc;AAAA,oBACnC,CAACA,EAAO,MAAM,GAAGke,MAAa;AAAA,kBAAA,CAC/B;AAAA,kBACD,SAAS,MAAMC,EAAY,OAAO;AAAA,kBACnC,UAAA;AAAA,gBAAA;AAAA,cAAA;AAAA,YAED,GACF;AAAA,YAGA,gBAAApe,EAAC,OAAA,EAAI,WAAWC,EAAO,WACrB,UAAA;AAAA,cAAA,gBAAAC;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,WAAWD,EAAO;AAAA,kBAClB,SAAS,MAAMye,EAAgBE,KAAgBT,EAAS,aAAa;AAAA,kBAEpE,UAAAE,KAAgB;AAAA,gBAAA;AAAA,cAAA;AAAA,cAEnB,gBAAAne,EAAC,OAAA,EAAK,UAAA0e,EAAA,EAAa,CAAE;AAAA,YAAA,EAAA,CACvB;AAAA,UAAA,EAAA,CACF;AAAA,QAAA,EAAA,CAEJ;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIR;;;;;;;;;;;;;;;;;;;;;;;;GCtKaG,KAAQ7f;AAAA,EACnB,CACE;AAAA,IACE,SAAAG,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,WAAA0f,IAAY;AAAA,IACZ,WAAAzf,IAAY;AAAA,IACZ,WAAAH;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GAELC,MAGE,gBAAAG,EAAC,OAAA,EAAI,WAAWlB,EAAKiB,EAAO,cAAc,EAAE,CAACA,EAAO,SAAS,GAAGV,EAAA,CAAW,GACzE,UAAA,gBAAAW;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,EAAO;AAAA,QACPA,EAAOZ,CAAO;AAAA,QACdY,EAAOX,CAAI;AAAA,QACX;AAAA,UACE,CAACW,EAAO,SAAS,GAAG+e;AAAA,UACpB,CAAC/e,EAAO,SAAS,GAAGV;AAAA,QAAA;AAAA,QAEtBH;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA,GAEL;AAGN,GAEa8f,KAAY/f;AAAA,EACvB,CAAC,EAAE,QAAAggB,IAAS,IAAO,WAAA9f,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhD,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,EAAO;AAAA,QACP;AAAA,UACE,CAACA,EAAO,MAAM,GAAGif;AAAA,QAAA;AAAA,QAEnB9f;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEaggB,KAAYjgB;AAAA,EACvB,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG,EAAC,SAAA,EAAM,KAAAH,GAAU,WAAWf,EAAKiB,EAAO,OAAOb,CAAS,GAAI,GAAGU,GAC5D,UAAAX,EAAA,CACH;AAGN,GAEaigB,KAAWlgB;AAAA,EACtB,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG,EAAC,MAAA,EAAG,KAAAH,GAAU,WAAWf,EAAKiB,EAAO,IAAIb,CAAS,GAAI,GAAGU,GACtD,UAAAX,EAAA,CACH;AAGN,GAEakgB,KAAcngB;AAAA,EACzB,CACE;AAAA,IACE,OAAAoM,IAAQ;AAAA,IACR,UAAAgU,IAAW;AAAA,IACX,eAAAC,IAAgB;AAAA,IAChB,QAAAC;AAAA,IACA,WAAApgB;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GAELC,MACG;AACH,UAAMgK,IAAc,MAAM;AACxB,MAAIuV,KAAYE,KACdA,EAAA;AAAA,IAEJ;AAEA,WACE,gBAAAtf;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,EAAO;AAAA,UACPA,EAAO,SAASqL,CAAK,EAAE;AAAA,UACvB;AAAA,YACE,CAACrL,EAAO,QAAQ,GAAGqf;AAAA,YACnB,CAACrf,EAAO,MAAM,GAAGsf,MAAkB;AAAA,UAAA;AAAA,UAErCngB;AAAA,QAAA;AAAA,QAEF,SAAS2K;AAAA,QACT,MAAMuV,IAAW,WAAW;AAAA,QAC5B,UAAUA,IAAW,IAAI;AAAA,QACzB,aACEC,MAAkB,QACd,cACAA,MAAkB,SAClB,eACA;AAAA,QAEL,GAAGzf;AAAA,QAEJ,UAAA,gBAAAE,EAAC,OAAA,EAAI,WAAWC,EAAO,WACpB,UAAA;AAAA,UAAAd;AAAA,UACAmgB,KACC,gBAAAtf,EAAC,QAAA,EAAK,WAAWhB,EAAKiB,EAAO,UAAUA,EAAO,QAAQsf,CAAa,EAAE,CAAC,GACnE,UAAA;AAAA,YAAAA,MAAkB,SAAS;AAAA,YAC3BA,MAAkB,UAAU;AAAA,YAC5BA,MAAkB,UAAU;AAAA,UAAA,EAAA,CAC/B;AAAA,QAAA,EAAA,CAEJ;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF,GAEaE,KAAYvgB;AAAA,EACvB,CAAC,EAAE,OAAAoM,IAAQ,QAAQ,SAAAoU,IAAU,IAAO,WAAAtgB,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEjE,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,EAAO;AAAA,QACPA,EAAO,SAASqL,CAAK,EAAE;AAAA,QACvB;AAAA,UACE,CAACrL,EAAO,OAAO,GAAGyf;AAAA,QAAA;AAAA,QAEpBtgB;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT;AAGA4f,GAAM,cAAc;AACpBE,GAAU,cAAc;AACxBE,GAAU,cAAc;AACxBC,GAAS,cAAc;AACvBC,GAAY,cAAc;AAC1BI,GAAU,cAAc;AAGxB,MAAME,KAAiB,OAAO,OAAOZ,IAAO;AAAA,EAC1C,MAAME;AAAA,EACN,MAAME;AAAA,EACN,KAAKC;AAAA,EACL,QAAQC;AAAA,EACR,MAAMI;AACR,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GCrMYG,KAAU1gB;AAAA,EACrB,CACE;AAAA,IACE,MAAAI,IAAO;AAAA,IACP,OAAA0N,IAAQ;AAAA,IACR,SAAA3N,IAAU;AAAA,IACV,OAAAwgB,IAAQ;AAAA,IACR,OAAArZ,IAAQ;AAAA,IACR,WAAApH;AAAA,IACA,GAAGU;AAAA,EAAA,GAELC,MACG;AACH,UAAM+f,IAAgB,MAAM;AAC1B,cAAQzgB,GAAA;AAAA,QACN,KAAK;AACH,iBACE,gBAAAW,EAAAsY,IAAA,EACE,UAAA;AAAA,YAAA,gBAAApY,EAAC,QAAA,EAAK,WAAWD,GAAO,IAAA,CAAK;AAAA,YAC7B,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,IAAA,CAAK;AAAA,YAC7B,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,IAAA,CAAK;AAAA,UAAA,GAC/B;AAAA,QAEJ,KAAK;AACH,iBACE,gBAAAD,EAAAsY,IAAA,EACE,UAAA;AAAA,YAAA,gBAAApY,EAAC,QAAA,EAAK,WAAWD,GAAO,IAAA,CAAK;AAAA,YAC7B,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,IAAA,CAAK;AAAA,YAC7B,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,IAAA,CAAK;AAAA,YAC7B,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,IAAA,CAAK;AAAA,UAAA,GAC/B;AAAA,QAEJ,KAAK;AACH,iBAAO,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,OAAA,CAAQ;AAAA,QACzC,KAAK;AACH,iBACE,gBAAAD,EAAAsY,IAAA,EACE,UAAA;AAAA,YAAA,gBAAApY,EAAC,QAAA,EAAK,WAAWD,GAAO,aAAA,CAAc;AAAA,YACtC,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,aAAA,CAAc;AAAA,YACtC,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,aAAA,CAAc;AAAA,UAAA,GACxC;AAAA,QAEJ;AACE,iBAAO;AAAA,MAAA;AAAA,IAEb;AAEA,WACE,gBAAAD;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOX,CAAI;AAAA,UACXW,GAAO+M,CAAK;AAAA,UACZ/M,GAAOZ,CAAO;AAAA,UACdY,GAAO,SAAS4f,CAAK,EAAE;AAAA,UACvBzgB;AAAA,QAAA;AAAA,QAEF,MAAK;AAAA,QACL,cAAYoH;AAAA,QACX,GAAG1G;AAAA,QAEH,UAAA;AAAA,UAAAggB,EAAA;AAAA,UACD,gBAAA5f,EAAC,QAAA,EAAK,WAAWD,GAAO,QAAS,UAAAuG,EAAA,CAAM;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAG7C;AACF;AAEAoZ,GAAQ,cAAc;;;;;;;;;;;;;;;;;;;;;;;;GC5DhBG,KAAezY,GAAwC,IAAI,GAQpD0Y,KAA8C,CAAC;AAAA,EAC1D,UAAA7gB;AAAA,EACA,UAAAyM,IAAW;AAAA,EACX,WAAAqU,IAAY;AACd,MAAM;AACJ,QAAM,CAACC,GAAQC,CAAS,IAAInf,EAAsB,CAAA,CAAE,GAE9Cof,IAAY7c,EAAY,CAAC8c,MAAiC;AAC9D,UAAM3b,IAAK,SAAS,KAAK,IAAA,CAAK,IAAI,KAAK,QAAQ,IACzC4b,IAAW,EAAE,GAAGD,GAAO,IAAA3b,EAAA;AAE7B,WAAAyb,EAAU,CAAAxa,MACQ,CAAC,GAAGA,GAAM2a,CAAQ,EAEnB,MAAM,CAACL,CAAS,CAChC,GAEMvb;AAAA,EACT,GAAG,CAACub,CAAS,CAAC,GAERM,IAAYhd,EAAY,CAACmB,MAAe;AAC5C,IAAAyb,EAAU,CAAAxa,MAAQA,EAAK,OAAO,CAAA0a,MAASA,EAAM,OAAO3b,CAAE,CAAC;AAAA,EACzD,GAAG,CAAA,CAAE,GAEC8b,IAAgBjd,EAAY,MAAM;AACtC,IAAA4c,EAAU,CAAA,CAAE;AAAA,EACd,GAAG,CAAA,CAAE,GAEC1G,IAAe,EAAE,QAAAyG,GAAQ,WAAAE,GAAW,WAAAG,GAAW,eAAAC,EAAA;AAGrD,SAAApf,EAAU,OACRqf,GAAmBhH,CAAY,GACxB,MAAM;AACX,IAAAiH,KAAa;AAAA,EACf,IACC,CAACjH,CAAY,CAAC,GAGf,gBAAAzZ,EAAC+f,GAAa,UAAb,EAAsB,OAAOtG,GAC3B,UAAA;AAAA,IAAAta;AAAA,IACD,gBAAAe,EAACygB,MAAe,UAAA/U,EAAA,CAAoB;AAAA,EAAA,GACtC;AAEJ,GAMM+U,KAAgD,CAAC,EAAE,UAAA/U,QAAe;AACtE,QAAM3D,IAAUC,EAAW6X,EAAY;AACvC,MAAI,CAAC9X,EAAS,QAAO;AAErB,QAAM,EAAE,QAAAiY,MAAWjY;AAEnB,SAAIiY,EAAO,WAAW,IAAU,OAEzB7H;AAAA,IACL,gBAAAnY,EAAC,SAAI,WAAWlB,EAAKiB,GAAO,WAAWA,GAAO2L,CAAQ,CAAC,GACpD,YAAO,IAAI,CAAAyU,MACV,gBAAAngB,EAAC0gB,IAAA,EAA0B,GAAGP,EAAAA,GAAdA,EAAM,EAAe,CACtC,GACH;AAAA,IACA,SAAS;AAAA,EAAA;AAEb,GAIMO,KAAsC,CAAC;AAAA,EAC3C,IAAAlc;AAAA,EACA,MAAArE;AAAA,EACA,OAAAwgB;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC,IAAW;AAAA,EACX,aAAAnO,IAAc;AAAA,EACd,QAAAoO;AACF,MAAM;AACJ,QAAM/Y,IAAUC,EAAW6X,EAAY,GACjC,CAACnM,GAAWC,CAAY,IAAI7S,EAAS,EAAK,GAE1CgS,IAAgBzP,EAAY,MAAM;AACtC,IAAAsQ,EAAa,EAAI,GACjB,WAAW,MAAM;AACf,MAAA5L,KAAA,QAAAA,EAAS,UAAUvD;AAAA,IACrB,GAAG,GAAG;AAAA,EACR,GAAG,CAACuD,GAASvD,CAAE,CAAC;AAEhB,EAAAtD,EAAU,MAAM;AACd,QAAI2f,IAAW,GAAG;AAChB,YAAM/V,IAAQ,WAAW,MAAM;AAC7B,QAAAgI,EAAA;AAAA,MACF,GAAG+N,CAAQ;AAEX,aAAO,MAAM,aAAa/V,CAAK;AAAA,IACjC;AAAA,EACF,GAAG,CAAC+V,GAAU/N,CAAa,CAAC;AAE5B,QAAMiO,IAAU,MAAM;AACpB,YAAQ5gB,GAAA;AAAA,MACN,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL;AACE,eAAO;AAAA,IAAA;AAAA,EAEb;AAEA,SACE,gBAAAL;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWhB;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAOI,CAAI;AAAA,QACX;AAAA,UACE,CAACJ,GAAO,OAAO,GAAG2T;AAAA,QAAA;AAAA,MACpB;AAAA,MAEF,MAAK;AAAA,MACL,aAAU;AAAA,MAEV,UAAA;AAAA,QAAA,gBAAA1T,EAAC,OAAA,EAAI,WAAWD,GAAO,MACrB,4BAAC,QAAA,EAAM,UAAAghB,EAAA,GAAU,EAAA,CACnB;AAAA,QAEA,gBAAAjhB,EAAC,OAAA,EAAI,WAAWC,GAAO,SACpB,UAAA;AAAA,UAAA4gB,KAAS,gBAAA3gB,EAAC,OAAA,EAAI,WAAWD,GAAO,OAAQ,UAAA4gB,GAAM;AAAA,UAC/C,gBAAA3gB,EAAC,OAAA,EAAI,WAAWD,GAAO,SAAU,UAAA6gB,GAAQ;AAAA,UACxCE,KACC,gBAAA9gB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWD,GAAO;AAAA,cAClB,SAAS,MAAM;AACb,gBAAA+gB,EAAO,QAAA,GACPhO,EAAA;AAAA,cACF;AAAA,cAEC,UAAAgO,EAAO;AAAA,YAAA;AAAA,UAAA;AAAA,QACV,GAEJ;AAAA,QAECpO,KACC,gBAAA1S;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAWD,GAAO;AAAA,YAClB,SAAS+S;AAAA,YACT,cAAW;AAAA,YACZ,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MAED;AAAA,IAAA;AAAA,EAAA;AAIR,GAGakO,KAAW,MAAM;AAC5B,QAAMjZ,IAAUC,EAAW6X,EAAY;AACvC,MAAI,CAAC9X;AACH,UAAM,IAAI,MAAM,8CAA8C;AAEhE,SAAOA;AACT;AAGA,IAAIyY,KAAuC;AAGpC,MAAMD,KAAqB,CAACU,MAA6B;AAC9D,EAAAT,KAAaS;AACf,GAGad,KAAQ;AAAA,EACnB,MAAM,CAACS,GAAiBxc,MACjBoc,KAIEA,GAAW,UAAU,EAAE,GAAGpc,GAAS,MAAM,QAAQ,SAAAwc,GAAS,KAH/D,QAAQ,KAAK,yEAAyE,GAC/E;AAAA,EAIX,SAAS,CAACA,GAAiBxc,MACpBoc,KAIEA,GAAW,UAAU,EAAE,GAAGpc,GAAS,MAAM,WAAW,SAAAwc,GAAS,KAHlE,QAAQ,KAAK,yEAAyE,GAC/E;AAAA,EAIX,SAAS,CAACA,GAAiBxc,MACpBoc,KAIEA,GAAW,UAAU,EAAE,GAAGpc,GAAS,MAAM,WAAW,SAAAwc,GAAS,KAHlE,QAAQ,KAAK,yEAAyE,GAC/E;AAAA,EAIX,OAAO,CAACA,GAAiBxc,MAClBoc,KAIEA,GAAW,UAAU,EAAE,GAAGpc,GAAS,MAAM,SAAS,SAAAwc,GAAS,KAHhE,QAAQ,KAAK,yEAAyE,GAC/E;AAIb;;;;;;;;;;;;;;;;;;;;GC/MMM,KAAgB9Z,GAAyC,IAAI,GAEtD+Z,KAASniB;AAAA,EACpB,CACE;AAAA,IACE,MAAAyL,IAAO;AAAA,IACP,cAAAL;AAAA,IACA,UAAAgX,IAAW;AAAA,IACX,sBAAAC,IAAuB;AAAA,IACvB,eAAA7I,IAAgB;AAAA,IAChB,MAAApZ,IAAO;AAAA,IACP,UAAAsM,IAAW;AAAA,IACX,SAAA4V,IAAU;AAAA,IACV,WAAA5gB,IAAY;AAAA,IACZ,cAAA+X;AAAA,IACA,WAAAvZ;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GAELC,MACG;AACH,UAAM,CAAC6T,GAAWC,CAAY,IAAI7S,EAAS,EAAK,GAC1CygB,IAAYtgB,EAA8B,IAAI,GAC9C0X,IAA2B1X,EAA2B,IAAI,GAG1DmC,IAAUC;AAAA,MACd,CAACC,MAAmC;AAClC,QAAAie,EAAU,UAAUje,GAChBzD,MACE,OAAOA,KAAQ,aACjBA,EAAIyD,CAAO,IAEXzD,EAAI,UAAUyD;AAAA,MAGpB;AAAA,MACA,CAACzD,CAAG;AAAA,IAAA,GAIA2hB,IAAQne,EAAY,MAAM;AAC9B,MAAIie,KACF3N,EAAa,EAAI,GACjB,WAAW,MAAM;AACf,QAAAvJ,KAAA,QAAAA,EAAe,KACfuJ,EAAa,EAAK;AAAA,MACpB,GAAG,GAAG,KAENvJ,KAAA,QAAAA,EAAe;AAAA,IAEnB,GAAG,CAACkX,GAASlX,CAAY,CAAC,GAGpBqX,IAAsBpe;AAAA,MAC1B,CAACgC,MAA4B;AAC3B,QAAIgc,KAAwBhc,EAAM,WAAWA,EAAM,iBACjDmc,EAAA;AAAA,MAEJ;AAAA,MACA,CAACH,GAAsBG,CAAK;AAAA,IAAA,GAIxB7f,IAAgB0B;AAAA,MACpB,CAACgC,MAAyB;AACxB,QAAIA,EAAM,QAAQ,YAAYmT,KAC5BgJ,EAAA;AAAA,MAEJ;AAAA,MACA,CAAChJ,GAAegJ,CAAK;AAAA,IAAA,GAIjBxI,IAAwB3V,EAAY,MAAM;AAC9C,UAAI,CAAC3C,KAAa,CAAC6gB,EAAU,QAAS;AAEtC,YAAMtI,IAAoBsI,EAAU,QAAQ;AAAA,QAC1C;AAAA,MAAA;AAGF,UAAI9I,GAAc;AAChB,cAAMS,IAAiBqI,EAAU,QAAQ,cAAc9I,CAAY;AACnE,YAAIS,GAAgB;AAClB,UAAAA,EAAe,MAAM,EAAE,eAAe,GAAA,CAAM;AAC5C;AAAA,QACF;AAAA,MACF;AAEA,MAAID,EAAkB,SAAS,IAC5BA,EAAkB,CAAC,EAAkB,MAAM,EAAE,eAAe,IAAM,IAEnEsI,EAAU,QAAQ,MAAM,EAAE,eAAe,IAAM;AAAA,IAEnD,GAAG,CAAC7gB,GAAW+X,CAAY,CAAC,GAGtBU,IAAkB9V,EAAY,CAACgC,MAAyB;AAC5D,UAAI,CAACkc,EAAU,WAAWlc,EAAM,QAAQ,MAAO;AAE/C,YAAM4T,IAAoBsI,EAAU,QAAQ;AAAA,QAC1C;AAAA,MAAA;AAGF,UAAItI,EAAkB,WAAW,EAAG;AAEpC,YAAMG,IAAeH,EAAkB,CAAC,GAClCI,IAAcJ,EAAkBA,EAAkB,SAAS,CAAC;AAElE,MAAI5T,EAAM,WACJ,SAAS,kBAAkB+T,MAC7BC,EAAY,MAAM,EAAE,eAAe,GAAA,CAAM,GACzChU,EAAM,eAAA,KAGJ,SAAS,kBAAkBgU,MAC7BD,EAAa,MAAM,EAAE,eAAe,GAAA,CAAM,GAC1C/T,EAAM,eAAA;AAAA,IAGZ,GAAG,CAAA,CAAE;AAGL,IAAAnE,EAAU,MAAM;AACd,UAAIuJ;AACF,eAAAkO,EAAyB,UAAU,SAAS,eAC5CK,EAAA,GAEA,SAAS,iBAAiB,WAAWrX,CAAa,GAClD,SAAS,iBAAiB,WAAWwX,CAAe,GAGpD,SAAS,KAAK,MAAM,WAAW,UAExB,MAAM;AACX,mBAAS,oBAAoB,WAAWxX,CAAa,GACrD,SAAS,oBAAoB,WAAWwX,CAAe,GACvD,SAAS,KAAK,MAAM,WAAW,IAG3BR,EAAyB,WAC3BA,EAAyB,QAAQ,MAAM,EAAE,eAAe,IAAM;AAAA,QAElE;AAAA,IAEJ,GAAG,CAAClO,GAAM9I,GAAewX,GAAiBH,CAAqB,CAAC;AAEhE,UAAMO,IAAmC;AAAA,MACvC,OAAAiI;AAAA,IAAA;AAGF,WAAI,CAAC/W,KAAQ,CAACiJ,IAAkB,OAEzByE;AAAA,MACL,gBAAAnY,EAACkhB,GAAc,UAAd,EAAuB,OAAO3H,GAC7B,UAAA,gBAAAvZ;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAWlB;AAAA,YACTiB,GAAO;AAAA,YACP;AAAA,cACE,CAACA,GAAO,OAAO,GAAGqhB;AAAA,cAClB,CAACrhB,GAAO,OAAO,GAAG2T;AAAA,YAAA;AAAA,UACpB;AAAA,UAEF,SAAS+N;AAAA,UAET,UAAA,gBAAAzhB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,KAAKoD;AAAA,cACL,WAAWtE;AAAA,gBACTiB,GAAO;AAAA,gBACPA,GAAOX,CAAI;AAAA,gBACXW,GAAO2L,CAAQ;AAAA,gBACf;AAAA,kBACE,CAAC3L,GAAO,OAAO,GAAGuhB;AAAA,kBAClB,CAACvhB,GAAO,OAAO,GAAG2T;AAAA,gBAAA;AAAA,gBAEpBxU;AAAA,cAAA;AAAA,cAEF,MAAK;AAAA,cACL,cAAW;AAAA,cACX,UAAU;AAAA,cACT,GAAGU;AAAA,cAEH,UAAAX;AAAA,YAAA;AAAA,UAAA;AAAA,QACH;AAAA,MAAA,GAEJ;AAAA,MACA,SAAS;AAAA,IAAA;AAAA,EAEb;AACF,GAGayiB,KAAe1iB;AAAA,EAC1B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG,EAAC,OAAA,EAAI,KAAAH,GAAU,WAAWf,EAAKiB,GAAO,QAAQb,CAAS,GAAI,GAAGU,GAC3D,UAAAX,EAAA,CACH;AAGN,GAEa0iB,KAAc3iB;AAAA,EACzB,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG,EAAC,MAAA,EAAG,KAAAH,GAAU,WAAWf,EAAKiB,GAAO,OAAOb,CAAS,GAAI,GAAGU,GACzD,UAAAX,EAAA,CACH;AAGN,GAEa2iB,KAAa5iB;AAAA,EACxB,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG,EAAC,OAAA,EAAI,KAAAH,GAAU,WAAWf,EAAKiB,GAAO,MAAMb,CAAS,GAAI,GAAGU,GACzD,UAAAX,EAAA,CACH;AAGN,GAEa4iB,KAAe7iB;AAAA,EAC1B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG,EAAC,OAAA,EAAI,KAAAH,GAAU,WAAWf,EAAKiB,GAAO,QAAQb,CAAS,GAAI,GAAGU,GAC3D,UAAAX,EAAA,CACH;AAGN,GAMa6iB,KAAc9iB;AAAA,EACzB,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,SAAAwK,GAAS,SAAAD,GAAS,GAAG5J,EAAA,GAASC,MAAQ;AAC5D,UAAMkI,IAAUC,EAAWkZ,EAAa,GAElCrX,IAAc,CAACjI,MAA2C;AAC9D,MAAA4H,KAAA,QAAAA,EAAU5H,IACVmG,KAAA,QAAAA,EAAS;AAAA,IACX;AAEA,WAAI0B,KAAWrD,EAAM,eAAenH,CAAQ,IACnCmH,EAAM,aAAanH,GAAmE;AAAA,MAC3F,SAAS4K;AAAA,IAAA,CACV,IAID,gBAAA7J;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,QACvC,SAAS2K;AAAA,QACT,cAAW;AAAA,QACV,GAAGjK;AAAA,QAEH,UAAAX,KAAY;AAAA,MAAA;AAAA,IAAA;AAAA,EAGnB;AACF,GAGa8iB,KAAY,MAAM;AAC7B,QAAMha,IAAUC,EAAWkZ,EAAa;AACxC,MAAI,CAACnZ;AACH,UAAM,IAAI,MAAM,kDAAkD;AAEpE,SAAOA;AACT;AAGAoZ,GAAO,cAAc;AACrBO,GAAa,cAAc;AAC3BC,GAAY,cAAc;AAC1BC,GAAW,cAAc;AACzBC,GAAa,cAAc;AAC3BC,GAAY,cAAc;AAG1B,MAAME,KAAkB,OAAO,OAAOb,IAAQ;AAAA,EAC5C,QAAQO;AAAA,EACR,OAAOC;AAAA,EACP,MAAMC;AAAA,EACN,QAAQC;AAAA,EACR,OAAOC;AACT,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GC3SKG,KAAgB7a,GAAyC,IAAI,GAE7D8a,KAAY,MAAM;AACtB,QAAMna,IAAUC,EAAWia,EAAa;AACxC,MAAI,CAACla;AACH,UAAM,IAAI,MAAM,gDAAgD;AAElE,SAAOA;AACT,GAEMoa,KAAS/b,EAAM;AAAA,EACnB,CAAC;AAAA,IACC,MAAAqE;AAAA,IACA,aAAAP,IAAc;AAAA,IACd,cAAAE;AAAA,IACA,WAAA7C,IAAY;AAAA,IACZ,MAAAnI,IAAO;AAAA,IACP,SAAAD,IAAU;AAAA,IACV,WAAAD;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM,CAAC4E,GAAQC,CAAS,IAAI5D,EAAS2J,KAAQP,CAAW;AAGxD,IAAAhJ,EAAU,MAAM;AACd,MAAIuJ,MAAS,UACX/F,EAAU+F,CAAI;AAAA,IAElB,GAAG,CAACA,CAAI,CAAC;AAET,UAAM2X,IAAmB/e,EAAY,CAACwH,MAAqB;AACzD,MAAAnG,EAAUmG,CAAO,GACjBT,KAAA,QAAAA,EAAeS;AAAA,IACjB,GAAG,CAACT,CAAY,CAAC,GAEXmP,IAAmC;AAAA,MACvC,MAAM9U;AAAA,MACN,SAAS2d;AAAA,MACT,WAAA7a;AAAA,MACA,MAAAnI;AAAA,MACA,SAAAD;AAAA,IAAA;AAGF,WACE,gBAAAa,EAACiiB,GAAc,UAAd,EAAuB,OAAO1I,GAC7B,UAAA,gBAAAvZ,EAAC,OAAA,EAAI,KAAAH,GAAU,WAAAX,GAAuB,GAAGU,GACtC,UAAAX,GACH,GACF;AAAA,EAEJ;AACF,GAQMojB,KAAgBjc,EAAM;AAAA,EAC1B,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,SAAAuK,IAAU,IAAO,GAAG7J,EAAA,GAASC,MAAQ;AAC3D,UAAM,EAAE,SAAA+K,EAAA,IAAYsX,GAAA;AAEpB,WAAIzY,IACKrD,EAAM,aAAanH,GAAgC;AAAA,MACxD,SAAS,MAAM2L,EAAQ,EAAI;AAAA,MAC3B,GAAGhL;AAAA,IAAA,CACJ,IAID,gBAAAI;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,SAASb,CAAS;AAAA,QACzC,SAAS,MAAM0L,EAAQ,EAAI;AAAA,QAC1B,GAAGhL;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAUMqjB,KAAgBlc,EAAM;AAAA,EAC1B,CAAC;AAAA,IACC,UAAAnH;AAAA,IACA,WAAAC;AAAA,IACA,aAAAqjB,IAAc;AAAA,IACd,qBAAAC,IAAsB;AAAA,IACtB,eAAAhK,IAAgB;AAAA,IAChB,GAAG5Y;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM,EAAE,MAAA4K,GAAM,SAAAG,GAAS,WAAArD,GAAW,MAAAnI,GAAM,SAAAD,EAAA,IAAY+iB,GAAA;AAgDpD,QA7CAhhB,EAAU,MAAM;AACd,UAAI,CAACsX,KAAiB,CAAC/N,EAAM;AAE7B,YAAMgY,IAAe,CAAC7gB,MAAqB;AACzC,QAAIA,EAAE,QAAQ,YACZgJ,EAAQ,EAAK;AAAA,MAEjB;AAEA,sBAAS,iBAAiB,WAAW6X,CAAY,GAC1C,MAAM,SAAS,oBAAoB,WAAWA,CAAY;AAAA,IACnE,GAAG,CAAChY,GAAM+N,GAAe5N,CAAO,CAAC,GAGjC1J,EAAU,MAAM;AACd,UAAIuJ,GAAM;AACR,cAAMiY,IAAgB,OAAO,iBAAiB,SAAS,IAAI,EAAE;AAC7D,wBAAS,KAAK,MAAM,WAAW,UACxB,MAAM;AACX,mBAAS,KAAK,MAAM,WAAWA;AAAA,QACjC;AAAA,MACF;AAAA,IACF,GAAG,CAACjY,CAAI,CAAC,GAGTvJ,EAAU,MAAM;AACd,UAAIuJ,GAAM;AACR,cAAMkY,IAAgB,SAAS,eACzBC,IAAgB,SAAS,cAAc,uBAAuB;AACpE,YAAIA,GAAe;AACjB,gBAAMC,IAAmBD,EAAc;AAAA,YACrC;AAAA,UAAA;AAEF,UAAIC,KACFA,EAAiB,MAAA;AAAA,QAErB;AACA,eAAO,MAAM;AACX,UAAIF,KACFA,EAAc,MAAA;AAAA,QAElB;AAAA,MACF;AAAA,IACF,GAAG,CAAClY,CAAI,CAAC,GAEL,CAACA,EAAM,QAAO;AAElB,UAAMyB,IACJ,gBAAApM,EAAAsY,IAAA,EACG,UAAA;AAAA,MAAAmK,KACC,gBAAAviB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAWD,GAAO;AAAA,UAClB,SAAS,MAAMyiB,KAAuB5X,EAAQ,EAAK;AAAA,UACnD,eAAY;AAAA,QAAA;AAAA,MAAA;AAAA,MAGhB,gBAAA5K;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAWf;AAAA,YACTiB,GAAO;AAAA,YACPA,GAAO,YAAYwH,CAAS,EAAE;AAAA,YAC9BxH,GAAO,YAAYX,CAAI,EAAE;AAAA,YACzBW,GAAO,YAAYZ,CAAO,EAAE;AAAA,YAC5BD;AAAA,UAAA;AAAA,UAEF,MAAK;AAAA,UACL,cAAW;AAAA,UACX,uBAAmB;AAAA,UACnB,cAAYuL,IAAO,SAAS;AAAA,UAC3B,GAAG7K;AAAA,UAEH,UAAAX;AAAA,QAAA;AAAA,MAAA;AAAA,IACH,GACF;AAGF,WAAOkZ,GAAajM,GAAS,SAAS,IAAI;AAAA,EAC5C;AACF,GAOM4W,KAAe1c,EAAM;AAAA,EACzB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,QAAQb,CAAS;AAAA,MACvC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAOM8jB,KAAc3c,EAAM;AAAA,EACxB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,MACtC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAOM+jB,KAAoB5c,EAAM;AAAA,EAC9B,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,aAAab,CAAS;AAAA,MAC5C,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAOMgkB,KAAa7c,EAAM;AAAA,EACvB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACrC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAOMikB,KAAe9c,EAAM;AAAA,EACzB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,QAAQb,CAAS;AAAA,MACvC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAQMkkB,KAAc/c,EAAM;AAAA,EACxB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,SAAAuK,IAAU,IAAO,GAAG7J,EAAA,GAASC,MAAQ;AAC3D,UAAM,EAAE,SAAA+K,EAAA,IAAYsX,GAAA;AAEpB,WAAIzY,IACKrD,EAAM,aAAanH,GAAgC;AAAA,MACxD,SAAS,MAAM2L,EAAQ,EAAK;AAAA,MAC5B,GAAGhL;AAAA,IAAA,CACJ,IAID,gBAAAI;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,QACvC,SAAS,MAAM0L,EAAQ,EAAK;AAAA,QAC5B,cAAW;AAAA,QACV,GAAGhL;AAAA,QAEH,UAAAX,KACC,gBAAAe;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,OAAM;AAAA,YACN,QAAO;AAAA,YACP,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,OAAM;AAAA,YAEN,UAAA,gBAAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,GAAE;AAAA,gBACF,QAAO;AAAA,gBACP,aAAY;AAAA,gBACZ,eAAc;AAAA,gBACd,gBAAe;AAAA,cAAA;AAAA,YAAA;AAAA,UACjB;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAAA,EAIR;AACF;AAGAmiB,GAAO,cAAc;AACrBE,GAAc,cAAc;AAC5BC,GAAc,cAAc;AAC5BQ,GAAa,cAAc;AAC3BC,GAAY,cAAc;AAC1BC,GAAkB,cAAc;AAChCC,GAAW,cAAc;AACzBC,GAAa,cAAc;AAC3BC,GAAY,cAAc;AAc1B,MAAMC,KAA0BjB;AAChCiB,GAAwB,UAAUf;AAClCe,GAAwB,UAAUd;AAClCc,GAAwB,SAASN;AACjCM,GAAwB,QAAQL;AAChCK,GAAwB,cAAcJ;AACtCI,GAAwB,OAAOH;AAC/BG,GAAwB,SAASF;AACjCE,GAAwB,QAAQD;;;;;;;;;;;;;GCxV1BE,KAAkBjc,GAA2C,IAAI,GAE1Dkc,KAKT,CAAC;AAAA,EACH,UAAArkB;AAAA,EACA,MAAMkL;AAAA,EACN,cAAAC;AAAA,EACA,UAAAsB,IAAW;AAAA,EACX,QAAA6X,IAAS;AAAA,EACT,kBAAAC,IAAmB;AAAA,EACnB,qBAAAjL,IAAsB;AAAA,EACtB,eAAAC,IAAgB;AAAA,EAChB,WAAAtZ;AACF,MAAM;AACJ,QAAM,CAACuL,GAAMG,CAAO,IAAI9J,EAAS,EAAK,GAChC,CAAC4V,GAAgBC,CAAiB,IAAI7V,EAA2B4K,CAAQ,GACzE,CAACkL,GAAQC,CAAS,IAAI/V,EAAS,EAAE,GAAG,GAAG,GAAG,GAAG,GAC7CkE,IAAa/D,EAA2B,IAAI,GAC5C8D,IAAc9D,EAA8B,IAAI,GAEhDwD,IAAS0F,MAAmB,SAAYA,IAAiBM;AAG/D,MAAIuN,IAA4C,MAC5CyL,IAA+B;AAEnC,EAAArd,EAAM,SAAS,QAAQnH,GAAU,CAACoH,MAAU;AAC1C,IAAID,EAAM,eAAeC,CAAK,MACxBA,EAAM,SAASqd,KACjBD,IAAcpd,EAAM,MAAM,WAE1B2R,IAAiB3R;AAAA,EAGvB,CAAC;AAGD,QAAM6Q,IAAoB7T,EAAY,MAAM;AAC1C,QAAI,CAAC2B,EAAW,WAAW,CAACD,EAAY,QAAS;AAEjD,UAAMoH,IAAcnH,EAAW,QAAQ,sBAAA,GACjC2e,IAAe5e,EAAY,QAAQ,sBAAA,GACnCsH,IAAgB,OAAO,YACvBC,IAAiB,OAAO;AAE9B,QAAIiL,IAAI,GACJC,IAAI;AAGR,UAAM,CAACoM,GAAMC,CAAS,IAAInY,EAAS,MAAM,GAAG;AAE5C,YAAQkY,GAAA;AAAA,MACN,KAAK;AACH,QAAApM,IAAIrL,EAAY,SAASoX;AACzB;AAAA,MACF,KAAK;AACH,QAAA/L,IAAIrL,EAAY,MAAMwX,EAAa,SAASJ;AAC5C;AAAA,MACF,KAAK;AACH,QAAAhM,IAAIpL,EAAY,OAAOwX,EAAa,QAAQJ;AAC5C;AAAA,MACF,KAAK;AACH,QAAAhM,IAAIpL,EAAY,QAAQoX;AACxB;AAAA,IAAA;AAIJ,QAAIK,MAAS,YAAYA,MAAS;AAChC,cAAQC,GAAA;AAAA,QACN,KAAK;AACH,UAAAtM,IAAIpL,EAAY;AAChB;AAAA,QACF,KAAK;AACH,UAAAoL,IAAIpL,EAAY,QAAQwX,EAAa;AACrC;AAAA,QACF;AACE,UAAApM,IAAIpL,EAAY,OAAOA,EAAY,QAAQ,IAAIwX,EAAa,QAAQ;AAAA,MAAA;AAAA,aAE/DC,MAAS,UAAUA,MAAS;AACrC,cAAQC,GAAA;AAAA,QACN,KAAK;AACH,UAAArM,IAAIrL,EAAY;AAChB;AAAA,QACF,KAAK;AACH,UAAAqL,IAAIrL,EAAY,SAASwX,EAAa;AACtC;AAAA,QACF;AACE,UAAAnM,IAAIrL,EAAY,MAAMA,EAAY,SAAS,IAAIwX,EAAa,SAAS;AAAA,MAAA;AAK3E,IAAApM,IAAI,KAAK,IAAI,GAAG,KAAK,IAAIA,GAAGlL,IAAgBsX,EAAa,QAAQ,CAAC,CAAC,GACnEnM,IAAI,KAAK,IAAI,GAAG,KAAK,IAAIA,GAAGlL,IAAiBqX,EAAa,SAAS,CAAC,CAAC,GAErEhN,EAAkBjL,CAAQ,GAC1BmL,EAAU;AAAA,MACR,GAAAU;AAAA,MACA,GAAAC;AAAA,IAAA,CACD;AAAA,EACH,GAAG,CAAC9L,GAAU6X,CAAM,CAAC,GAGfO,IAAiBzgB,EAAY,MAAM;AACvC,IAAI8G,MAAmB,UACrBS,EAAQ,CAAAnF,MAAQ,CAACA,CAAI,GAEvB2E,KAAA,QAAAA,EAAe,CAAC3F;AAAA,EAClB,GAAG,CAAC0F,GAAgB1F,GAAQ2F,CAAY,CAAC,GAGnC2Z,IAAgB1gB,EAAY,MAAM;AACtC,IAAI8G,MAAmB,UACrBS,EAAQ,EAAK,GAEfR,KAAA,QAAAA,EAAe;AAAA,EACjB,GAAG,CAACD,GAAgBC,CAAY,CAAC,GAG3BhF,IAAqB/B,EAAY,CAACgC,MAAsB;AAC5D,QAAI,CAACkT,KAAuB,CAAC9T,EAAQ;AAErC,UAAMsU,IAAS1T,EAAM;AACrB,IACEN,EAAY,WACZC,EAAW,WACX,CAACD,EAAY,QAAQ,SAASgU,CAAM,KACpC,CAAC/T,EAAW,QAAQ,SAAS+T,CAAM,KAEnCgL,EAAA;AAAA,EAEJ,GAAG,CAACxL,GAAqB9T,GAAQsf,CAAa,CAAC,GAGzCpiB,IAAgB0B,EAAY,CAACgC,MAAyB;AAC1D,IAAIA,EAAM,QAAQ,YAAYmT,KAAiB/T,KAC7Csf,EAAA;AAAA,EAEJ,GAAG,CAACvL,GAAe/T,GAAQsf,CAAa,CAAC;AAGzC,EAAA7iB,EAAU,MAAM;AACd,QAAIuD,GAAQ;AACV,MAAAyS,EAAA;AAEA,YAAMtT,IAAe,MAAMsT,EAAA,GACrBa,IAAe,MAAM;AAGzB,YAFAb,EAAA,GAEIlS,EAAW,SAAS;AACtB,gBAAMgf,IAAOhf,EAAW,QAAQ,sBAAA;AAChC,WAAIgf,EAAK,SAAS,KAAKA,EAAK,MAAM,OAAO,gBACvCD,EAAA;AAAA,QAEJ;AAAA,MACF;AAEA,oBAAO,iBAAiB,UAAUngB,CAAY,GAC9C,OAAO,iBAAiB,UAAUmU,GAAc,EAAI,GACpD,SAAS,iBAAiB,aAAa3S,CAAkB,GACzD,SAAS,iBAAiB,WAAWzD,CAAa,GAE3C,MAAM;AACX,eAAO,oBAAoB,UAAUiC,CAAY,GACjD,OAAO,oBAAoB,UAAUmU,GAAc,EAAI,GACvD,SAAS,oBAAoB,aAAa3S,CAAkB,GAC5D,SAAS,oBAAoB,WAAWzD,CAAa;AAAA,MACvD;AAAA,IACF;AAAA,EACF,GAAG,CAAC8C,GAAQyS,GAAmB9R,GAAoBzD,CAAa,CAAC;AAGjE,QAAMsK,IAAU+L,KAAkB5R,EAAM,eAAe4R,CAAc,IAAI5R,EAAM,aAAa4R,GAAgB;AAAA,IAC1G,KAAK,CAAC7V,MAA2B;AAC/B,MAAA6C,EAAW,UAAU7C;AAAA,IACvB;AAAA,IACA,SAAS,CAACP,MAAwB;;AAChC,OAAAN,IAAA0W,KAAA,iBAAA3W,IAAA2W,EAAgB,OAAM,YAAtB,QAAA1W,EAAA,KAAAD,GAAgCO,IAChCkiB,EAAA;AAAA,IACF;AAAA,IACA,iBAAiBrf;AAAA,IACjB,iBAAiB;AAAA,EAAA,CAClB,IAAI,MAEC8U,IAAqC;AAAA,IACzC,OAAOwK;AAAA,IACP,kBAAAP;AAAA,EAAA;AAGF,SACE,gBAAA1jB,EAAAsY,IAAA,EACG,UAAA;AAAA,IAAAnM;AAAA,IACAxH,KAAU0T;AAAA,MACT,gBAAAnY,EAACqjB,GAAgB,UAAhB,EAAyB,OAAO9J,GAC/B,UAAA,gBAAAvZ;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAK+E;AAAA,UACL,WAAWjG;AAAA,YACTiB,GAAO;AAAA,YACPA,GAAO2W,EAAe,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA,YACnCxX;AAAA,UAAA;AAAA,UAEF,OAAO;AAAA,YACL,UAAU;AAAA,YACV,MAAM0X,EAAO;AAAA,YACb,KAAKA,EAAO;AAAA,YACZ,QAAQ;AAAA,UAAA;AAAA,UAEV,MAAK;AAAA,UACL,oBAAiB;AAAA,UAEhB,UAAA6M;AAAA,QAAA;AAAA,MAAA,GAEL;AAAA,MACA,SAAS;AAAA,IAAA;AAAA,EACX,GACF;AAEJ,GAGaC,KAAe1kB;AAAA,EAC1B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG,EAAC,OAAA,EAAI,KAAAH,GAAU,WAAWf,EAAKiB,GAAO,MAAMb,CAAS,GAAI,GAAGU,GACzD,UAAAX,EAAA,CACH;AAGN,GAcaglB,KAAejlB;AAAA,EAC1B,CAAC,EAAE,WAAAE,GAAW,UAAAS,GAAU,aAAAukB,GAAa,MAAA3S,GAAM,UAAA4S,GAAU,UAAAllB,GAAU,SAAAuK,GAAS,GAAG5J,EAAA,GAASC,MAAQ;AAC1F,UAAMkI,IAAUC,EAAWqb,EAAe,GAEpCxZ,IAAc,CAACjI,MAAwC;AAC3D,MAAIjC,MAEJ6J,KAAA,QAAAA,EAAU5H,IACNmG,KAAA,QAAAA,EAAS,oBACXA,EAAQ,MAAA;AAAA,IAEZ;AAEA,WACE,gBAAAjI;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACP;AAAA,YACE,CAACA,GAAO,QAAQ,GAAGJ;AAAA,YACnB,CAACI,GAAO,WAAW,GAAGmkB;AAAA,UAAA;AAAA,UAExBhlB;AAAA,QAAA;AAAA,QAEF,MAAK;AAAA,QACL,UAAUS,IAAW,KAAK;AAAA,QAC1B,SAASkK;AAAA,QACR,GAAGjK;AAAA,QAEH,UAAA;AAAA,UAAA2R,KAAQ,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAO,UAAAwR,GAAK;AAAA,UAC7C,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAO,UAAAd,GAAS;AAAA,UACvCklB,KAAY,gBAAAnkB,EAAC,QAAA,EAAK,WAAWD,GAAO,UAAW,UAAAokB,EAAA,CAAS;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAG/D;AACF,GAGaC,KAAoBplB;AAAA,EAC/B,CAAC,EAAE,WAAAE,GAAW,GAAGU,EAAA,GAASC,MAEtB,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,WAAWb,CAAS;AAAA,MAC3C,MAAK;AAAA,MACJ,GAAGU;AAAA,IAAA;AAAA,EAAA;AAIZ,GAGaykB,KAAgBrlB;AAAA,EAC3B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,MACtC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAGaqlB,KAAc,MAAM;AAC/B,QAAMvc,IAAUC,EAAWqb,EAAe;AAC1C,MAAI,CAACtb;AACH,UAAM,IAAI,MAAM,sDAAsD;AAExE,SAAOA;AACT;AAGA2b,GAAa,cAAc;AAC3BO,GAAa,cAAc;AAC3BG,GAAkB,cAAc;AAChCC,GAAc,cAAc;AAG5Bf,GAAS,OAAOI;AAChBJ,GAAS,OAAOW;AAChBX,GAAS,YAAYc;AACrBd,GAAS,QAAQe;;;;;;;;;;;;;;;;GCpVXE,KAAcnd,GAAuC,IAAI,GAElDod,KAAOxlB;AAAA,EAClB,CACE;AAAA,IACE,cAAA6D,IAAe;AAAA,IACf,OAAOyE;AAAA,IACP,eAAApB;AAAA,IACA,aAAA8J,IAAc;AAAA,IACd,MAAA5Q,IAAO;AAAA,IACP,WAAAC,IAAY;AAAA,IACZ,WAAAH;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GAELC,MACG;AACH,UAAM,CAACiD,GAAeC,CAAgB,IAAIjC,EAAS+B,CAAY,GACzD4hB,IAAYnd,MAAoB,SAAYA,IAAkBxE,GAE9D4hB,IAAerhB,EAAY,CAACQ,MAAqB;AACrD,MAAIyD,MAAoB,UACtBvE,EAAiBc,CAAQ,GAE3BqC,KAAA,QAAAA,EAAgBrC;AAAA,IAClB,GAAG,CAACyD,GAAiBpB,CAAa,CAAC,GAE7BqT,IAAiC;AAAA,MACrC,WAAAkL;AAAA,MACA,cAAAC;AAAA,MACA,aAAA1U;AAAA,MACA,MAAA5Q;AAAA,IAAA;AAGF,WACE,gBAAAY,EAACukB,GAAY,UAAZ,EAAqB,OAAOhL,GAC3B,UAAA,gBAAAvZ;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOiQ,CAAW;AAAA,UAClBjQ,GAAOX,CAAI;AAAA,UACX;AAAA,YACE,CAACW,GAAO,SAAS,GAAGV;AAAA,UAAA;AAAA,UAEtBH;AAAA,QAAA;AAAA,QAED,GAAGU;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA,GAEL;AAAA,EAEJ;AACF,GAQa0lB,KAAW3lB;AAAA,EACtB,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAAQ;AAC1C,UAAMkI,IAAUC,EAAWuc,EAAW;AACtC,QAAI,CAACxc;AACH,YAAM,IAAI,MAAM,mCAAmC;AAGrD,WACE,gBAAA/H;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOgI,EAAQ,WAAW;AAAA,UAC1B7I;AAAA,QAAA;AAAA,QAEF,MAAK;AAAA,QACL,oBAAkB6I,EAAQ;AAAA,QACzB,GAAGnI;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAYa2lB,KAAc5lB;AAAA,EACzB,CAAC,EAAE,OAAAuB,GAAO,UAAAZ,GAAU,WAAAT,GAAW,UAAAD,GAAU,SAAAuK,GAAS,GAAG5J,EAAA,GAASC,MAAQ;AACpE,UAAMkI,IAAUC,EAAWuc,EAAW;AACtC,QAAI,CAACxc;AACH,YAAM,IAAI,MAAM,sCAAsC;AAGxD,UAAM8c,IAAW9c,EAAQ,cAAcxH,GAEjCsJ,IAAc,CAACjI,MAA2C;AAC9D,MAAKjC,MACHoI,EAAQ,aAAaxH,CAAK,GAC1BiJ,KAAA,QAAAA,EAAU5H;AAAA,IAEd;AAEA,WACE,gBAAA5B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOgI,EAAQ,IAAI;AAAA,UACnB;AAAA,YACE,CAAChI,GAAO,MAAM,GAAG8kB;AAAA,YACjB,CAAC9kB,GAAO,QAAQ,GAAGJ;AAAA,UAAA;AAAA,UAErBT;AAAA,QAAA;AAAA,QAEF,MAAK;AAAA,QACL,iBAAe2lB;AAAA,QACf,iBAAe,YAAYtkB,CAAK;AAAA,QAChC,IAAI,OAAOA,CAAK;AAAA,QAChB,UAAUskB,IAAW,IAAI;AAAA,QACzB,UAAAllB;AAAA,QACA,SAASkK;AAAA,QACR,GAAGjK;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAYa6lB,KAAc9lB;AAAA,EACzB,CAAC,EAAE,OAAAuB,GAAO,YAAAwkB,IAAa,IAAO,WAAA7lB,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAAQ;AACrE,UAAMkI,IAAUC,EAAWuc,EAAW;AACtC,QAAI,CAACxc;AACH,YAAM,IAAI,MAAM,sCAAsC;AAGxD,UAAM8c,IAAW9c,EAAQ,cAAcxH;AAEvC,WAAI,CAACskB,KAAY,CAACE,IACT,OAIP,gBAAA/kB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACP;AAAA,YACE,CAACA,GAAO,MAAM,GAAG8kB;AAAA,YACjB,CAAC9kB,GAAO,QAAQ,GAAG,CAAC8kB;AAAA,UAAA;AAAA,UAEtB3lB;AAAA,QAAA;AAAA,QAEF,MAAK;AAAA,QACL,mBAAiB,OAAOqB,CAAK;AAAA,QAC7B,IAAI,YAAYA,CAAK;AAAA,QACrB,UAAU;AAAA,QACV,QAAQ,CAACskB;AAAA,QACR,GAAGjlB;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAGa+lB,KAAU,MAAM;AAC3B,QAAMjd,IAAUC,EAAWuc,EAAW;AACtC,MAAI,CAACxc;AACH,UAAM,IAAI,MAAM,kCAAkC;AAEpD,SAAOA;AACT;AAGAyc,GAAK,cAAc;AACnBG,GAAS,cAAc;AACvBC,GAAY,cAAc;AAC1BE,GAAY,cAAc;AAG1B,MAAMG,KAAgB,OAAO,OAAOT,IAAM;AAAA,EACxC,MAAMG;AAAA,EACN,SAASC;AAAA,EACT,SAASE;AACX,CAAC;;;;;;;;;;;;GC5NYI,KAAYlmB;AAAA,EACvB,CACE;AAAA,IACE,MAAAI,IAAO;AAAA,IACP,UAAA+lB,IAAW;AAAA,IACX,SAAAlS,IAAU;AAAA,IACV,WAAA/T;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GAELC,MAGE,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAOX,CAAI;AAAA,QACXW,GAAO,WAAWkT,CAAO,EAAE;AAAA,QAC3B;AAAA,UACE,CAAClT,GAAO,QAAQ,GAAGolB;AAAA,QAAA;AAAA,QAErBjmB;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT;AAEAimB,GAAU,cAAc;;;;;;;;;;;;;;;;;;;;;;GC1BXE,KAAQpmB;AAAA,EACnB,CACE;AAAA,IACE,WAAAuI,IAAY;AAAA,IACZ,KAAA6M,IAAM;AAAA,IACN,OAAAhJ,IAAQ;AAAA,IACR,SAAAia,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,IAAIrY,IAAY;AAAA,IAChB,WAAA/N;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GAELC,MAGE,gBAAAG;AAAA,IAACiN;AAAA,IAAA;AAAA,MACC,KAAApN;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAOwH,CAAS;AAAA,QAChBxH,GAAO,OAAOqU,CAAG,EAAE;AAAA,QACnBrU,GAAO,SAASqL,CAAK,EAAE;AAAA,QACvBrL,GAAO,WAAWslB,CAAO,EAAE;AAAA,QAC3B;AAAA,UACE,CAACtlB,GAAO,IAAI,GAAGulB;AAAA,QAAA;AAAA,QAEjBpmB;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT;AAEAmmB,GAAM,cAAc;;;;;;;;;GCnCPG,KAAavmB;AAAA,EACxB,CAAC,EAAE,WAAAwmB,IAAY,KAAK,WAAAtmB,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEjD,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,cAAW;AAAA,MACX,WAAWf,EAAKiB,GAAO,YAAYb,CAAS;AAAA,MAC3C,GAAGU;AAAA,MAEJ,UAAA,gBAAAI,EAAC,MAAA,EAAG,WAAWD,GAAO,MACnB,UAAAqG,EAAM,SAAS,IAAInH,GAAU,CAACoH,GAAOjF,MAAU;AAC9C,YAAI,CAACgF,EAAM,eAAeC,CAAK,EAAG,QAAO;AAEzC,cAAMof,IAASrkB,MAAUgF,EAAM,SAAS,MAAMnH,CAAQ,IAAI;AAE1D,eACE,gBAAAa,EAAAsY,IAAA,EACG,UAAA;AAAA,UAAA/R;AAAA,UACA,CAACof,KACA,gBAAAzlB,EAAC,MAAA,EAAG,WAAWD,GAAO,WAAW,eAAY,QAC1C,UAAAylB,EAAA,CACH;AAAA,QAAA,GAEJ;AAAA,MAEJ,CAAC,EAAA,CACH;AAAA,IAAA;AAAA,EAAA;AAIR,GAEaE,KAAiB1mB;AAAA,EAC5B,CAAC,EAAE,eAAA2mB,IAAgB,IAAO,WAAAzmB,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEvD,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACP;AAAA,UACE,CAACA,GAAO,OAAO,GAAG4lB;AAAA,QAAA;AAAA,QAEpBzmB;AAAA,MAAA;AAAA,MAEF,gBAAcymB,IAAgB,SAAS;AAAA,MACtC,GAAG/lB;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEa2mB,KAAiB5mB;AAAA,EAC5B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACrC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEa4mB,KAAiB7mB;AAAA,EAC5B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACrC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT;AAGAsmB,GAAW,cAAc;AACzBG,GAAe,cAAc;AAC7BE,GAAe,cAAc;AAC7BC,GAAe,cAAc;AAGD,OAAO,OAAON,IAAY;AAAA,EACpD,MAAMG;AAAA,EACN,MAAME;AAAA,EACN,MAAMC;AACR,CAAC;;;;;;;;;;;;;;;;;;;;;GC1CKC,KAAiB1e,GAA0C,IAAI,GAExD2e,KAAU/mB;AAAA,EACrB,CACE;AAAA,IACE,aAAAgnB,IAAc;AAAA,IACd,WAAAC,IAAY;AAAA,IACZ,mBAAmBC;AAAA,IACnB,MAAA/a,IAAO;AAAA,IACP,SAAAhM,IAAU;AAAA,IACV,WAAAD;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GAELC,MACG;AACH,UAAM0Z,IAAoC;AAAA,MACxC,WAAA0M;AAAA,MACA,aAAAD;AAAA,IAAA;AAGF,WACE,gBAAAhmB,EAAC8lB,GAAe,UAAf,EAAwB,OAAOvM,GAC9B,UAAA,gBAAAvZ;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAOoL,CAAI;AAAA,UACXpL,GAAOZ,CAAO;AAAA,UACd;AAAA,YACE,CAACY,GAAO,SAAS,GAAGkmB;AAAA,YACpB,CAAClmB,GAAO,WAAW,GAAGimB;AAAA,UAAA;AAAA,UAExB9mB;AAAA,QAAA;AAAA,QAEF,gBAAa;AAAA,QACb,kBAAgB+mB;AAAA,QACf,GAAGrmB;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA,GAEL;AAAA,EAEJ;AACF,GAEaknB,KAAgBnnB;AAAA,EAC3B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,QAAQb,CAAS;AAAA,MACxC,gBAAa;AAAA,MACZ,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEamnB,KAAiBpnB;AAAA,EAC5B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,SAASb,CAAS;AAAA,MACzC,gBAAa;AAAA,MACZ,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEaonB,KAAgBrnB;AAAA,EAC3B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,QAAQb,CAAS;AAAA,MACxC,gBAAa;AAAA,MACZ,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEaqnB,KAAetnB;AAAA,EAC1B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,MACvC,gBAAa;AAAA,MACZ,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEasnB,KAAoBvnB;AAAA,EAC/B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,YAAYb,CAAS;AAAA,MAC5C,gBAAa;AAAA,MACZ,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEaunB,KAAsBxnB;AAAA,EACjC,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,cAAcb,CAAS;AAAA,MAC9C,gBAAa;AAAA,MACZ,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEawnB,KAAcznB;AAAA,EACzB,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACtC,gBAAa;AAAA,MACZ,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEaynB,KAAkB1nB;AAAA,EAC7B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,UAAUb,CAAS;AAAA,MAC1C,gBAAa;AAAA,MACZ,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEa0nB,KAAoB3nB;AAAA,EAC/B,CAAC,EAAE,UAAA6lB,IAAW,IAAO,MAAAtT,GAAM,WAAArS,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAAQ;AAClE,UAAMkI,IAAUC,EAAW8d,EAAc;AAEzC,WACE,gBAAAhmB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACP;AAAA,YACE,CAACA,GAAO,MAAM,GAAG8kB;AAAA,YACjB,CAAC9kB,GAAO,QAAQ,GAAG,CAAC,CAACwR;AAAA,UAAA;AAAA,UAEvBrS;AAAA,QAAA;AAAA,QAEF,gBAAa;AAAA,QACb,eAAa2lB;AAAA,QACZ,GAAGjlB;AAAA,QAEH,UAAA;AAAA,UAAA2R,uBACE,QAAA,EAAK,WAAWxR,GAAO,MAAM,gBAAa,QACxC,UAAAwR,EAAA,CACH;AAAA,WAEA,EAACxJ,KAAA,QAAAA,EAAS,cAAa,EAACA,KAAA,QAAAA,EAAS,iBACjC,gBAAA/H,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAM,gBAAa,QACxC,UAAAd,EAAA,CACH;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF,GAGa2nB,KAAa,MAAM;AAC9B,QAAM7e,IAAUC,EAAW8d,EAAc;AACzC,MAAI,CAAC/d;AACH,UAAM,IAAI,MAAM,oDAAoD;AAEtE,SAAOA;AACT;AAGAge,GAAQ,cAAc;AACtBI,GAAc,cAAc;AAC5BC,GAAe,cAAc;AAC7BC,GAAc,cAAc;AAC5BC,GAAa,cAAc;AAC3BC,GAAkB,cAAc;AAChCC,GAAoB,cAAc;AAClCC,GAAY,cAAc;AAC1BC,GAAgB,cAAc;AAC9BC,GAAkB,cAAc;AAGP,OAAO,OAAOZ,IAAS;AAAA,EAC9C,QAAQI;AAAA,EACR,SAASC;AAAA,EACT,QAAQC;AAAA,EACR,OAAOC;AAAA,EACP,YAAYC;AAAA,EACZ,cAAcC;AAAA,EACd,MAAMC;AAAA,EACN,UAAUC;AAAA,EACV,YAAYC;AACd,CAAC;;;;;;;;;;;;;;GC5PYE,KAAa7nB;AAAA,EACxB,CAAC,EAAE,UAAA8nB,IAAW,IAAO,MAAA1nB,IAAO,MAAM,WAAAF,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAE/D,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACP;AAAA,UACE,CAACA,GAAO,QAAQ,GAAG+mB;AAAA,UACnB,CAAC/mB,GAAOX,CAAI,CAAC,GAAGA;AAAA,QAAA;AAAA,QAElBF;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEa8nB,KAAiB/nB;AAAA,EAC5B,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACrC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEa+nB,KAAiBhoB;AAAA,EAC5B,CAAC,EAAE,UAAA6lB,GAAU,UAAAllB,GAAU,WAAAT,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEpD,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACP;AAAA,UACE,CAACA,GAAO,MAAM,GAAG8kB;AAAA,UACjB,CAAC9kB,GAAO,QAAQ,GAAGJ;AAAA,QAAA;AAAA,QAErBT;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEagoB,KAAiBjoB;AAAA,EAC5B,CAAC,EAAE,MAAAkoB,GAAM,UAAArC,GAAU,UAAAllB,GAAU,MAAA4R,GAAM,WAAArS,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhE,gBAAAC;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAD;AAAA,MACA,MAAMF,IAAW,SAAYunB;AAAA,MAC7B,WAAWpoB;AAAA,QACTiB,GAAO;AAAA,QACP;AAAA,UACE,CAACA,GAAO,MAAM,GAAG8kB;AAAA,UACjB,CAAC9kB,GAAO,QAAQ,GAAGJ;AAAA,QAAA;AAAA,QAErBT;AAAA,MAAA;AAAA,MAEF,gBAAc2lB,IAAW,SAAS;AAAA,MAClC,UAAUllB,IAAW,KAAK;AAAA,MACzB,GAAGC;AAAA,MAEH,UAAA;AAAA,QAAA2R,KAAQ,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAO,UAAAwR,GAAK;AAAA,QAC7C,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAO,UAAAd,EAAA,CAAS;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIhD,GAEakoB,KAAsBnoB;AAAA,EACjC,CAAC,EAAE,WAAAE,GAAW,GAAGU,EAAA,GAASC,MAEtB,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,WAAWb,CAAS;AAAA,MAC1C,GAAGU;AAAA,IAAA;AAAA,EAAA;AAIZ;AAGAinB,GAAW,cAAc;AACzBE,GAAe,cAAc;AAC7BC,GAAe,cAAc;AAC7BC,GAAe,cAAc;AAC7BE,GAAoB,cAAc;AAGlCN,GAAW,OAAOE;AAClBF,GAAW,OAAOG;AAClBH,GAAW,OAAOI;AAClBJ,GAAW,YAAYM;;;;;;;;;;;;;;;;;;;;;;;;;;GC5GVC,KAAkBpoB;AAAA,EAC7B,CAAC;AAAA,IACC,OAAA2hB,IAAQ;AAAA,IACR,WAAA0G,IAAY;AAAA,IACZ,MAAAjoB,IAAO;AAAA,IACP,UAAAsM,IAAW;AAAA,IACX,WAAAxM;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GACFC,MAEC,gBAAAC;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAD;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAOX,CAAI;AAAA,QACXW,GAAO2L,CAAQ;AAAA,QACfxM;AAAA,MAAA;AAAA,MAEF,cAAW;AAAA,MACV,GAAGU;AAAA,MAEH,UAAA;AAAA,QAAAynB,KACC,gBAAArnB,EAAC,MAAA,EAAG,WAAWD,GAAO,OACnB,UAAA4gB,GACH;AAAA,QAED1hB;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIT,GAEaqoB,KAAsBtoB;AAAA,EACjC,CAAC,EAAE,WAAAE,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,MAAMb,CAAS;AAAA,MACrC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEasoB,KAAsBvoB;AAAA,EACjC,CAAC,EAAE,OAAAwoB,IAAQ,GAAG,UAAA3C,GAAU,WAAA3lB,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAErD,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAO,QAAQynB,CAAK,EAAE;AAAA,QACtB;AAAA,UACE,CAACznB,GAAO,MAAM,GAAG8kB;AAAA,QAAA;AAAA,QAEnB3lB;AAAA,MAAA;AAAA,MAED,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEawoB,KAAsBzoB;AAAA,EACjC,CAAC,EAAE,MAAAkoB,GAAM,UAAArC,GAAU,OAAA2C,IAAQ,GAAG,WAAAtoB,GAAW,UAAAD,GAAU,GAAGW,EAAA,GAASC,MAE3D,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,MAAAqnB;AAAA,MACA,WAAWpoB;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAO,YAAYynB,CAAK,EAAE;AAAA,QAC1B;AAAA,UACE,CAACznB,GAAO,UAAU,GAAG8kB;AAAA,QAAA;AAAA,QAEvB3lB;AAAA,MAAA;AAAA,MAEF,gBAAc2lB,IAAW,aAAa;AAAA,MACrC,GAAGjlB;AAAA,MAEJ,UAAA,gBAAAI,EAAC,QAAA,EAAK,WAAWD,GAAO,UAAW,UAAAd,EAAA,CAAS;AAAA,IAAA;AAAA,EAAA;AAIpD;AAGAmoB,GAAgB,cAAc;AAC9BE,GAAoB,cAAc;AAClCC,GAAoB,cAAc;AAClCE,GAAoB,cAAc;AAGlCL,GAAgB,OAAOE;AACvBF,GAAgB,OAAOG;AACvBH,GAAgB,OAAOK;;;;;;;;;;;;;;;;;;GChGjBC,KAAmBtgB,GAA4C,IAAI,GAYnEugB,KAAuBvgB,GAAgD,IAAI,GAE3EwgB,KAAY5oB;AAAA,EAChB,CACE;AAAA,IACE,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,MAAAiB,IAAO;AAAA,IACP,aAAA6lB,IAAc;AAAA,IACd,cAAAnjB;AAAA,IACA,OAAOyE;AAAA,IACP,eAAApB;AAAA,IACA,MAAA9G,IAAO;AAAA,IACP,SAAAD,IAAU;AAAA,IACV,UAAAQ,IAAW;AAAA,IACX,GAAGC;AAAA,EAAA,GAELC,MACG;AAEH,UAAM,CAACiD,GAAeC,CAAgB,IAAIjC,EAA4B,MAChEwG,MAAoB,SAAkBA,IACtCzE,MAAiB,SAAkBA,IAChC1C,MAAS,aAAa,CAAA,IAAK,EACnC,GAEKI,IAAQ+G,MAAoB,SAAYA,IAAkBxE,GAE1D+kB,IAAoB,CAAChkB,MAAgC;AACzD,MAAIyD,MAAoB,UACtBvE,EAAiBc,CAAQ,GAE3BqC,KAAA,QAAAA,EAAgBrC;AAAA,IAClB;AAEA,WACE,gBAAA7D;AAAA,MAAC0nB,GAAiB;AAAA,MAAjB;AAAA,QACC,OAAO;AAAA,UACL,MAAAvnB;AAAA,UACA,OAAAI;AAAA,UACA,eAAesnB;AAAA,UACf,MAAAzoB;AAAA,UACA,SAAAD;AAAA,UACA,UAAAQ;AAAA,UACA,aAAAqmB;AAAA,QAAA;AAAA,QAGF,UAAA,gBAAAhmB;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,KAAAH;AAAA,YACA,WAAWf;AAAA,cACTiB,GAAO;AAAA,cACPA,GAAOX,CAAI;AAAA,cACXW,GAAOZ,CAAO;AAAA,cACd;AAAA,gBACE,CAACY,GAAO,QAAQ,GAAGJ;AAAA,cAAA;AAAA,cAErBT;AAAA,YAAA;AAAA,YAED,GAAGU;AAAA,YAEH,UAAAX;AAAA,UAAA;AAAA,QAAA;AAAA,MACH;AAAA,IAAA;AAAA,EAGN;AACF,GAEM6oB,KAAgB9oB;AAAA,EACpB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,OAAAqB,GAAO,UAAUwnB,IAAe,IAAO,GAAGnoB,EAAA,GAASC,MAAQ;AACjF,UAAMkI,IAAUC,EAAW0f,EAAgB;AAC3C,QAAI,CAAC3f;AACH,YAAM,IAAI,MAAM,gDAAgD;AAGlE,UAAM,EAAE,MAAA5H,GAAM,OAAO6nB,GAAgB,eAAA9hB,GAAe,UAAU+hB,MAAsBlgB,GAC9EpI,IAAWsoB,KAAqBF,GAGhCG,IAASC,GAAA,GACTC,IAAY,GAAGF,CAAM,YACrBG,IAAY,GAAGH,CAAM,YAGrBzjB,IAAStE,MAAS,aACpB,MAAM,QAAQ6nB,CAAc,KAAKA,EAAe,SAASznB,CAAK,IAC9DynB,MAAmBznB,GAEjB+nB,IAAS,MAAM;AACnB,UAAI,CAAA3oB;AAEJ,YAAIQ,MAAS,YAAY;AACvB,gBAAM+C,IAAe,MAAM,QAAQ8kB,CAAc,IAAIA,IAAiB,CAAA,GAChEnkB,IAAWY,IACbvB,EAAa,OAAO,CAAAqlB,MAAKA,MAAMhoB,CAAK,IACpC,CAAC,GAAG2C,GAAc3C,CAAK;AAC3B,UAAA2F,EAAcrC,CAAQ;AAAA,QACxB,OAAO;AACL,gBAAMA,IAAWY,KAAUsD,EAAQ,cAAc,KAAKxH;AACtD,UAAA2F,EAAcrC,CAAQ;AAAA,QACxB;AAAA,IACF;AAEA,WACE,gBAAA7D;AAAA,MAAC2nB,GAAqB;AAAA,MAArB;AAAA,QACC,OAAO;AAAA,UACL,OAAApnB;AAAA,UACA,QAAAkE;AAAA,UACA,UAAA9E;AAAA,UACA,QAAA2oB;AAAA,UACA,WAAAF;AAAA,UACA,WAAAC;AAAA,QAAA;AAAA,QAGF,UAAA,gBAAAroB;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,KAAAH;AAAA,YACA,WAAWf;AAAA,cACTiB,GAAO;AAAA,cACP;AAAA,gBACE,CAACA,GAAO,IAAI,GAAG0E;AAAA,gBACf,CAAC1E,GAAO,QAAQ,GAAGJ;AAAA,cAAA;AAAA,cAErBT;AAAA,YAAA;AAAA,YAED,GAAGU;AAAA,YAEH,UAAAX;AAAA,UAAA;AAAA,QAAA;AAAA,MACH;AAAA,IAAA;AAAA,EAGN;AACF,GAEMupB,KAAmBxpB;AAAA,EACvB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,MAAAqS,GAAM,UAAAkX,IAAW,IAAO,SAAAjf,GAAS,GAAG5J,EAAA,GAASC,MAAQ;AAC3E,UAAM6oB,IAAc1gB,EAAW2f,EAAoB,GAC7CgB,IAAmB3gB,EAAW0f,EAAgB;AAEpD,QAAI,CAACgB,KAAe,CAACC;AACnB,YAAM,IAAI,MAAM,uDAAuD;AAGzE,UAAM,EAAE,QAAAlkB,GAAQ,UAAA9E,GAAU,QAAA2oB,GAAQ,WAAAF,GAAW,WAAAC,MAAcK,GAErD7e,IAAc,CAACxE,MAA+C;AAClE,MAAAijB,EAAA,GACA9e,KAAA,QAAAA,EAAUnE;AAAA,IACZ;AAEA,WACE,gBAAAvF;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,IAAIuoB;AAAA,QACJ,MAAK;AAAA,QACL,WAAWtpB;AAAA,UACTiB,GAAO;AAAA,UACP;AAAA,YACE,CAACA,GAAO,IAAI,GAAG0E;AAAA,YACf,CAAC1E,GAAO,QAAQ,GAAGJ;AAAA,UAAA;AAAA,UAErBT;AAAA,QAAA;AAAA,QAEF,SAAS2K;AAAA,QACT,UAAAlK;AAAA,QACA,iBAAe8E;AAAA,QACf,iBAAe4jB;AAAA,QACd,GAAGzoB;AAAA,QAEJ,UAAA;AAAA,UAAA,gBAAAI,EAAC,QAAA,EAAK,WAAWD,GAAO,aAAc,UAAAd,GAAS;AAAA,UAC9C,CAACwpB,KACA,gBAAAzoB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWlB,EAAKiB,GAAO,aAAa;AAAA,gBAClC,CAACA,GAAO,OAAO,GAAG0E;AAAA,cAAA,CACnB;AAAA,cAEA,UAAA8M,uBAASqX,IAAA,CAAA,CAAmB;AAAA,YAAA;AAAA,UAAA;AAAA,QAC/B;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF,GAEMC,KAAmB7pB;AAAA,EACvB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAAQ;AAC1C,UAAM6oB,IAAc1gB,EAAW2f,EAAoB;AAEnD,QAAI,CAACe;AACH,YAAM,IAAI,MAAM,uDAAuD;AAGzE,UAAM,EAAE,QAAAjkB,GAAQ,WAAA4jB,GAAW,WAAAD,EAAA,IAAcM;AAEzC,WACE,gBAAA1oB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,IAAIwoB;AAAA,QACJ,MAAK;AAAA,QACL,mBAAiBD;AAAA,QACjB,WAAWtpB;AAAA,UACTiB,GAAO;AAAA,UACP;AAAA,YACE,CAACA,GAAO,IAAI,GAAG0E;AAAA,UAAA;AAAA,UAEjBvF;AAAA,QAAA;AAAA,QAED,GAAGU;AAAA,QAEJ,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWD,GAAO,cACpB,UAAAd,EAAA,CACH;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF,GAGM2pB,KAAqB,MACzB,gBAAA5oB;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IACR,MAAK;AAAA,IACL,OAAM;AAAA,IAEN,UAAA,gBAAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,GAAE;AAAA,QACF,QAAO;AAAA,QACP,aAAY;AAAA,QACZ,eAAc;AAAA,QACd,gBAAe;AAAA,MAAA;AAAA,IAAA;AAAA,EACjB;AACF;AAGF4nB,GAAU,cAAc;AACxBE,GAAc,cAAc;AAC5BU,GAAiB,cAAc;AAC/BK,GAAiB,cAAc;AAG/B,MAAMC,KAAqBlB;AAM3BkB,GAAmB,OAAOhB;AAC1BgB,GAAmB,UAAUN;AAC7BM,GAAmB,UAAUD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GC3QvBE,KAAkB3hB,GAA2C,IAAI,GAEjE4hB,KAAc,MAAM;AACxB,QAAMjhB,IAAUC,EAAW+gB,EAAe;AAC1C,MAAI,CAAChhB;AACH,UAAM,IAAI,MAAM,oDAAoD;AAEtE,SAAOA;AACT,GAEMkhB,KAAW7iB,EAAM;AAAA,EACrB,CAAC;AAAA,IACC,SAAAhC,IAAU,CAAA;AAAA,IACV,OAAA7D;AAAA,IACA,cAAAsC,IAAe;AAAA,IACf,eAAAqD;AAAA,IACA,aAAAvF;AAAA,IACA,cAAAuoB;AAAA,IACA,mBAAAC;AAAA,IACA,WAAAjqB;AAAA,IACA,UAAAD;AAAA,IACA,MAAAG,IAAO;AAAA,IACP,SAAAD,IAAU;AAAA,IACV,GAAGS;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM,CAAC4E,GAAQC,CAAS,IAAI5D,EAAS,EAAK,GACpC,CAAC6D,GAAeC,CAAgB,IAAI9D,EAASP,KAASsC,CAAY,GAClE,CAACumB,GAAaC,CAAc,IAAIvoB,EAAS,EAAE,GAC3C,CAACwoB,GAAkBC,CAAmB,IAAIzoB,EAAS,EAAE,GAErDkE,IAAa/D,EAA0B,IAAI,GAC3CwK,IAAaxK,EAAuB,IAAI,GAGxCuoB,IAAkBpjB,EAAM,QAAQ,MAC/BgjB,IACEhlB,EAAQ;AAAA,MAAO,CAAAF,MACpBA,EAAO,MAAM,YAAA,EAAc,SAASklB,EAAY,aAAa;AAAA,IAAA,IAFtChlB,GAIxB,CAACA,GAASglB,CAAW,CAAC;AAGzB,IAAAloB,EAAU,MAAM;AACd,MAAIX,MAAU,UACZqE,EAAiBrE,CAAK;AAAA,IAE1B,GAAG,CAACA,CAAK,CAAC;AAEV,UAAM0N,IAAW5K,EAAY,CAACmC,MAAwB;AACpD,MAAAZ,EAAiBY,CAAW,GAC5Bd,EAAU,EAAK,GACf2kB,EAAe,EAAE,GACjBE,EAAoB,EAAE,GACtBrjB,KAAA,QAAAA,EAAgBV;AAAA,IAClB,GAAG,CAACU,CAAa,CAAC,GAGZvE,IAAgB0B,EAAY,CAACzB,MAA2B;;AAC5D,UAAI,CAAC6C,GAAQ;AACX,SAAI7C,EAAE,QAAQ,WAAWA,EAAE,QAAQ,OAAOA,EAAE,QAAQ,iBAClDA,EAAE,eAAA,GACF8C,EAAU,EAAI,GACd6kB,EAAoB,CAAC;AAEvB;AAAA,MACF;AAEA,cAAQ3nB,EAAE,KAAA;AAAA,QACR,KAAK;AACH,UAAAA,EAAE,eAAA,GACF8C,EAAU,EAAK,GACf6kB,EAAoB,EAAE,IACtBloB,IAAA2D,EAAW,YAAX,QAAA3D,EAAoB;AACpB;AAAA,QACF,KAAK;AACH,UAAAO,EAAE,eAAA,GACF2nB;AAAA,YAAoB,OAClB9jB,IAAO+jB,EAAgB,SAAS,IAAI/jB,IAAO,IAAI;AAAA,UAAA;AAEjD;AAAA,QACF,KAAK;AACH,UAAA7D,EAAE,eAAA,GACF2nB;AAAA,YAAoB,OAClB9jB,IAAO,IAAIA,IAAO,IAAI+jB,EAAgB,SAAS;AAAA,UAAA;AAEjD;AAAA,QACF,KAAK;AACH,UAAA5nB,EAAE,eAAA,GACE0nB,KAAoB,KAAKE,EAAgBF,CAAgB,KAC3Drb,EAASub,EAAgBF,CAAgB,EAAE,KAAK;AAElD;AAAA,MAAA;AAAA,IAEN,GAAG,CAAC7kB,GAAQ+kB,GAAiBF,GAAkBrb,CAAQ,CAAC;AAGxD,IAAA/M,EAAU,MAAM;AACd,YAAMkE,IAAqB,CAACC,MAAsB;AAChD,QACEoG,EAAW,WACX,CAACA,EAAW,QAAQ,SAASpG,EAAM,MAAc,KACjDL,EAAW,WACX,CAACA,EAAW,QAAQ,SAASK,EAAM,MAAc,MAEjDX,EAAU,EAAK,GACf6kB,EAAoB,EAAE;AAAA,MAE1B;AAEA,UAAI9kB;AACF,wBAAS,iBAAiB,aAAaW,CAAkB,GAClD,MAAM,SAAS,oBAAoB,aAAaA,CAAkB;AAAA,IAE7E,GAAG,CAACX,CAAM,CAAC;AAEX,UAAM8U,IAAqC;AAAA,MACzC,QAAA9U;AAAA,MACA,WAAAC;AAAA,MACA,eAAAC;AAAA,MACA,kBAAAC;AAAA,MACA,aAAAwkB;AAAA,MACA,gBAAAC;AAAA,MACA,SAAAjlB;AAAA,MACA,iBAAAolB;AAAA,MACA,YAAAxkB;AAAA,MACA,YAAAyG;AAAA,MACA,kBAAA6d;AAAA,MACA,qBAAAC;AAAA,MACA,UAAAtb;AAAA,MACA,aAAAtN;AAAA,MACA,cAAAuoB;AAAA,MACA,mBAAAC;AAAA,IAAA;AAGF,WACE,gBAAAnpB,EAAC+oB,GAAgB,UAAhB,EAAyB,OAAOxP,GAC/B,UAAA,gBAAAvZ;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAO,aAAaX,CAAI,EAAE;AAAA,UAC1BW,GAAO,aAAaZ,CAAO,EAAE;AAAA,UAC7BD;AAAA,QAAA;AAAA,QAEF,WAAWyC;AAAA,QACV,GAAG/B;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA,GAEL;AAAA,EAEJ;AACF,GASMwqB,KAAkBrjB,EAAM;AAAA,EAC5B,CAAC,EAAE,WAAAlH,GAAW,aAAawqB,GAAoB,MAAAnY,GAAM,GAAG3R,EAAA,GAASoL,MAAS;AACxE,UAAM,EAAE,QAAAvG,GAAQ,WAAAC,GAAW,eAAAC,GAAe,SAAAP,GAAS,YAAAY,GAAY,aAAa2kB,EAAA,IAAuBX,GAAA,GAE7FtjB,IAAiBtB,EAAQ,KAAK,CAAAF,MAAUA,EAAO,UAAUS,CAAa,GACtEilB,IAAmBF,KAAsBC,KAAsB;AAErE,WACE,gBAAA7pB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAKkF;AAAA,QACL,MAAK;AAAA,QACL,MAAK;AAAA,QACL,iBAAeP;AAAA,QACf,iBAAc;AAAA,QACd,WAAW3F,EAAKiB,GAAO,SAASb,CAAS;AAAA,QACzC,SAAS,MAAMwF,EAAU,CAACD,CAAM;AAAA,QAC/B,GAAG7E;AAAA,QAEH,UAAA;AAAA,UAAA2R,KAAQ,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,aAAc,UAAAwR,GAAK;AAAA,UACpD,gBAAAvR,EAAC,UAAK,WAAWD,GAAO,aACrB,UAAA2F,IAAiBA,EAAe,QAAQkkB,EAAA,CAC3C;AAAA,UACA,gBAAA5pB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWlB,EAAKiB,GAAO,cAAc,EAAE,CAACA,GAAO,gBAAgB,GAAG0E,GAAQ;AAAA,cAC1E,OAAM;AAAA,cACN,QAAO;AAAA,cACP,SAAQ;AAAA,cACR,MAAK;AAAA,cAEL,UAAA,gBAAAzE,EAAC,QAAA,EAAK,GAAE,sBAAqB,QAAO,gBAAe,aAAY,KAAI,eAAc,SAAQ,gBAAe,QAAA,CAAO;AAAA,YAAA;AAAA,UAAA;AAAA,QACjH;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF,GASM6pB,KAAkBzjB,EAAM;AAAA,EAC5B,CAAC;AAAA,IACC,UAAAnH;AAAA,IACA,WAAAC;AAAA,IACA,mBAAmB4qB;AAAA,IACnB,cAAcC;AAAA,IACd,GAAGnqB;AAAA,EAAA,GACFoL,MAAS;AACV,UAAM;AAAA,MACJ,QAAAvG;AAAA,MACA,aAAA2kB;AAAA,MACA,gBAAAC;AAAA,MACA,iBAAAG;AAAA,MACA,YAAA/d;AAAA,MACA,YAAAzG;AAAA,MACA,mBAAmBglB;AAAA,MACnB,cAAcC;AAAA,IAAA,IACZjB,GAAA,GAEEkB,IAAyBJ,KAA4BE,KAA4B,qBACjFG,IAAoBJ,KAAuBE,KAAuB,qBAElE,CAACve,GAAUC,CAAW,IAAI7K,EAAS,EAAE,KAAK,GAAG,MAAM,GAAG,OAAO,EAAA,CAAG,GAGhEkL,IAAiB3I,EAAY,MAAM;AACvC,UAAIoB,KAAUO,EAAW,SAAS;AAChC,cAAMmH,IAAcnH,EAAW,QAAQ,sBAAA;AACvC,QAAA2G,EAAY;AAAA,UACV,KAAKQ,EAAY,SAAS;AAAA,UAC1B,MAAMA,EAAY;AAAA,UAClB,OAAOA,EAAY;AAAA,QAAA,CACpB;AAAA,MACH;AAAA,IACF,GAAG,CAAC1H,GAAQO,CAAU,CAAC;AAkBvB,QAhBA9D,EAAU,MAAM;AACd,MAAA8K,EAAA;AAAA,IACF,GAAG,CAACA,CAAc,CAAC,GAEnB9K,EAAU,MAAM;AACd,UAAIuD,GAAQ;AACV,cAAM2lB,IAAe,MAAMpe,EAAA;AAC3B,sBAAO,iBAAiB,UAAUoe,GAAc,EAAI,GACpD,OAAO,iBAAiB,UAAUA,CAAY,GACvC,MAAM;AACX,iBAAO,oBAAoB,UAAUA,GAAc,EAAI,GACvD,OAAO,oBAAoB,UAAUA,CAAY;AAAA,QACnD;AAAA,MACF;AAAA,IACF,GAAG,CAAC3lB,GAAQuH,CAAc,CAAC,GAEvB,CAACvH,EAAQ,QAAO;AAEpB,UAAMyH,IACJ,gBAAApM;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAK2L;AAAA,QACL,WAAW3M,EAAKiB,GAAO,SAASb,CAAS;AAAA,QACzC,OAAO;AAAA,UACL,KAAKwM,EAAS;AAAA,UACd,MAAMA,EAAS;AAAA,UACf,UAAUA,EAAS;AAAA,QAAA;AAAA,QAErB,MAAK;AAAA,QACJ,GAAG9L;AAAA,QAEJ,UAAA;AAAA,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWD,GAAO,iBACrB,UAAA,gBAAAC;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,WAAWD,GAAO;AAAA,cAClB,aAAamqB;AAAA,cACb,OAAOd;AAAA,cACP,UAAU,CAACxnB,MAAMynB,EAAeznB,EAAE,OAAO,KAAK;AAAA,cAC9C,WAAS;AAAA,YAAA;AAAA,UAAA,GAEb;AAAA,4BAEC,OAAA,EAAI,WAAW7B,GAAO,aACpB,UAAAypB,EAAgB,WAAW,IAC1B,gBAAAxpB,EAAC,SAAI,WAAWD,GAAO,cAAe,UAAAoqB,EAAA,CAAkB,IAExDlrB,KAAYuqB,EAAgB,IAAI,CAACtlB,MAC/B,gBAAAlE;AAAA,YAACqqB;AAAA,YAAA;AAAA,cAEC,OAAOnmB,EAAO;AAAA,cACd,UAAUA,EAAO;AAAA,cAEhB,UAAAA,EAAO;AAAA,YAAA;AAAA,YAJHA,EAAO;AAAA,UAAA,CAMf,EAAA,CAEL;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAIJ,WAAOiU,GAAajM,GAAS,SAAS,IAAI;AAAA,EAC5C;AACF,GASMme,KAAiBjkB,EAAM;AAAA,EAC3B,CAAC,EAAE,OAAA7F,GAAO,UAAAtB,GAAU,UAAAU,IAAW,IAAO,WAAAT,GAAW,GAAGU,EAAA,GAASC,MAAQ;AACnE,UAAM;AAAA,MACJ,eAAA8E;AAAA,MACA,UAAAsJ;AAAA,MACA,kBAAAqb;AAAA,MACA,qBAAAC;AAAA,MACA,iBAAAC;AAAA,IAAA,IACER,GAAA,GAEEsB,IAAcd,EAAgB,UAAU,CAAAtlB,MAAUA,EAAO,UAAU3D,CAAK,GACxEmP,IAAa/K,MAAkBpE,GAC/BgqB,IAAgBjB,MAAqBgB;AAE3C,WACE,gBAAAxqB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,MAAK;AAAA,QACL,iBAAe6P;AAAA,QACf,WAAW5Q;AAAA,UACTiB,GAAO;AAAA,UACP;AAAA,YACE,CAACA,GAAO,cAAc,GAAG2P;AAAA,YACzB,CAAC3P,GAAO,iBAAiB,GAAGwqB;AAAA,YAC5B,CAACxqB,GAAO,cAAc,GAAGJ;AAAA,UAAA;AAAA,UAE3BT;AAAA,QAAA;AAAA,QAEF,SAAS,MAAM,CAACS,KAAYsO,EAAS1N,CAAK;AAAA,QAC1C,cAAc,MAAM,CAACZ,KAAY4pB,EAAoBe,CAAW;AAAA,QAC/D,GAAG1qB;AAAA,QAEH,UAAA;AAAA,UAAAX;AAAA,UACAyQ,KACC,gBAAA1P;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWD,GAAO;AAAA,cAClB,OAAM;AAAA,cACN,QAAO;AAAA,cACP,SAAQ;AAAA,cACR,MAAK;AAAA,cAEL,UAAA,gBAAAC;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,GAAE;AAAA,kBACF,QAAO;AAAA,kBACP,aAAY;AAAA,kBACZ,eAAc;AAAA,kBACd,gBAAe;AAAA,gBAAA;AAAA,cAAA;AAAA,YACjB;AAAA,UAAA;AAAA,QACF;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAGAipB,GAAS,cAAc;AACvBQ,GAAgB,cAAc;AAC9BI,GAAgB,cAAc;AAC9BQ,GAAe,cAAc;AAS7B,MAAMG,KAA4BvB;AAClCuB,GAA0B,UAAUf;AACpCe,GAA0B,UAAUX;AACpCW,GAA0B,SAASH;;;;;;;;;;;;;;;;;;;;;;;GChZ7BI,KAAWrkB,EAAM;AAAA,EACrB,CAAC;AAAA,IACC,MAAAskB;AAAA,IACA,OAAA/J;AAAA,IACA,UAAAgK;AAAA,IACA,QAAAjV,IAAS;AAAA,IACT,YAAAkV,IAAa;AAAA,IACb,UAAAC,IAAW;AAAA,IACX,UAAAC,IAAW;AAAA,IACX,MAAA1rB,IAAO;AAAA,IACP,SAAAD,IAAU;AAAA,IACV,eAAA4rB,IAAgB;AAAA,IAChB,aAAAC,IAAc;AAAA,IACd,WAAA9rB;AAAA,IACA,OAAA0W;AAAA,IACA,GAAGhW;AAAA,EAAA,GACFC,MAAQ;AAET,QAAI,CAAC6qB,KAAQA,EAAK,WAAW;AAC3B,aACE,gBAAA1qB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAW,GAAGE,EAAO,QAAQ,IAAIA,EAAO,KAAK,IAAIb,KAAa,EAAE;AAAA,UAChE,aAAWE;AAAA,UACX,gBAAcD;AAAA,UACd,OAAAyW;AAAA,UACC,GAAGhW;AAAA,UAEJ,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWD,EAAO,YACrB,UAAA,gBAAAC,EAAC,QAAA,EAAK,WAAWD,EAAO,WAAW,UAAA,oBAAA,CAAiB,EAAA,CACtD;AAAA,QAAA;AAAA,MAAA;AAKN,UAAMkrB,IAAW,KAAK,IAAI,GAAGP,EAAK,IAAI,CAAAQ,MAAKA,EAAE,KAAK,CAAC,GAS7CC,IANa;AAAA,MACjB,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,MACnD,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,MACnD,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,IAAG,EAG9B/rB,CAAI,GACxBgsB,IAAgBzK,KAASgK,IAAYQ,EAAO,eAAe,GAC3DE,IAAoB3V,IAAS0V,IAAeD,EAAO,cAGnDG,IAAgB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAGF,WACE,gBAAAxrB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAW,GAAGE,EAAO,QAAQ,IAAIb,KAAa,EAAE;AAAA,QAChD,aAAWE;AAAA,QACX,gBAAcD;AAAA,QACd,iBAAe2rB;AAAA,QACf,kBAAgBD;AAAA,QAChB,uBAAqBE;AAAA,QACrB,OAAAnV;AAAA,QACC,GAAGhW;AAAA,QAGF,UAAA;AAAA,WAAA+gB,KAASgK,MACT,gBAAA7qB,EAAC,OAAA,EAAI,WAAWC,EAAO,QACpB,UAAA;AAAA,YAAA4gB,KAAS,gBAAA3gB,EAAC,MAAA,EAAG,WAAWD,EAAO,OAAQ,UAAA4gB,GAAM;AAAA,YAC7CgK,KAAY,gBAAA3qB,EAAC,KAAA,EAAE,WAAWD,EAAO,UAAW,UAAA4qB,EAAA,CAAS;AAAA,UAAA,GACxD;AAAA,UAIF,gBAAA7qB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWC,EAAO;AAAA,cAClB,OAAO;AAAA,gBACL,QAAQ,GAAGsrB,CAAiB;AAAA,gBAC5B,WAAW,GAAGA,CAAiB;AAAA,gBAC/B,WAAW,GAAGA,CAAiB;AAAA,gBAC/B,GAAIN,IAAgB,EAAE,yBAAyBC,MAAgB,CAAA;AAAA,cAAC;AAAA,cAIjE,UAAA;AAAA,gBAAAH,KACC,gBAAA/qB,EAAC,OAAA,EAAI,WAAWC,EAAO,OACrB,UAAA;AAAA,kBAAA,gBAAAD,EAAC,OAAA,EAAI,WAAWC,EAAO,aACrB,UAAA;AAAA,oBAAA,gBAAAC,EAAC,UAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,CAAQ,GAAE;AAAA,oBAC1D,gBAAAjrB,EAAC,UAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,IAAI,EAAA,CAAE;AAAA,oBACjE,gBAAAjrB,EAAC,UAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,GAAG,EAAA,CAAE;AAAA,oBAChE,gBAAAjrB,EAAC,UAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,IAAI,EAAA,CAAE;AAAA,oBACjE,gBAAAjrB,EAAC,QAAA,EAAK,WAAWD,EAAO,YAAY,UAAA,IAAA,CAAC;AAAA,kBAAA,GACvC;AAAA,kBACA,gBAAAD,EAAC,OAAA,EAAI,WAAWC,EAAO,WACrB,UAAA;AAAA,oBAAA,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,kBAAA,EAAA,CACnC;AAAA,gBAAA,GACF;AAAA,gBAIF,gBAAAC,EAAC,SAAI,WAAWD,EAAO,eACpB,UAAA2qB,EAAK,IAAI,CAAClb,GAAMpO,MAAU;AAEzB,wBAAMmqB,IAAY,KAAK,IAAI,GAAI/b,EAAK,QAAQyb,IAAYI,CAAiB,GACnEve,IAAQ0C,EAAK,SAAS8b,EAAclqB,IAAQkqB,EAAc,MAAM;AAEtE,yBACE,gBAAAxrB;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBAEC,WAAWC,EAAO;AAAA,sBAClB,OAAO;AAAA,wBACL,gBAAgB+qB,IAAW,GAAG1pB,IAAQ,GAAG,OAAO;AAAA,sBAAA;AAAA,sBAIjD,UAAA;AAAA,wBAAAwpB,KACC,gBAAA5qB;AAAA,0BAAC;AAAA,0BAAA;AAAA,4BACC,WAAWD,EAAO;AAAA,4BAClB,OAAO;AAAA,8BACL,UAAU;AAAA,8BACV,QAAQ,GAAGwrB,IAAY,CAAC;AAAA,8BACxB,MAAM;AAAA,8BACN,WAAW;AAAA,8BACX,QAAQ;AAAA,4BAAA;AAAA,4BAGT,UAAA/b,EAAK;AAAA,0BAAA;AAAA,wBAAA;AAAA,0CAKT,OAAA,EAAI,OAAO,EAAE,MAAM,KAAK;AAAA,wBAGzB,gBAAAxP,EAAC,SAAI,OAAO,EAAE,OAAO,QAAQ,SAAS,QAAQ,gBAAgB,SAAA,GAC5D,UAAA,gBAAAA,EAACkW,IAAA,EAAQ,SAAS,GAAG1G,EAAK,KAAK,KAAKA,EAAK,KAAK,IAC5C,UAAA,gBAAAxP;AAAA,0BAAC;AAAA,0BAAA;AAAA,4BACC,WAAWD,EAAO;AAAA,4BAClB,OAAO;AAAA,8BACL,QAAQ,GAAGwrB,CAAS;AAAA,8BACpB,iBAAiBze;AAAA,8BACjB,gBAAgBge,IAAW,GAAG1pB,IAAQ,GAAG,OAAO;AAAA,4BAAA;AAAA,0BAClD;AAAA,wBAAA,GAEJ,EAAA,CACF;AAAA,sBAAA;AAAA,oBAAA;AAAA,oBArCK,GAAGoO,EAAK,KAAK,IAAIpO,CAAK;AAAA,kBAAA;AAAA,gBAwCjC,CAAC,EAAA,CACH;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA;AAAA,UAIF,gBAAAtB,EAAC,OAAA,EAAI,WAAWC,EAAO,QACrB,UAAA;AAAA,YAAA,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,aACpB,UAAA2qB,EAAK,IAAI,CAAClb,GAAMpO,MACf,gBAAApB,EAACkW,IAAA,EAA+B,SAAS1G,EAAK,OAC5C,UAAA,gBAAAxP,EAAC,OAAA,EAAI,WAAWD,EAAO,YACpB,UAAAyP,EAAK,MAAA,CACR,EAAA,GAHY,SAASpO,CAAK,EAI5B,CACD,GACH;AAAA,YACA,gBAAAtB,EAAC,OAAA,EAAI,WAAWC,EAAO,WACpB,UAAA;AAAA,cAAA2qB,EAAK;AAAA,cAAO;AAAA,YAAA,EAAA,CACf;AAAA,UAAA,EAAA,CACF;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AAEAD,GAAS,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;GClLjBe,KAAYplB,EAAM;AAAA,EACtB,CAAC;AAAA,IACC,MAAAskB;AAAA,IACA,OAAA/J;AAAA,IACA,UAAAgK;AAAA,IACA,QAAAjV,IAAS;AAAA,IACT,YAAAkV,IAAa;AAAA,IACb,UAAAC,IAAW;AAAA,IACX,UAAAC,IAAW;AAAA,IACX,MAAA1rB,IAAO;AAAA,IACP,SAAAD,IAAU;AAAA,IACV,eAAA4rB,IAAgB;AAAA,IAChB,aAAAC,IAAc;AAAA,IACd,WAAAS,IAAY;AAAA,IACZ,WAAAxV,IAAY;AAAA,IACZ,UAAAyV,IAAW;AAAA,IACX,QAAAC,IAAS;AAAA,IACT,WAAAzsB;AAAA,IACA,OAAA0W;AAAA,IACA,GAAGhW;AAAA,EAAA,GACFC,MAAQ;AAET,QAAI,CAAC6qB,KAAQA,EAAK,WAAW;AAC3B,aACE,gBAAA1qB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAW,GAAGE,EAAO,SAAS,IAAIA,EAAO,KAAK,IAAIb,KAAa,EAAE;AAAA,UACjE,aAAWE;AAAA,UACX,gBAAcD;AAAA,UACd,OAAAyW;AAAA,UACC,GAAGhW;AAAA,UAEJ,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWD,EAAO,YACrB,UAAA,gBAAAC,EAAC,QAAA,EAAK,WAAWD,EAAO,WAAW,UAAA,oBAAA,CAAiB,EAAA,CACtD;AAAA,QAAA;AAAA,MAAA;AAKN,UAAMkrB,IAAW,KAAK,IAAI,GAAGP,EAAK,IAAI,CAAAQ,MAAKA,EAAE,KAAK,CAAC,GAC7CU,IAAW,KAAK,IAAI,GAAGlB,EAAK,IAAI,CAAAQ,MAAKA,EAAE,KAAK,CAAC,GAC7CW,IAAaZ,IAAWW,GASxBT,IANa;AAAA,MACjB,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,MACnD,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,MACnD,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,IAAG,EAG9B/rB,CAAI,GACxBgsB,IAAgBzK,KAASgK,IAAYQ,EAAO,eAAe,GAC3DE,IAAoB3V,IAAS0V,IAAeD,EAAO,cAkCnDW,KA/Be,CAACH,MAAoB;AACxC,UAAIjB,EAAK,WAAW,EAAG,QAAO;AAE9B,YAAMqB,IAASrB,EAAK,IAAI,CAACsB,GAAO5qB,MAAU;AACxC,cAAMmW,IAAKnW,KAASspB,EAAK,SAAS,KAAM,KAClClT,IAAI,OAAQwU,EAAM,QAAQJ,KAAYC,IAAc;AAC1D,eAAO,EAAE,GAAAtU,GAAG,GAAAC,EAAA;AAAA,MACd,CAAC;AAED,UAAImU,KAAUjB,EAAK,SAAS,GAAG;AAE7B,YAAIuB,IAAO,KAAKF,EAAO,CAAC,EAAE,CAAC,IAAIA,EAAO,CAAC,EAAE,CAAC;AAE1C,iBAAS/pB,IAAI,GAAGA,IAAI+pB,EAAO,QAAQ/pB,KAAK;AACtC,gBAAMkqB,IAAOH,EAAO/pB,IAAI,CAAC,EAAE,KAAK+pB,EAAO/pB,CAAC,EAAE,IAAI+pB,EAAO/pB,IAAI,CAAC,EAAE,KAAK,GAC3DmqB,IAAOJ,EAAO/pB,IAAI,CAAC,EAAE,GACrBoqB,IAAOL,EAAO/pB,CAAC,EAAE,KAAK+pB,EAAO/pB,CAAC,EAAE,IAAI+pB,EAAO/pB,IAAI,CAAC,EAAE,KAAK,GACvDqqB,IAAON,EAAO/pB,CAAC,EAAE;AAEvB,UAAAiqB,KAAQ,MAAMC,CAAI,IAAIC,CAAI,KAAKC,CAAI,IAAIC,CAAI,KAAKN,EAAO/pB,CAAC,EAAE,CAAC,IAAI+pB,EAAO/pB,CAAC,EAAE,CAAC;AAAA,QAC5E;AAEA,eAAOiqB;AAAA,MACT;AAEE,eAAOF,EAAO;AAAA,UAAI,CAACC,GAAO5qB,MACxBA,MAAU,IAAI,KAAK4qB,EAAM,CAAC,IAAIA,EAAM,CAAC,KAAK,KAAKA,EAAM,CAAC,IAAIA,EAAM,CAAC;AAAA,QAAA,EACjE,KAAK,GAAG;AAAA,IAEd,GAE8BL,CAAM;AAEpC,WACE,gBAAA7rB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAW,GAAGE,EAAO,SAAS,IAAIb,KAAa,EAAE;AAAA,QACjD,aAAWE;AAAA,QACX,gBAAcD;AAAA,QACd,iBAAe2rB;AAAA,QACf,kBAAgBD;AAAA,QAChB,uBAAqBE;AAAA,QACrB,OAAAnV;AAAA,QACC,GAAGhW;AAAA,QAGF,UAAA;AAAA,WAAA+gB,KAASgK,MACT,gBAAA7qB,EAAC,OAAA,EAAI,WAAWC,EAAO,QACpB,UAAA;AAAA,YAAA4gB,KAAS,gBAAA3gB,EAAC,MAAA,EAAG,WAAWD,EAAO,OAAQ,UAAA4gB,GAAM;AAAA,YAC7CgK,KAAY,gBAAA3qB,EAAC,KAAA,EAAE,WAAWD,EAAO,UAAW,UAAA4qB,EAAA,CAAS;AAAA,UAAA,GACxD;AAAA,UAIF,gBAAA7qB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWC,EAAO;AAAA,cAClB,OAAO;AAAA,gBACL,QAAQ,GAAGsrB,CAAiB;AAAA,gBAC5B,WAAW,GAAGA,CAAiB;AAAA,gBAC/B,WAAW,GAAGA,CAAiB;AAAA,gBAC/B,GAAIN,IAAgB,EAAE,yBAAyBC,MAAgB,CAAA;AAAA,cAAC;AAAA,cAIjE,UAAA;AAAA,gBAAAH,KACC,gBAAA/qB,EAAC,OAAA,EAAI,WAAWC,EAAO,OACrB,UAAA;AAAA,kBAAA,gBAAAD,EAAC,OAAA,EAAI,WAAWC,EAAO,aACrB,UAAA;AAAA,oBAAA,gBAAAC,EAAC,UAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,CAAQ,GAAE;AAAA,oBAC1D,gBAAAjrB,EAAC,QAAA,EAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,OAAOW,IAAW,IAAI,EAAA,CAAE;AAAA,oBACnF,gBAAA5rB,EAAC,QAAA,EAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,MAAMW,IAAW,GAAG,EAAA,CAAE;AAAA,oBACjF,gBAAA5rB,EAAC,QAAA,EAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,OAAOW,IAAW,IAAI,EAAA,CAAE;AAAA,oBACnF,gBAAA5rB,EAAC,UAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAM6rB,CAAQ,EAAA,CAAE;AAAA,kBAAA,GAC5D;AAAA,kBACA,gBAAA9rB,EAAC,OAAA,EAAI,WAAWC,EAAO,WACrB,UAAA;AAAA,oBAAA,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,kBAAA,EAAA,CACnC;AAAA,gBAAA,GACF;AAAA,gBAIF,gBAAAD,EAAC,OAAA,EAAI,WAAWC,EAAO,eACrB,UAAA;AAAA,kBAAA,gBAAAD;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,WAAWC,EAAO;AAAA,sBAClB,SAAQ;AAAA,sBACR,qBAAoB;AAAA,sBAGpB,UAAA;AAAA,wBAAA,gBAAAC;AAAA,0BAAC;AAAA,0BAAA;AAAA,4BACC,GAAG8rB;AAAA,4BACH,MAAK;AAAA,4BACL,QAAQL;AAAA,4BACR,aAAaxV,IAAY;AAAA,4BACzB,eAAc;AAAA,4BACd,gBAAe;AAAA,4BACf,WAAW6U,IAAW/qB,EAAO,eAAe;AAAA,0BAAA;AAAA,wBAAA;AAAA,wBAI7C2rB,KAAYhB,EAAK,IAAI,CAACsB,GAAO5qB,MAAU;AACtC,gCAAMmW,IAAKnW,KAASspB,EAAK,SAAS,KAAM,KAClClT,IAAI,OAAQwU,EAAM,QAAQJ,KAAYC,IAAc,KACpDS,IAAU;AAEhB,iCACE,gBAAAtsB;AAAA,4BAAC;AAAA,4BAAA;AAAA,8BAEC,GAAGuX,IAAI+U,IAAQ;AAAA,8BACf,GAAG9U,IAAI8U,IAAQ;AAAA,8BACf,OAAOA;AAAA,8BACP,QAAQA;AAAA,8BACR,MAAMN,EAAM,SAASP;AAAA,8BACrB,QAAO;AAAA,8BACP,WAAWX,IAAW/qB,EAAO,cAAc;AAAA,8BAC3C,OAAO,EAAE,gBAAgB+qB,IAAW,GAAG1pB,IAAQ,GAAG,OAAO,OAAA;AAAA,4BAAU;AAAA,4BAR9D,OAAOA,CAAK;AAAA,0BAAA;AAAA,wBAWvB,CAAC;AAAA,sBAAA;AAAA,oBAAA;AAAA,kBAAA;AAAA,kBAIFspB,EAAK,IAAI,CAACsB,GAAO5qB,MAAU;AAC1B,0BAAMmW,IAAKnW,KAASspB,EAAK,SAAS,KAAM,KAClClT,IAAI,OAAQwU,EAAM,QAAQJ,KAAYC,IAAc;AAE1D,2BACE,gBAAA7rB,EAACkW,MAAiC,SAAS,GAAG8V,EAAM,KAAK,KAAKA,EAAM,KAAK,IACvE,UAAA,gBAAAhsB;AAAA,sBAAC;AAAA,sBAAA;AAAA,wBACC,WAAWD,EAAO;AAAA,wBAClB,OAAO;AAAA,0BACL,MAAM,GAAGwX,CAAC;AAAA,0BACV,KAAK,GAAGC,CAAC;AAAA,0BACT,WAAW;AAAA,wBAAA;AAAA,sBACb;AAAA,oBAAA,EACF,GARY,WAAWpW,CAAK,EAS9B;AAAA,kBAEJ,CAAC;AAAA,kBAGAwpB,KAAcF,EAAK,IAAI,CAACsB,GAAO5qB,MAAU;AACxC,0BAAMmW,IAAKnW,KAASspB,EAAK,SAAS,KAAM,KAClClT,IAAI,OAAQwU,EAAM,QAAQJ,KAAYC,IAAc;AAE1D,2BACE,gBAAA7rB;AAAA,sBAAC;AAAA,sBAAA;AAAA,wBAEC,WAAWD,EAAO;AAAA,wBAClB,OAAO;AAAA,0BACL,MAAM,GAAGwX,CAAC;AAAA,0BACV,KAAK,GAAGC,CAAC;AAAA,0BACT,WAAW;AAAA,0BACX,gBAAgBsT,IAAW,GAAG1pB,IAAQ,GAAG,OAAO;AAAA,wBAAA;AAAA,wBAGjD,UAAA4qB,EAAM;AAAA,sBAAA;AAAA,sBATF,SAAS5qB,CAAK;AAAA,oBAAA;AAAA,kBAYzB,CAAC;AAAA,gBAAA,EAAA,CACH;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA;AAAA,UAIF,gBAAAtB,EAAC,OAAA,EAAI,WAAWC,EAAO,QACrB,UAAA;AAAA,YAAA,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,aACpB,UAAA2qB,EAAK,IAAI,CAAClb,GAAMpO,MACf,gBAAApB,EAACkW,IAAA,EAA+B,SAAS1G,EAAK,OAC5C,UAAA,gBAAAxP,EAAC,OAAA,EAAI,WAAWD,EAAO,YACpB,UAAAyP,EAAK,MAAA,CACR,EAAA,GAHY,SAASpO,CAAK,EAI5B,CACD,GACH;AAAA,YACA,gBAAAtB,EAAC,OAAA,EAAI,WAAWC,EAAO,WACpB,UAAA;AAAA,cAAA2qB,EAAK;AAAA,cAAO;AAAA,YAAA,EAAA,CACf;AAAA,UAAA,EAAA,CACF;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AAEAc,GAAU,cAAc;;;;;;;;;;;;;;;;;;;;GCpPlBe,KAAWnmB,EAAM;AAAA,EACrB,CAAC;AAAA,IACC,MAAAskB;AAAA,IACA,OAAA/J;AAAA,IACA,UAAAgK;AAAA,IACA,MAAAvrB,IAAO;AAAA,IACP,YAAAwrB,IAAa;AAAA,IACb,YAAA4B,IAAa;AAAA,IACb,UAAA1B,IAAW;AAAA,IACX,SAAA3rB,IAAU;AAAA,IACV,eAAA4rB,IAAgB;AAAA,IAChB,aAAAC,IAAc;AAAA,IACd,aAAA5V,IAAc;AAAA,IACd,WAAAlW;AAAA,IACA,OAAA0W;AAAA,IACA,GAAGhW;AAAA,EAAA,GACFC,MAAQ;AAET,QAAI,CAAC6qB,KAAQA,EAAK,WAAW;AAC3B,aACE,gBAAA1qB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAW,GAAGE,GAAO,QAAQ,IAAIA,GAAO,KAAK,IAAIb,KAAa,EAAE;AAAA,UAChE,gBAAcC;AAAA,UACd,OAAAyW;AAAA,UACC,GAAGhW;AAAA,UAEJ,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWD,GAAO,YACrB,UAAA,gBAAAC,EAAC,QAAA,EAAK,WAAWD,GAAO,WAAW,UAAA,oBAAA,CAAiB,EAAA,CACtD;AAAA,QAAA;AAAA,MAAA;AAKN,UAAM0sB,IAAQ/B,EAAK,OAAO,CAACgC,GAAKld,MAASkd,IAAMld,EAAK,OAAO,CAAC,GACtDmd,KAAUvtB,IAAO,MAAM,GACvBwtB,IAAUxtB,IAAO,GACjBytB,IAAUztB,IAAO;AAGvB,QAAI0tB,IAAkB;AACtB,UAAMC,IAASrC,EAAK,IAAI,CAAClb,GAAMpO,MAAU;AACvC,YAAMwP,IAAcpB,EAAK,QAAQid,IAAS,KACpCO,IAASxd,EAAK,QAAQid,IAAS,KAC/BQ,IAAaH,GACbI,IAAWJ,IAAkBE,GAG7BG,KAAiBF,IAAa,OAAO,KAAK,KAAK,MAC/CG,KAAeF,IAAW,OAAO,KAAK,KAAK,MAE3CG,IAAKT,IAAUD,IAAS,KAAK,IAAIQ,CAAa,GAC9CG,IAAKT,IAAUF,IAAS,KAAK,IAAIQ,CAAa,GAC9CI,IAAKX,IAAUD,IAAS,KAAK,IAAIS,CAAW,GAC5CI,IAAKX,IAAUF,IAAS,KAAK,IAAIS,CAAW,GAE5CK,IAAeT,IAAQ,MAAM,IAAI,GAEjClB,IAAW;AAAA,QACf,KAAKc,CAAO,IAAIC,CAAO;AAAA,QACvB,KAAKQ,CAAE,IAAIC,CAAE;AAAA,QACb,KAAKX,CAAM,IAAIA,CAAM,MAAMc,CAAY,MAAMF,CAAE,IAAIC,CAAE;AAAA,QACrD;AAAA,MAAA,EACA,KAAK,GAAG,GAGJE,KAAcT,IAAaD,IAAQ,IAAI,OAAO,KAAK,KAAK,MACxDW,KAAchB,IAAS,KACvBiB,KAAShB,IAAUe,KAAc,KAAK,IAAID,CAAU,GACpDG,KAAShB,IAAUc,KAAc,KAAK,IAAID,CAAU;AAE1D,aAAAZ,KAAmBE,GAEZ;AAAA,QACL,MAAMlB;AAAA,QACN,OAAOtc,EAAK,SAAS,OAAQpO,IAAQ,MAAOspB,EAAK,MAAM;AAAA,QACvD,YAAA9Z;AAAA,QACA,QAAAgd;AAAA,QACA,QAAAC;AAAA,QACA,MAAAre;AAAA,QACA,OAAAwd;AAAA,MAAA;AAAA,IAEJ,CAAC,GAEK1B,IAAgB;AAAA,MACpB;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MACjC;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,IAAA;AAGnC,WACE,gBAAAxrB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAW,GAAGE,GAAO,QAAQ,IAAIb,KAAa,EAAE;AAAA,QAChD,gBAAcC;AAAA,QACd,iBAAe2rB;AAAA,QACf,uBAAqBC;AAAA,QACrB,OAAAnV;AAAA,QACC,GAAGhW;AAAA,QAGF,UAAA;AAAA,WAAA+gB,KAASgK,MACT,gBAAA7qB,EAAC,OAAA,EAAI,WAAWC,GAAO,QACpB,UAAA;AAAA,YAAA4gB,KAAS,gBAAA3gB,EAAC,MAAA,EAAG,WAAWD,GAAO,OAAQ,UAAA4gB,GAAM;AAAA,YAC7CgK,KAAY,gBAAA3qB,EAAC,KAAA,EAAE,WAAWD,GAAO,UAAW,UAAA4qB,EAAA,CAAS;AAAA,UAAA,GACxD;AAAA,UAIF,gBAAA7qB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWC,GAAO;AAAA,cAClB,OAAO;AAAA,gBACL,GAAIgrB,IAAgB,EAAE,yBAAyBC,EAAA,IAAgB,CAAA;AAAA,gBAC/D,OAAO,GAAG5rB,CAAI;AAAA,gBACd,QAAQ,GAAGA,CAAI;AAAA,cAAA;AAAA,cAGjB,UAAA;AAAA,gBAAA,gBAAAY;AAAA,kBAAC;AAAA,kBAAA;AAAA,oBACC,WAAWD,GAAO;AAAA,oBAClB,OAAOX;AAAA,oBACP,QAAQA;AAAA,oBACR,SAAS,OAAOA,CAAI,IAAIA,CAAI;AAAA,oBAG3B,YAAO,IAAI,CAAC0uB,GAAO1sB,wBACjB,KAAA,EACC,UAAA;AAAA,sBAAA,gBAAApB;AAAA,wBAAC;AAAA,wBAAA;AAAA,0BACC,GAAG8tB,EAAM;AAAA,0BACT,MAAMA,EAAM,KAAK,SAASxC,EAAclqB,IAAQkqB,EAAc,MAAM;AAAA,0BACpE,QAAO;AAAA,0BACP,aAAAlW;AAAA,0BACA,WAAW0V,IAAW/qB,GAAO,gBAAgB;AAAA,0BAC7C,OAAO,EAAE,gBAAgB+qB,IAAW,GAAG1pB,IAAQ,GAAG,OAAO,OAAA;AAAA,wBAAU;AAAA,sBAAA;AAAA,sBAIpEwpB,KAAckD,EAAM,aAAa,KAChC,gBAAAhuB;AAAA,wBAAC;AAAA,wBAAA;AAAA,0BACC,GAAGguB,EAAM;AAAA,0BACT,GAAGA,EAAM;AAAA,0BACT,YAAW;AAAA,0BACX,kBAAiB;AAAA,0BACjB,WAAW/tB,GAAO;AAAA,0BAClB,OAAO,EAAE,gBAAgB+qB,IAAW,GAAG1pB,IAAQ,GAAG,OAAO,OAAA;AAAA,0BAExD,UAAA;AAAA,4BAAA,KAAK,MAAM0sB,EAAM,UAAU;AAAA,4BAAE;AAAA,0BAAA;AAAA,wBAAA;AAAA,sBAAA;AAAA,oBAChC,EAAA,GArBI,SAAS1sB,CAAK,EAuBtB,CACD;AAAA,kBAAA;AAAA,gBAAA;AAAA,gBAIF2rB,EAAO,IAAI,CAACe,GAAO1sB,MAClB,gBAAApB;AAAA,kBAACkW;AAAA,kBAAA;AAAA,oBAEC,SAAS,GAAG4X,EAAM,KAAK,KAAK,KAAKA,EAAM,KAAK,KAAK,KAAK,KAAK,MAAMA,EAAM,UAAU,CAAC;AAAA,oBAElF,UAAA,gBAAA9tB;AAAA,sBAAC;AAAA,sBAAA;AAAA,wBACC,WAAWD,GAAO;AAAA,wBAClB,OAAO;AAAA,0BACL,UAAU;AAAA,0BACV,MAAM,GAAG+tB,EAAM,SAAS,EAAE;AAAA,0BAC1B,KAAK,GAAGA,EAAM,SAAS,EAAE;AAAA,0BACzB,OAAO;AAAA,0BACP,QAAQ;AAAA,0BACR,cAAc;AAAA,wBAAA;AAAA,sBAChB;AAAA,oBAAA;AAAA,kBACF;AAAA,kBAbK,WAAW1sB,CAAK;AAAA,gBAAA,CAexB;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA;AAAA,UAIForB,KACC,gBAAAxsB,EAAC,OAAA,EAAI,WAAWD,GAAO,QACpB,UAAA2qB,EAAK,IAAI,CAAClb,GAAMpO,MACf,gBAAAtB,EAAC,OAAA,EAA4B,WAAWC,GAAO,YAC7C,UAAA;AAAA,YAAA,gBAAAC;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWD,GAAO;AAAA,gBAClB,OAAO;AAAA,kBACL,iBAAiByP,EAAK,SAAS8b,EAAclqB,IAAQkqB,EAAc,MAAM;AAAA,gBAAA;AAAA,cAC3E;AAAA,YAAA;AAAA,8BAED,QAAA,EAAK,WAAWvrB,GAAO,aAAc,YAAK,OAAM;AAAA,8BAChD,QAAA,EAAK,WAAWA,GAAO,aAAc,YAAK,MAAA,CAAM;AAAA,UAAA,EAAA,GARzC,UAAUqB,CAAK,EASzB,CACD,EAAA,CACH;AAAA,UAIF,gBAAAtB,EAAC,OAAA,EAAI,WAAWC,GAAO,WACpB,UAAA;AAAA,YAAA2qB,EAAK;AAAA,YAAO;AAAA,YAAyB+B;AAAA,UAAA,EAAA,CACxC;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AAEAF,GAAS,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;GCjMjBwB,KAAY3nB,EAAM;AAAA,EACtB,CAAC;AAAA,IACC,MAAAskB;AAAA,IACA,OAAA/J;AAAA,IACA,UAAAgK;AAAA,IACA,QAAAjV,IAAS;AAAA,IACT,YAAAkV,IAAa;AAAA,IACb,UAAAC,IAAW;AAAA,IACX,UAAAC,IAAW;AAAA,IACX,MAAA1rB,IAAO;AAAA,IACP,SAAAD,IAAU;AAAA,IACV,eAAA4rB,IAAgB;AAAA,IAChB,aAAAC,IAAc;AAAA,IACd,WAAAgD,IAAY;AAAA,IACZ,WAAAvC,IAAY;AAAA,IACZ,WAAAxV,IAAY;AAAA,IACZ,UAAAyV,IAAW;AAAA,IACX,QAAAC,IAAS;AAAA,IACT,aAAAsC,IAAc;AAAA,IACd,WAAA/uB;AAAA,IACA,OAAA0W;AAAA,IACA,GAAGhW;AAAA,EAAA,GACFC,MAAQ;AAET,QAAI,CAAC6qB,KAAQA,EAAK,WAAW;AAC3B,aACE,gBAAA1qB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAW,GAAGE,EAAO,SAAS,IAAIA,EAAO,KAAK,IAAIb,KAAa,EAAE;AAAA,UACjE,aAAWE;AAAA,UACX,gBAAcD;AAAA,UACd,OAAAyW;AAAA,UACC,GAAGhW;AAAA,UAEJ,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWD,EAAO,YACrB,UAAA,gBAAAC,EAAC,QAAA,EAAK,WAAWD,EAAO,WAAW,UAAA,oBAAA,CAAiB,EAAA,CACtD;AAAA,QAAA;AAAA,MAAA;AAKN,UAAMkrB,IAAW,KAAK,IAAI,GAAGP,EAAK,IAAI,CAAAQ,MAAKA,EAAE,KAAK,CAAC,GAC7CU,IAAW,KAAK,IAAI,GAAGlB,EAAK,IAAI,CAAAQ,MAAKA,EAAE,KAAK,CAAC,GAC7CW,IAAaZ,IAAWW,GASxBT,IANa;AAAA,MACjB,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,MACnD,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,MACnD,IAAI,EAAE,cAAc,IAAI,cAAc,IAAI,SAAS,GAAA;AAAA,IAAG,EAG9B/rB,CAAI,GACxBgsB,IAAgBzK,KAASgK,IAAYQ,EAAO,eAAe,GAC3DE,IAAoB3V,IAAS0V,IAAeD,EAAO,cAGnD+C,IAAmB,CAACvC,MAAoB;AAC5C,UAAIjB,EAAK,WAAW,EAAG,QAAO;AAE9B,YAAMqB,IAASrB,EAAK,IAAI,CAACsB,GAAO5qB,MAAU;AACxC,cAAMmW,KAAKnW,KAASspB,EAAK,SAAS,KAAM,KAClClT,KAAI,OAAQwU,EAAM,QAAQJ,KAAYC,IAAc;AAC1D,eAAO,EAAE,GAAAtU,IAAG,GAAAC,GAAA;AAAA,MACd,CAAC;AAED,UAAI2W,IAAW;AAEf,UAAIxC,KAAUjB,EAAK,SAAS,GAAG;AAE7ByD,QAAAA,IAAW,KAAKpC,EAAO,CAAC,EAAE,CAAC,IAAIA,EAAO,CAAC,EAAE,CAAC;AAE1C,iBAAS/pB,IAAI,GAAGA,IAAI+pB,EAAO,QAAQ/pB,KAAK;AACtC,gBAAMkqB,IAAOH,EAAO/pB,IAAI,CAAC,EAAE,KAAK+pB,EAAO/pB,CAAC,EAAE,IAAI+pB,EAAO/pB,IAAI,CAAC,EAAE,KAAK,GAC3DmqB,KAAOJ,EAAO/pB,IAAI,CAAC,EAAE,GACrBoqB,KAAOL,EAAO/pB,CAAC,EAAE,KAAK+pB,EAAO/pB,CAAC,EAAE,IAAI+pB,EAAO/pB,IAAI,CAAC,EAAE,KAAK,GACvDqqB,KAAON,EAAO/pB,CAAC,EAAE;AAEvBmsB,UAAAA,KAAY,MAAMjC,CAAI,IAAIC,EAAI,KAAKC,EAAI,IAAIC,EAAI,KAAKN,EAAO/pB,CAAC,EAAE,CAAC,IAAI+pB,EAAO/pB,CAAC,EAAE,CAAC;AAAA,QAChF;AAAA,MACF;AAEEmsB,QAAAA,IAAWpC,EAAO;AAAA,UAAI,CAACC,GAAO5qB,MAC5BA,MAAU,IAAI,KAAK4qB,EAAM,CAAC,IAAIA,EAAM,CAAC,KAAK,KAAKA,EAAM,CAAC,IAAIA,EAAM,CAAC;AAAA,QAAA,EACjE,KAAK,GAAG;AAIZ,YAAMoC,IAAWD,IACf,MAAMpC,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,UAC3BA,EAAO,CAAC,EAAE,CAAC;AAEnB,aAAO,EAAE,UAAAoC,GAAU,UAAAC,EAAAA;AAAAA,IACrB,GAEM,EAAE,UAAAD,GAAU,UAAAC,MAAaF,EAAiBvC,CAAM;AAEtD,WACE,gBAAA7rB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAW,GAAGE,EAAO,SAAS,IAAIb,KAAa,EAAE;AAAA,QACjD,aAAWE;AAAA,QACX,gBAAcD;AAAA,QACd,iBAAe2rB;AAAA,QACf,kBAAgBD;AAAA,QAChB,uBAAqBE;AAAA,QACrB,OAAAnV;AAAA,QACC,GAAGhW;AAAA,QAGF,UAAA;AAAA,WAAA+gB,KAASgK,MACT,gBAAA7qB,EAAC,OAAA,EAAI,WAAWC,EAAO,QACpB,UAAA;AAAA,YAAA4gB,KAAS,gBAAA3gB,EAAC,MAAA,EAAG,WAAWD,EAAO,OAAQ,UAAA4gB,GAAM;AAAA,YAC7CgK,KAAY,gBAAA3qB,EAAC,KAAA,EAAE,WAAWD,EAAO,UAAW,UAAA4qB,EAAA,CAAS;AAAA,UAAA,GACxD;AAAA,UAIF,gBAAA7qB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWC,EAAO;AAAA,cAClB,OAAO;AAAA,gBACL,QAAQ,GAAGsrB,CAAiB;AAAA,gBAC5B,WAAW,GAAGA,CAAiB;AAAA,gBAC/B,WAAW,GAAGA,CAAiB;AAAA,gBAC/B,GAAIN,IAAgB,EAAE,yBAAyBC,MAAgB,CAAA;AAAA,cAAC;AAAA,cAIjE,UAAA;AAAA,gBAAAH,KACC,gBAAA/qB,EAAC,OAAA,EAAI,WAAWC,EAAO,OACrB,UAAA;AAAA,kBAAA,gBAAAD,EAAC,OAAA,EAAI,WAAWC,EAAO,aACrB,UAAA;AAAA,oBAAA,gBAAAC,EAAC,UAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,CAAQ,GAAE;AAAA,oBAC1D,gBAAAjrB,EAAC,QAAA,EAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,OAAOW,IAAW,IAAI,EAAA,CAAE;AAAA,oBACnF,gBAAA5rB,EAAC,QAAA,EAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,MAAMW,IAAW,GAAG,EAAA,CAAE;AAAA,oBACjF,gBAAA5rB,EAAC,QAAA,EAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAMkrB,IAAW,OAAOW,IAAW,IAAI,EAAA,CAAE;AAAA,oBACnF,gBAAA5rB,EAAC,UAAK,WAAWD,EAAO,YAAa,UAAA,KAAK,MAAM6rB,CAAQ,EAAA,CAAE;AAAA,kBAAA,GAC5D;AAAA,kBACA,gBAAA9rB,EAAC,OAAA,EAAI,WAAWC,EAAO,WACrB,UAAA;AAAA,oBAAA,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,oBACjC,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,SAAA,CAAU;AAAA,kBAAA,EAAA,CACnC;AAAA,gBAAA,GACF;AAAA,gBAIF,gBAAAD,EAAC,OAAA,EAAI,WAAWC,EAAO,eACrB,UAAA;AAAA,kBAAA,gBAAAD;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,WAAWC,EAAO;AAAA,sBAClB,SAAQ;AAAA,sBACR,qBAAoB;AAAA,sBAGpB,UAAA;AAAA,wBAAA,gBAAAC;AAAA,0BAAC;AAAA,0BAAA;AAAA,4BACC,GAAGouB;AAAA,4BACH,MAAMJ;AAAA,4BACN,aAAAC;AAAA,4BACA,WAAWnD,IAAW/qB,EAAO,eAAe;AAAA,0BAAA;AAAA,wBAAA;AAAA,wBAI9C,gBAAAC;AAAA,0BAAC;AAAA,0BAAA;AAAA,4BACC,GAAGmuB;AAAA,4BACH,MAAK;AAAA,4BACL,QAAQ1C;AAAA,4BACR,aAAaxV,IAAY;AAAA,4BACzB,eAAc;AAAA,4BACd,gBAAe;AAAA,4BACf,WAAW6U,IAAW/qB,EAAO,eAAe;AAAA,0BAAA;AAAA,wBAAA;AAAA,wBAI7C2rB,KAAYhB,EAAK,IAAI,CAACsB,GAAO5qB,MAAU;AACtC,gCAAMmW,IAAKnW,KAASspB,EAAK,SAAS,KAAM,KAClClT,IAAI,OAAQwU,EAAM,QAAQJ,KAAYC,IAAc,KACpDS,IAAU;AAEhB,iCACE,gBAAAtsB;AAAA,4BAAC;AAAA,4BAAA;AAAA,8BAEC,GAAGuX,IAAI+U,IAAQ;AAAA,8BACf,GAAG9U,IAAI8U,IAAQ;AAAA,8BACf,OAAOA;AAAA,8BACP,QAAQA;AAAA,8BACR,MAAMN,EAAM,SAASP;AAAA,8BACrB,QAAO;AAAA,8BACP,WAAWX,IAAW/qB,EAAO,cAAc;AAAA,8BAC3C,OAAO,EAAE,gBAAgB+qB,IAAW,GAAG1pB,IAAQ,GAAG,OAAO,OAAA;AAAA,4BAAU;AAAA,4BAR9D,OAAOA,CAAK;AAAA,0BAAA;AAAA,wBAWvB,CAAC;AAAA,sBAAA;AAAA,oBAAA;AAAA,kBAAA;AAAA,kBAIFspB,EAAK,IAAI,CAACsB,GAAO5qB,MAAU;AAC1B,0BAAMmW,IAAKnW,KAASspB,EAAK,SAAS,KAAM,KAClClT,IAAI,OAAQwU,EAAM,QAAQJ,KAAYC,IAAc;AAE1D,2BACE,gBAAA7rB,EAACkW,MAAiC,SAAS,GAAG8V,EAAM,KAAK,KAAKA,EAAM,KAAK,IACvE,UAAA,gBAAAhsB;AAAA,sBAAC;AAAA,sBAAA;AAAA,wBACC,WAAWD,EAAO;AAAA,wBAClB,OAAO;AAAA,0BACL,MAAM,GAAGwX,CAAC;AAAA,0BACV,KAAK,GAAGC,CAAC;AAAA,0BACT,WAAW;AAAA,wBAAA;AAAA,sBACb;AAAA,oBAAA,EACF,GARY,WAAWpW,CAAK,EAS9B;AAAA,kBAEJ,CAAC;AAAA,kBAGAwpB,KAAcF,EAAK,IAAI,CAACsB,GAAO5qB,MAAU;AACxC,0BAAMmW,IAAKnW,KAASspB,EAAK,SAAS,KAAM,KAClClT,IAAI,OAAQwU,EAAM,QAAQJ,KAAYC,IAAc;AAE1D,2BACE,gBAAA7rB;AAAA,sBAAC;AAAA,sBAAA;AAAA,wBAEC,WAAWD,EAAO;AAAA,wBAClB,OAAO;AAAA,0BACL,MAAM,GAAGwX,CAAC;AAAA,0BACV,KAAK,GAAGC,CAAC;AAAA,0BACT,WAAW;AAAA,0BACX,gBAAgBsT,IAAW,GAAG1pB,IAAQ,GAAG,OAAO;AAAA,wBAAA;AAAA,wBAGjD,UAAA4qB,EAAM;AAAA,sBAAA;AAAA,sBATF,SAAS5qB,CAAK;AAAA,oBAAA;AAAA,kBAYzB,CAAC;AAAA,gBAAA,EAAA,CACH;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA;AAAA,UAIF,gBAAAtB,EAAC,OAAA,EAAI,WAAWC,EAAO,QACrB,UAAA;AAAA,YAAA,gBAAAC,EAAC,OAAA,EAAI,WAAWD,EAAO,aACpB,UAAA2qB,EAAK,IAAI,CAAClb,GAAMpO,MACf,gBAAApB,EAACkW,IAAA,EAA+B,SAAS1G,EAAK,OAC5C,UAAA,gBAAAxP,EAAC,OAAA,EAAI,WAAWD,EAAO,YACpB,UAAAyP,EAAK,MAAA,CACR,EAAA,GAHY,SAASpO,CAAK,EAI5B,CACD,GACH;AAAA,YACA,gBAAAtB,EAAC,OAAA,EAAI,WAAWC,EAAO,WACpB,UAAA;AAAA,cAAA2qB,EAAK;AAAA,cAAO;AAAA,YAAA,EAAA,CACf;AAAA,UAAA,EAAA,CACF;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AAEAqD,GAAU,cAAc;;;;;GC7QXM,KAAcrvB;AAAA,EACzB,CAAC;AAAA,IACC,OAAAsvB,IAAQ,KAAG;AAAA,IACX,UAAArvB;AAAA,IACA,WAAAC;AAAA,IACA,WAAAqvB,IAAY;AAAA,IACZ,iBAAAC;AAAA,IACA,OAAA5Y;AAAA,IACA,GAAGhW;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM4uB,IAAgB,GAAI,IAAIH,IAAS,GAAG;AAE1C,WACE,gBAAAxuB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf,EAAKiB,GAAO,WAAWb,CAAS;AAAA,QAC3C,OAAO;AAAA,UACL,GAAG0W;AAAA,UACH,iBAAA4Y;AAAA,QAAA;AAAA,QAEF,mBAAiBD;AAAA,QAChB,GAAG3uB;AAAA,QAEJ,UAAA;AAAA,UAAA,gBAAAI;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWD,GAAO;AAAA,cAClB,OAAO,EAAE,eAAA0uB,EAAA;AAAA,YAAc;AAAA,UAAA;AAAA,UAEzB,gBAAAzuB,EAAC,OAAA,EAAI,WAAWD,GAAO,SACpB,UAAAd,EAAA,CACH;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AAEAovB,GAAY,cAAc;;;;;;;;;;;;;GCtBpBK,KAAO;AAGb,SAASC,GACPC,GACAC,GACAC,GACAC,GACqB;AACrB,SAAOC,GAAQ,MAAM;AAInB,QAHyBF,IAAe,IAAI,IAAIC,IAAgB,KAGxCF;AACtB,aAAO,MAAM,KAAK,EAAE,QAAQA,KAAc,CAAC3sB,GAAGF,MAAMA,IAAI,CAAC;AAG3D,UAAMitB,IAAmB,KAAK,IAAIL,IAAcE,GAAc,CAAC,GACzDI,IAAoB,KAAK,IAAIN,IAAcE,GAAcD,CAAU,GAEnEM,IAAqBF,IAAmBF,IAAgB,GACxDK,IAAsBF,IAAoBL,IAAaE,IAAgB,GAEvEM,IAAa,MAAM,KAAK,EAAE,QAAQN,EAAA,GAAiB,CAAC7sB,GAAGF,MAAMA,IAAI,CAAC,GAClEstB,IAAY,MAAM,KAAK,EAAE,QAAQP,EAAA,GAAiB,CAAC7sB,GAAGF,MAAM6sB,IAAaE,IAAgB/sB,IAAI,CAAC;AAEpG,QAAI,CAACmtB,KAAsBC,GAAqB;AAC9C,YAAMG,IAAgB,IAAI,IAAIT;AAE9B,aAAO,CAAC,GADU,MAAM,KAAK,EAAE,QAAQS,EAAA,GAAiB,CAACrtB,GAAGF,MAAMA,IAAI,CAAC,GACjD0sB,IAAM,GAAGY,CAAS;AAAA,IAC1C;AAEA,QAAIH,KAAsB,CAACC,GAAqB;AAC9C,YAAMI,IAAiB,IAAI,IAAIV,GACzBW,IAAa,MAAM;AAAA,QACvB,EAAE,QAAQD,EAAA;AAAA,QACV,CAACttB,GAAGF,MAAM6sB,IAAaW,IAAiBxtB,IAAI;AAAA,MAAA;AAE9C,aAAO,CAAC,GAAGqtB,GAAYX,IAAM,GAAGe,CAAU;AAAA,IAC5C;AAEA,QAAIN,KAAsBC,GAAqB;AAC7C,YAAMM,IAAc,MAAM;AAAA,QACxB,EAAE,QAAQR,IAAoBD,IAAmB,EAAA;AAAA,QACjD,CAAC/sB,GAAGF,MAAMitB,IAAmBjtB;AAAA,MAAA;AAE/B,aAAO,CAAC,GAAGqtB,GAAYX,IAAM,GAAGgB,GAAahB,IAAM,GAAGY,CAAS;AAAA,IACjE;AAEA,WAAO,CAAA;AAAA,EACT,GAAG,CAACV,GAAaC,GAAYC,GAAcC,CAAa,CAAC;AAC3D;AAMO,MAAMY,KAAa3wB;AAAA,EACxB,CACE;AAAA,IACE,aAAA4vB;AAAA,IACA,YAAAC;AAAA,IACA,cAAAC,IAAe;AAAA,IACf,eAAAC,IAAgB;AAAA,IAChB,UAAAvuB;AAAA,IACA,cAAAovB,IAAe;AAAA,IACf,eAAAC,IAAgB;AAAA,IAChB,QAAAC,IAAS;AAAA,MACP,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IAAA;AAAA,IAER,MAAA1wB,IAAO;AAAA,IACP,WAAAF;AAAA,IACA,UAAAS,IAAW;AAAA,IACX,GAAGC;AAAA,EAAA,GAELC,MACG;AACH,UAAMkwB,IAAkBpB,GAAmBC,GAAaC,GAAYC,GAAcC,CAAa,GAEzFllB,IAAc,CAACmmB,MAAiB;AACpC,MAAI,CAACrwB,KAAYa,KAAYwvB,MAASpB,KAAeoB,KAAQ,KAAKA,KAAQnB,KACxEruB,EAASwvB,CAAI;AAAA,IAEjB;AAEA,WAAInB,KAAc,IACT,OAIP,gBAAA7uB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,EAAO;AAAA,UACPA,EAAOX,CAAI;AAAA,UACXO,KAAYI,EAAO;AAAA,UACnBb;AAAA,QAAA;AAAA,QAEF,cAAW;AAAA,QACV,GAAGU;AAAA,QAEJ,UAAA,gBAAAE,EAAC,MAAA,EAAG,WAAWC,EAAO,MAEnB,UAAA;AAAA,UAAA8vB,uBACE,MAAA,EACC,UAAA,gBAAA/vB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWhB,EAAKiB,EAAO,MAAMA,EAAO,GAAG;AAAA,cACvC,SAAS,MAAM8J,EAAY,CAAC;AAAA,cAC5B,UAAUlK,KAAYivB,MAAgB;AAAA,cACtC,cAAYkB,EAAO;AAAA,cACnB,MAAK;AAAA,cAEL,UAAA;AAAA,gBAAA,gBAAA9vB,EAAC,QAAA,EAAK,WAAWD,EAAO,SAAS,UAAA,KAAC;AAAA,kCACjC,QAAA,EAAK,WAAWA,EAAO,SAAU,YAAO,MAAA,CAAM;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA,GAEnD;AAAA,UAID6vB,uBACE,MAAA,EACC,UAAA,gBAAA9vB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWhB,EAAKiB,EAAO,MAAMA,EAAO,GAAG;AAAA,cACvC,SAAS,MAAM8J,EAAY+kB,IAAc,CAAC;AAAA,cAC1C,UAAUjvB,KAAYivB,MAAgB;AAAA,cACtC,cAAYkB,EAAO;AAAA,cACnB,MAAK;AAAA,cAEL,UAAA;AAAA,gBAAA,gBAAA9vB,EAAC,QAAA,EAAK,WAAWD,EAAO,SAAS,UAAA,KAAC;AAAA,kCACjC,QAAA,EAAK,WAAWA,EAAO,SAAU,YAAO,SAAA,CAAS;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA,GAEtD;AAAA,UAIDgwB,EAAgB,IAAI,CAACE,GAAY7uB,MAC5B6uB,MAAevB,KAEf,gBAAA1uB,EAAC,MAAA,EACC,UAAA,gBAAAA,EAAC,QAAA,EAAK,WAAWlB,EAAKiB,EAAO,MAAMA,EAAO,IAAI,GAAG,UAAA,MAAA,CAAG,EAAA,GAD7C,QAAQqB,CAAK,EAEtB,sBAKD,MAAA,EACC,UAAA,gBAAApB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWlB;AAAA,gBACTiB,EAAO;AAAA,gBACPA,EAAO;AAAA,gBACPkwB,MAAerB,KAAe7uB,EAAO;AAAA,cAAA;AAAA,cAEvC,SAAS,MAAM8J,EAAYomB,CAAoB;AAAA,cAC/C,UAAAtwB;AAAA,cACA,cAAY,cAAcswB,CAAU;AAAA,cACpC,gBAAcA,MAAerB,IAAc,SAAS;AAAA,cACpD,MAAK;AAAA,cAEJ,UAAAqB;AAAA,YAAA;AAAA,UAAA,KAbIA,CAeT,CAEH;AAAA,UAGAL,uBACE,MAAA,EACC,UAAA,gBAAA9vB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWhB,EAAKiB,EAAO,MAAMA,EAAO,GAAG;AAAA,cACvC,SAAS,MAAM8J,EAAY+kB,IAAc,CAAC;AAAA,cAC1C,UAAUjvB,KAAYivB,MAAgBC;AAAA,cACtC,cAAYiB,EAAO;AAAA,cACnB,MAAK;AAAA,cAEL,UAAA;AAAA,gBAAA,gBAAA9vB,EAAC,QAAA,EAAK,WAAWD,EAAO,SAAU,YAAO,MAAK;AAAA,gBAC9C,gBAAAC,EAAC,QAAA,EAAK,WAAWD,EAAO,SAAS,UAAA,IAAA,CAAC;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA,GAEtC;AAAA,UAID8vB,uBACE,MAAA,EACC,UAAA,gBAAA/vB;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWhB,EAAKiB,EAAO,MAAMA,EAAO,GAAG;AAAA,cACvC,SAAS,MAAM8J,EAAYglB,CAAU;AAAA,cACrC,UAAUlvB,KAAYivB,MAAgBC;AAAA,cACtC,cAAYiB,EAAO;AAAA,cACnB,MAAK;AAAA,cAEL,UAAA;AAAA,gBAAA,gBAAA9vB,EAAC,QAAA,EAAK,WAAWD,EAAO,SAAU,YAAO,MAAK;AAAA,gBAC9C,gBAAAC,EAAC,QAAA,EAAK,WAAWD,EAAO,SAAS,UAAA,IAAA,CAAC;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA,EACpC,CACF;AAAA,QAAA,EAAA,CAEJ;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AAEA4vB,GAAW,cAAc;;;;;;;;;;;;;;;GC9NnBO,KAAqB9oB,GAAmD,MAAS;AAEvF,SAAS+oB,KAAiB;AACxB,QAAMpoB,IAAUC,EAAWkoB,EAAkB;AAC7C,MAAI,CAACnoB;AACH,UAAM,IAAI,MAAM,wDAAwD;AAE1E,SAAOA;AACT;AAWA,MAAMqoB,KAAcpxB;AAAA,EAClB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,MAAAE,IAAO,MAAM,SAAAD,IAAU,WAAW,cAAAiL,EAAA,GAAgBvK,MAAQ;AAChF,UAAM,CAAC4E,GAAQC,CAAS,IAAI5D,EAAS,EAAK,GACpC,CAAC4K,GAAUC,CAAW,IAAI7K,EAA0C,IAAI,GAExEuvB,IAAShtB,EAAY,CAACzB,MAAwB;AAClD,MAAAA,EAAE,eAAA,GACFA,EAAE,gBAAA,GAEF+J,EAAY,EAAE,GAAG/J,EAAE,SAAS,GAAGA,EAAE,SAAS,GAC1C8C,EAAU,EAAI,GACd0F,KAAA,QAAAA,EAAe,KAGf,SAAS,KAAK,MAAM,WAAW,UAC/B,SAAS,KAAK,MAAM,aAAa;AAAA,IACnC,GAAG,CAACA,CAAY,CAAC,GAEXkmB,IAAUjtB,EAAY,MAAM;AAChC,MAAAqB,EAAU,EAAK,GACfiH,EAAY,IAAI,GAChBvB,KAAA,QAAAA,EAAe,KAGf,SAAS,KAAK,MAAM,WAAW,IAC/B,SAAS,KAAK,MAAM,aAAa;AAAA,IACnC,GAAG,CAACA,CAAY,CAAC;AAGjB,IAAAlJ,EAAU,MAAM;AACd,YAAMS,IAAgB,CAACC,MAAqB;AAC1C,QAAIA,EAAE,QAAQ,YAAY6C,KACxB6rB,EAAA;AAAA,MAEJ;AAEA,UAAI7rB;AACF,wBAAS,iBAAiB,WAAW9C,CAAa,GAC3C,MAAM,SAAS,oBAAoB,WAAWA,CAAa;AAAA,IAEtE,GAAG,CAAC8C,GAAQ6rB,CAAO,CAAC,GAGpBpvB,EAAU,MACD,MAAM;AACX,MAAIuD,MACF,SAAS,KAAK,MAAM,WAAW,IAC/B,SAAS,KAAK,MAAM,aAAa;AAAA,IAErC,GACC,CAACA,CAAM,CAAC;AAEX,UAAM8U,IAAwC;AAAA,MAC5C,QAAA9U;AAAA,MACA,UAAAiH;AAAA,MACA,QAAA2kB;AAAA,MACA,SAAAC;AAAA,MACA,MAAAlxB;AAAA,MACA,SAAAD;AAAA,IAAA;AAGF,6BACG+wB,GAAmB,UAAnB,EAA4B,OAAO3W,GAClC,UAAA,gBAAAvZ,EAAC,OAAA,EAAI,KAAAH,GAAU,WAAWf,EAAKiB,GAAO,MAAMb,CAAS,GAClD,UAAAD,GACH,GACF;AAAA,EAEJ;AACF,GASMsxB,KAAqBvxB;AAAA,EACzB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,SAAAuK,IAAU,GAAA,GAAS5J,MAAQ;AACjD,UAAM,EAAE,QAAAwwB,EAAA,IAAWF,GAAA;AAEnB,WAAI1mB,KAAWrD,EAAM,eAAenH,CAAQ,IACnCmH,EAAM,aAAanH,GAAmF;AAAA,MAC3G,eAAeoxB;AAAA,MACf,KAAAxwB;AAAA,IAAA,CACD,IAID,gBAAAG;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,SAASb,CAAS;AAAA,QACzC,eAAemxB;AAAA,QAEd,UAAApxB;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAgBMuxB,KAAqBxxB;AAAA,EACzB,CAAC;AAAA,IACC,UAAAC;AAAA,IACA,WAAAC;AAAA,IACA,OAAAkM,IAAQ;AAAA,IACR,YAAAC,IAAa;AAAA,IACb,aAAAC,IAAc;AAAA,IACd,kBAAAmlB,IAAmB;AAAA,IACnB,iBAAAC,IAAkB;AAAA,IAClB,WAAAC;AAAA,IACA,MAAMC;AAAA,IACN,SAASC;AAAA,IACT,GAAGC;AAAA,EAAA,GACFjxB,MAAQ;AACT,UAAM,EAAE,QAAA4E,GAAQ,UAAAiH,GAAU,SAAA4kB,GAAS,MAAMS,GAAa,SAASC,EAAA,IAAmBb,GAAA,GAC5E/wB,IAAOwxB,KAAYG,GACnB5xB,IAAU0xB,KAAeG,GACzBvlB,IAAaxK,EAAuB,IAAI,GAKxC,CAACgwB,GAAkBC,CAAmB,IAAIpwB,EAAS4K,CAAQ;AA8CjE,QA5CAxK,EAAU,MAAM;AACd,UAAI,CAACwK,KAAY,CAACD,EAAW,WAAW,CAACilB,GAAiB;AACxD,QAAAQ,EAAoBxlB,CAAQ;AAC5B;AAAA,MACF;AAEA,YAAMsY,IAAOvY,EAAW,QAAQ,sBAAA,GAC1BY,IAAgB,OAAO,YACvBC,IAAiB,OAAO;AAE9B,UAAIiL,IAAI7L,EAAS,IAAIL,GACjBmM,IAAI9L,EAAS,IAAIL;AAmBrB,cAhBIkM,IAAIyM,EAAK,QAAQ3X,IAAgBokB,MACnClZ,IAAI7L,EAAS,IAAIsY,EAAK,QAAQ3Y,IAE5BkM,IAAIkZ,MACNlZ,IAAIkZ,IAIFjZ,IAAIwM,EAAK,SAAS1X,IAAiBmkB,MACrCjZ,IAAI9L,EAAS,IAAIsY,EAAK,SAAS3Y,IAE7BmM,IAAIiZ,MACNjZ,IAAIiZ,IAIErlB,GAAA;AAAA,QACN,KAAK;AACH,UAAAmM,IAAI7L,EAAS,IAAIsY,EAAK,QAAQ;AAC9B;AAAA,QACF,KAAK;AACH,UAAAzM,IAAI7L,EAAS,IAAIsY,EAAK;AACtB;AAAA,MAAA;AAGJ,MAAAzM,KAAKjM,GAEL4lB,EAAoB,EAAE,GAAA3Z,GAAG,GAAAC,GAAG;AAAA,IAC9B,GAAG,CAAC9L,GAAUN,GAAOE,GAAaD,GAAYolB,GAAkBC,CAAe,CAAC,GAE5E,CAACjsB,KAAU,CAACwsB,EAAkB,QAAO;AAEzC,UAAM/kB,IACJ,gBAAApM,EAAAsY,IAAA,EAEE,UAAA;AAAA,MAAA,gBAAApY;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAWD,GAAO;AAAA,UAClB,SAASuwB;AAAA,UACT,eAAe,CAAC1uB,MAAMA,EAAE,eAAA;AAAA,UACxB,OAAO;AAAA,YACL,UAAU;AAAA,YACV,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,QAAQ;AAAA,YACR,eAAe;AAAA,UAAA;AAAA,QACjB;AAAA,MAAA;AAAA,MAEF,gBAAA5B;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAK,CAACmxB,MAAS;AACb,YAAA1lB,EAAW,UAAU0lB,GACjB,OAAOtxB,KAAQ,aAAYA,EAAIsxB,CAAI,IAC9BtxB,QAAS,UAAUsxB;AAAA,UAC9B;AAAA,UACA,WAAWryB;AAAA,YACTiB,GAAO;AAAA,YACPb;AAAA,UAAA;AAAA,UAEF,aAAWE;AAAA,UACX,gBAAcD;AAAA,UACd,OAAO;AAAA,YACL,UAAU;AAAA,YACV,MAAM,GAAG8xB,EAAiB,CAAC;AAAA,YAC3B,KAAK,GAAGA,EAAiB,CAAC;AAAA,YAC1B,QAAQ;AAAA,YACR,GAAGH,EAAK;AAAA,UAAA;AAAA,UAEV,MAAK;AAAA,UACL,oBAAiB;AAAA,UACjB,cAAcA,EAAK;AAAA,UACnB,cAAcA,EAAK;AAAA,UAElB,UAAA7xB;AAAA,QAAA;AAAA,MAAA;AAAA,IACH,GACF;AAGF,WAAOkZ,GAAajM,GAASykB,KAAa,SAAS,IAAI;AAAA,EACzD;AACF,GAgBMS,KAAkBpyB;AAAA,EACtB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,UAAAS,IAAW,IAAO,aAAAukB,IAAc,IAAO,UAAAjW,GAAU,eAAAojB,IAAgB,IAAM,MAAA9f,GAAM,UAAA4S,GAAU,SAAAmN,GAAS,QAAAC,EAAA,GAAU1xB,MAAQ;AACxI,UAAM,EAAE,SAAAywB,EAAA,IAAYH,GAAA,GACd,CAAC5F,GAAeiH,CAAgB,IAAI1wB,EAAS,EAAK,GAElD+I,IAAc,CAACjI,MAAwB;AAE3C,UADA,QAAQ,IAAI,6BAA6B,EAAE,UAAAjC,GAAU,UAAAV,GAAU,GAC3DU,GAAU;AACZ,QAAAiC,EAAE,eAAA;AACF;AAAA,MACF;AAEA,MAAAA,EAAE,gBAAA,GACFqM,KAAA,QAAAA,EAAWrM,IAEPyvB,KAAiB,CAACzvB,EAAE,oBACtB0uB,EAAA;AAAA,IAEJ,GAEM3uB,IAAgB,CAACC,MAA2B;AAChD,MAAIjC,MAEAiC,EAAE,QAAQ,WAAWA,EAAE,QAAQ,SACjCA,EAAE,eAAA,GACFiI,EAAYjI,CAAgC;AAAA,IAEhD;AAEA,WACE,gBAAA9B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPJ,KAAYI,GAAO;AAAA,UACnBmkB,KAAenkB,GAAO;AAAA,UACtBb;AAAA,QAAA;AAAA,QAEF,MAAK;AAAA,QACL,UAAUS,IAAW,KAAK;AAAA,QAC1B,iBAAeA;AAAA,QACf,gBAAc2xB;AAAA,QACd,oBAAkB/G;AAAA,QAClB,iBAAe5qB;AAAA,QACf,oBAAkBukB;AAAA,QAClB,SAASra;AAAA,QACT,WAAWlI;AAAA,QACX,cAAc,MAAM6vB,EAAiB,EAAI;AAAA,QACzC,cAAc,MAAMA,EAAiB,EAAK;AAAA,QAExC,UAAA;AAAA,WAAAF,KAAWC,wBACV,QAAA,EAAK,WAAWxxB,GAAO,WACrB,UAAAuxB,IAAU,MAAM,IAAA,CACnB;AAAA,UAED/f,KAAQ,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAO,UAAAwR,GAAK;AAAA,UAC7C,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,UAAW,UAAAd,GAAS;AAAA,UAC3CklB,KAAY,gBAAAnkB,EAAC,QAAA,EAAK,WAAWD,GAAO,UAAW,UAAAokB,EAAA,CAAS;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAG/D;AACF,GAOMsN,KAAuBzyB;AAAA,EAC3B,CAAC,EAAE,WAAAE,EAAA,GAAaW,MAEZ,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,WAAWb,CAAS;AAAA,MAC3C,MAAK;AAAA,MACL,oBAAiB;AAAA,IAAA;AAAA,EAAA;AAIzB,GAQMwyB,KAAmB1yB;AAAA,EACvB,CAAC,EAAE,UAAAC,GAAU,WAAAC,EAAA,GAAaW,MAEtB,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,MACvC,MAAK;AAAA,MAEJ,UAAAD;AAAA,IAAA;AAAA,EAAA;AAIT,GAUM0yB,KAAiB3yB;AAAA,EACrB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,MAAMiL,GAAgB,cAAAC,EAAA,GAAgBvK,MAAQ;AACpE,UAAM+xB,IAAgBzB,GAAA,GAChB,CAAC5lB,GAAcC,CAAe,IAAI1J,EAAS,EAAK,GAChD,CAAC4K,GAAUC,CAAW,IAAI7K,EAA0C,IAAI,GACxE2D,IAAS0F,MAAmB,SAAYA,IAAiBI,GACzDsnB,IAAkB5wB,EAAA,GAClB6wB,IAAkB7wB,EAAA,GAElBmhB,IAAmB,CAACvX,MAAqB;AAC7C,MAAIV,MAAmB,UACrBK,EAAgBK,CAAO,GAEzBT,KAAA,QAAAA,EAAeS;AAAA,IACjB,GAEMknB,IAAa,CAACnwB,MAAwB;AAC1C,mBAAakwB,EAAgB,OAAO;AACpC,YAAMxuB,IAAU1B,EAAE;AAClB,MAAAiwB,EAAgB,UAAU,WAAW,MAAM;AACzC,cAAM7N,IAAO1gB,EAAQ,sBAAA;AACrB,QAAAqI,EAAY,EAAE,GAAGqY,EAAK,QAAQ,GAAG,GAAGA,EAAK,MAAM,GAAG,GAClD5B,EAAiB,EAAI;AAAA,MACvB,GAAG,GAAG;AAAA,IACR,GAEM4P,IAAiB,MAAM;AAE3B,mBAAaF,EAAgB,OAAO;AAAA,IACtC,GAEMG,IAAc,MAAM;AACxB,mBAAaJ,EAAgB,OAAO,GACpCC,EAAgB,UAAU,WAAW,MAAM;AACzC,QAAA1P,EAAiB,EAAK;AAAA,MACxB,GAAG,GAAG;AAAA,IACR;AAEA,WAAAlhB,EAAU,MACD,MAAM;AACX,mBAAa2wB,EAAgB,OAAO,GACpC,aAAaC,EAAgB,OAAO;AAAA,IACtC,GACC,CAAA,CAAE,GAGH,gBAAA9xB,EAACkwB,GAAmB,UAAnB,EAA4B,OAAO;AAAA,MAClC,QAAAzrB;AAAA,MACA,UAAAiH;AAAA,MACA,QAAQqmB;AAAA,MACR,SAASE;AAAA,MACT,YAAYD;AAAA,MACZ,MAAMJ,EAAc;AAAA,MACpB,SAASA,EAAc;AAAA,IAAA,GAEvB,UAAA,gBAAA5xB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAAX;AAAA,QACA,cAAc,MAAM;AAClB,uBAAa4yB,EAAgB,OAAO,GACpC,aAAaD,EAAgB,OAAO;AAAA,QACtC;AAAA,QACA,cAAc,MAAMI,EAAA;AAAA,QAEnB,UAAAhzB;AAAA,MAAA;AAAA,IAAA,GAEL;AAAA,EAEJ;AACF,GASMizB,KAAwBlzB;AAAA,EAC5B,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,UAAAS,IAAW,IAAO,MAAA4R,EAAA,GAAQ1R,MAAQ;AACxD,UAAM,EAAE,QAAAwwB,GAAQ,SAAAC,GAAS,QAAA7rB,EAAA,IAAW0rB,GAAA,GAC9B,CAAC5F,GAAeiH,CAAgB,IAAI1wB,EAAS,EAAK,GAElDgL,IAAmB,CAAClK,MAAwB;AAChD,MAAA4vB,EAAiB,EAAI,GAChB7xB,KACH0wB,EAAOzuB,CAAC;AAAA,IAEZ,GAEMmK,IAAmB,MAAM;AAC7B,MAAAylB,EAAiB,EAAK,GAEtBlB,EAAA;AAAA,IACF;AAEA,WACE,gBAAAxwB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPJ,KAAYI,GAAO;AAAA,UACnB0E,KAAU1E,GAAO;AAAA,UACjBb;AAAA,QAAA;AAAA,QAEF,MAAK;AAAA,QACL,iBAAc;AAAA,QACd,iBAAeuF;AAAA,QACf,iBAAe9E;AAAA,QACf,oBAAkB4qB;AAAA,QAClB,iBAAe5qB;AAAA,QACf,cAAY8E,IAAS,SAAS;AAAA,QAC9B,cAAcqH;AAAA,QACd,cAAcC;AAAA,QAEb,UAAA;AAAA,UAAAwF,KAAQ,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,MAAO,UAAAwR,GAAK;AAAA,UAC7C,gBAAAvR,EAAC,QAAA,EAAK,WAAWD,GAAO,UAAW,UAAAd,GAAS;AAAA,4BAC3C,QAAA,EAAK,WAAWc,GAAO,gBAAgB,eAAY,QAAO,UAAA,IAAA,CAAC;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGlE;AACF,GAOMoyB,KAAwBnzB;AAAA,EAC5B,CAAC,EAAE,WAAAE,GAAW,cAAAkzB,GAAc,cAAAC,GAAc,GAAGzyB,EAAA,GAASC,MAAQ;AAC5D,UAAMkI,IAAUooB,GAAA,GACVmC,IAAarxB,EAAuB,IAAI,GAExC6K,IAAmB,MAAM;;AAG7B,OAAAzK,IAAA0G,EAAQ,eAAR,QAAA1G,EAAA,KAAA0G,IACAqqB,KAAA,QAAAA;AAAA,IACF,GAEMrmB,IAAmB,MAAM;AAE7B,MAAAsmB,KAAA,QAAAA,KACAtqB,EAAQ,QAAA;AAAA,IACV;AAGA,WACE,gBAAA/H;AAAA,MAACwwB;AAAA,MAAA;AAAA,QACE,GAAG5wB;AAAA,QACJ,KAAK,CAACuxB,MAAS;AACb,UAAAmB,EAAW,UAAUnB,GACjB,OAAOtxB,KAAQ,aAAYA,EAAIsxB,CAAI,IAC9BtxB,QAAS,UAAUsxB;AAAA,QAC9B;AAAA,QACA,WAAWryB,EAAKiB,GAAO,YAAYb,CAAS;AAAA,QAC5C,cAAc4M;AAAA,QACd,cAAcC;AAAA,MAAA;AAAA,IAAA;AAAA,EAGpB;AACF;AAGAqkB,GAAY,cAAc;AAC1BG,GAAmB,cAAc;AACjCC,GAAmB,cAAc;AACjCY,GAAgB,cAAc;AAC9BK,GAAqB,cAAc;AACnCC,GAAiB,cAAc;AAC/BC,GAAe,cAAc;AAC7BO,GAAsB,cAAc;AACpCC,GAAsB,cAAc;AAG7B,MAAMI,KAAuB,OAAO,OAAOnC,IAAa;AAAA,EAC7D,SAASG;AAAA,EACT,SAASC;AAAA,EACT,MAAMY;AAAA,EACN,WAAWK;AAAA,EACX,OAAOC;AAAA,EACP,KAAKC;AAAA,EACL,YAAYO;AAAA,EACZ,YAAYC;AACd,CAAC;;;;;;;;;;;;;;;;;;;;;;GC7iBKK,KAAeprB,GAAwC,IAAI,GAE3DqrB,KAAW,MAAM;AACrB,QAAM1qB,IAAUC,EAAWwqB,EAAY;AACvC,MAAI,CAACzqB;AACH,UAAM,IAAI,MAAM,8CAA8C;AAEhE,SAAOA;AACT,GAEM2qB,KAAQtsB,EAAM;AAAA,EAClB,CAAC;AAAA,IACC,MAAAqE;AAAA,IACA,aAAAP,IAAc;AAAA,IACd,cAAAE;AAAA,IACA,WAAAlL;AAAA,IACA,UAAAD;AAAA,IACA,GAAGW;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM,CAAC4E,GAAQC,CAAS,IAAI5D,EAAS2J,KAAQP,CAAW;AAGxD,IAAAhJ,EAAU,MAAM;AACd,MAAIuJ,MAAS,UACX/F,EAAU+F,CAAI;AAAA,IAElB,GAAG,CAACA,CAAI,CAAC;AAET,UAAM2X,IAAmB/e,EAAY,CAACwH,MAAqB;AACzD,MAAAnG,EAAUmG,CAAO,GACjBT,KAAA,QAAAA,EAAeS;AAAA,IACjB,GAAG,CAACT,CAAY,CAAC,GAEXmP,IAAkC;AAAA,MACtC,MAAM9U;AAAA,MACN,SAAS2d;AAAA,IAAA;AAGX,WACE,gBAAApiB,EAACwyB,GAAa,UAAb,EAAsB,OAAOjZ,GAC5B,UAAA,gBAAAvZ,EAAC,OAAA,EAAI,KAAAH,GAAU,WAAAX,GAAuB,GAAGU,GACtC,UAAAX,GACH,GACF;AAAA,EAEJ;AACF,GAQM0zB,KAAevsB,EAAM;AAAA,EACzB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,SAAAuK,IAAU,IAAO,GAAG7J,EAAA,GAASC,MAAQ;AAC3D,UAAM,EAAE,SAAA+K,EAAA,IAAY6nB,GAAA;AAEpB,WAAIhpB,IACKrD,EAAM,aAAanH,GAAgC;AAAA,MACxD,SAAS,MAAM2L,EAAQ,EAAI;AAAA,MAC3B,GAAGhL;AAAA,IAAA,CACJ,IAID,gBAAAI;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,SAASb,CAAS;AAAA,QACzC,SAAS,MAAM0L,EAAQ,EAAI;AAAA,QAC1B,GAAGhL;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAmBM2zB,KAAexsB,EAAM;AAAA,EACzB,CAAC;AAAA,IACC,UAAAnH;AAAA,IACA,WAAAC;AAAA,IACA,MAAAiM,IAAO;AAAA,IACP,MAAA/L,IAAO;AAAA,IACP,SAAAD,IAAU;AAAA,IACV,aAAAojB,IAAc;AAAA,IACd,qBAAAC,IAAsB;AAAA,IACtB,eAAAhK,IAAgB;AAAA,IAChB,WAAAmY;AAAA,IACA,iBAAAkC;AAAA,IACA,sBAAAC;AAAA,IACA,mBAAAC;AAAA,IACA,iBAAAC;AAAA,IACA,kBAAAC;AAAA,IACA,GAAGrzB;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM,EAAE,MAAA4K,GAAM,SAAAG,EAAA,IAAY6nB,GAAA,GACpBhnB,IAAaxK,EAAuB,IAAI,GACxCiyB,IAAajyB,EAAuB,IAAI;AA4F9C,QAzFAC,EAAU,MAAM;AACd,UAAI,CAACuJ,KAAQ,CAAC+N,EAAe;AAE7B,YAAM7W,IAAgB,CAAC0D,MAAyB;AAC9C,QAAIA,EAAM,QAAQ,aAChBwtB,KAAA,QAAAA,EAAkBxtB,IACbA,EAAM,oBACTuF,EAAQ,EAAK;AAAA,MAGnB;AAEA,sBAAS,iBAAiB,WAAWjJ,CAAa,GAC3C,MAAM,SAAS,oBAAoB,WAAWA,CAAa;AAAA,IACpE,GAAG,CAAC8I,GAAM+N,GAAeqa,GAAiBjoB,CAAO,CAAC,GAGlD1J,EAAU,MAAM;AACd,UAAI,CAACuJ,EAAM;AAEX,YAAMiY,IAAgB,OAAO,iBAAiB,SAAS,IAAI,EAAE;AAC7D,sBAAS,KAAK,MAAM,WAAW,UAC/B,SAAS,KAAK,MAAM,aAAa,QAE1B,MAAM;AACX,iBAAS,KAAK,MAAM,WAAWA,GAC/B,SAAS,KAAK,MAAM,aAAa;AAAA,MACnC;AAAA,IACF,GAAG,CAACjY,CAAI,CAAC,GAGTvJ,EAAU,MAAM;AACd,UAAI,CAACuJ,EAAM;AAEX,YAAM0oB,IAAwB,SAAS,eACjCjnB,IAAUT,EAAW;AAE3B,UAAIS,GAAS;AAKX,cAAMknB,IAHoBlnB,EAAQ;AAAA,UAChC;AAAA,QAAA,EAEuC,CAAC;AAE1C,QAAIknB,IACFA,EAAe,MAAA,IAEflnB,EAAQ,MAAA;AAGV,cAAMmnB,IAAa,IAAI,MAAM,OAAO;AACpC,QAAAL,KAAA,QAAAA,EAAkBK;AAAA,MACpB;AAEA,aAAO,MAAM;AACX,YAAIF,GAAuB;AACzB,UAAAA,EAAsB,MAAA;AACtB,gBAAME,IAAa,IAAI,MAAM,OAAO;AACpC,UAAAJ,KAAA,QAAAA,EAAmBI;AAAA,QACrB;AAAA,MACF;AAAA,IACF,GAAG,CAAC5oB,GAAMuoB,GAAiBC,CAAgB,CAAC,GAG5C/xB,EAAU,MAAM;AACd,UAAI,CAACuJ,KAAQ,CAAC+X,EAAqB;AAEnC,YAAM8Q,IAAoB,CAACjuB,MAAwB;AACjD,cAAM0T,IAAS1T,EAAM,QACfkuB,IAAUL,EAAW,SACrBhnB,IAAUT,EAAW;AAE3B,QAAI8nB,KAAWrnB,KAAW6M,KAEpBwa,EAAQ,SAASxa,CAAM,KAAK,CAAC7M,EAAQ,SAAS6M,CAAM,MACtD+Z,KAAA,QAAAA,EAAuBztB,IACvB0tB,KAAA,QAAAA,EAAoB1tB,IAEfA,EAAM,oBACTuF,EAAQ,EAAK;AAAA,MAIrB;AAEA,sBAAS,iBAAiB,eAAe0oB,CAAiB,GACnD,MAAM,SAAS,oBAAoB,eAAeA,CAAiB;AAAA,IAC5E,GAAG,CAAC7oB,GAAM+X,GAAqBsQ,GAAsBC,GAAmBnoB,CAAO,CAAC,GAE5E,CAACH,EAAM,QAAO;AAElB,UAAMyB,IACJ,gBAAApM,EAAAsY,IAAA,EACG,UAAA;AAAA,MAAAmK,KACC,gBAAAviB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAKkzB;AAAA,UACL,WAAWnzB,GAAO;AAAA,UAClB,aAAWoL;AAAA,UACX,gBAAchM;AAAA,QAAA;AAAA,MAAA;AAAA,MAGlB,gBAAAa;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAK,CAACmxB,MAAS;AACb,YAAI1lB,MACFA,EAAW,UAAU0lB,IAEnB,OAAOtxB,KAAQ,aACjBA,EAAIsxB,CAAI,IACCtxB,KAAO,aAAaA,MAC7BA,EAAI,UAAUsxB;AAAA,UAElB;AAAA,UACA,WAAWryB;AAAA,YACTiB,GAAO;AAAA,YACPA,GAAO,QAAQoL,CAAI,EAAE;AAAA,YACrBpL,GAAO,QAAQX,CAAI,EAAE;AAAA,YACrBW,GAAO,WAAWZ,CAAO,EAAE;AAAA,YAC3BD;AAAA,UAAA;AAAA,UAEF,MAAK;AAAA,UACL,cAAW;AAAA,UACX,UAAU;AAAA,UACV,aAAWiM;AAAA,UACX,aAAW/L;AAAA,UACX,gBAAcD;AAAA,UACd,cAAYsL,IAAO,SAAS;AAAA,UAC3B,GAAG7K;AAAA,UAEH,UAAAX;AAAA,QAAA;AAAA,MAAA;AAAA,IACH,GACF;AAGF,WAAOkZ,GAAajM,GAASykB,KAAa,SAAS,IAAI;AAAA,EACzD;AACF,GAOM6C,KAAcptB,EAAM;AAAA,EACxB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,QAAQb,CAAS;AAAA,MACvC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAOMw0B,KAAartB,EAAM;AAAA,EACvB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,MACtC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAOMy0B,KAAmBttB,EAAM;AAAA,EAC7B,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,aAAab,CAAS;AAAA,MAC5C,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAOM00B,KAAcvtB,EAAM;AAAA,EACxB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,QAAQb,CAAS;AAAA,MACvC,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAQM20B,KAAaxtB,EAAM;AAAA,EACvB,CAAC,EAAE,UAAAnH,GAAU,WAAAC,GAAW,SAAAuK,IAAU,IAAO,GAAG7J,EAAA,GAASC,MAAQ;AAC3D,UAAM,EAAE,SAAA+K,EAAA,IAAY6nB,GAAA;AAEpB,WAAIhpB,IACKrD,EAAM,aAAanH,GAAgC;AAAA,MACxD,SAAS,MAAM2L,EAAQ,EAAK;AAAA,MAC5B,GAAGhL;AAAA,IAAA,CACJ,IAID,gBAAAI;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,OAAOb,CAAS;AAAA,QACvC,SAAS,MAAM0L,EAAQ,EAAK;AAAA,QAC5B,cAAW;AAAA,QACV,GAAGhL;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF;AAGAyzB,GAAM,cAAc;AACpBC,GAAa,cAAc;AAC3BC,GAAa,cAAc;AAC3BY,GAAY,cAAc;AAC1BC,GAAW,cAAc;AACzBC,GAAiB,cAAc;AAC/BC,GAAY,cAAc;AAC1BC,GAAW,cAAc;AAGlB,MAAMC,KAAiB,OAAO,OAAOnB,IAAO;AAAA,EACjD,SAASC;AAAA,EACT,SAASC;AAAA,EACT,QAAQY;AAAA,EACR,OAAOC;AAAA,EACP,aAAaC;AAAA,EACb,QAAQC;AAAA,EACR,OAAOC;AACT,CAAC;;;;;;;;;;;;;;;;GClXKE,KAAkB1sB,GAA2C,IAAI,GAEjE2sB,KAAc,MAAM;AACxB,QAAMhsB,IAAUC,EAAW8rB,EAAe;AAC1C,MAAI,CAAC/rB;AACH,UAAM,IAAI,MAAM,oDAAoD;AAEtE,SAAOA;AACT,GAEMisB,KAAWh1B;AAAA,EACf,CAAC;AAAA,IACC,aAAAgR,IAAc;AAAA,IACd,UAAAikB,IAAW;AAAA,IACX,kBAAAC,IAAmB;AAAA,IACnB,MAAAC,IAAO;AAAA,IACP,OAAA5zB;AAAA,IACA,cAAAsC,IAAe;AAAA,IACf,eAAAqD;AAAA,IACA,MAAA9G,IAAO;AAAA,IACP,SAAAD,IAAU;AAAA,IACV,UAAAF;AAAA,IACA,WAAAC;AAAA,IACA,OAAA0W;AAAA,IACA,GAAGhW;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM,CAACu0B,GAAcC,CAAoB,IAAIvzB,EAASP,KAASsC,CAAY,GACrE,CAACyxB,GAAYC,CAAa,IAAIzzB,EAAS,CAAC,GAExC0zB,IAAkBnxB,EAAY,CAACjC,MAAkB;AACrD,UAAI+yB,GAAM;AACR,cAAMM,KAAYrzB,IAAQkzB,KAAcA;AACxC,QAAAD,EAAqBI,CAAQ,GAC7BvuB,KAAA,QAAAA,EAAgBuuB;AAAA,MAClB,OAAO;AACL,cAAMA,IAAW,KAAK,IAAI,GAAG,KAAK,IAAIrzB,GAAOkzB,IAAa,CAAC,CAAC;AAC5D,QAAAD,EAAqBI,CAAQ,GAC7BvuB,KAAA,QAAAA,EAAgBuuB;AAAA,MAClB;AAAA,IACF,GAAG,CAACN,GAAMG,GAAYpuB,CAAa,CAAC;AAEpC,WAAAhF,EAAU,MAAM;AACd,MAAIX,MAAU,UACZ8zB,EAAqB9zB,CAAK;AAAA,IAE9B,GAAG,CAACA,CAAK,CAAC,GAEVW,EAAU,MAAM;AACd,UAAI+yB,KAAYK,IAAa,GAAG;AAC9B,cAAMI,IAAW,YAAY,MAAM;AACjC,UAAAF,EAAgBJ,IAAe,CAAC;AAAA,QAClC,GAAGF,CAAgB;AACnB,eAAO,MAAM,cAAcQ,CAAQ;AAAA,MACrC;AAAA,IACF,GAAG,CAACT,GAAUC,GAAkBE,GAAcI,GAAiBF,CAAU,CAAC,GAGxE,gBAAAt0B;AAAA,MAAC8zB,GAAgB;AAAA,MAAhB;AAAA,QACC,OAAO;AAAA,UACL,cAAAM;AAAA,UACA,iBAAAI;AAAA,UACA,aAAAxkB;AAAA,UACA,YAAAskB;AAAA,UACA,eAAAC;AAAA,UACA,MAAAJ;AAAA,UACA,UAAAF;AAAA,UACA,kBAAAC;AAAA,UACA,MAAA90B;AAAA,UACA,SAAAD;AAAA,QAAA;AAAA,QAGF,UAAA,gBAAAa;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,KAAAH;AAAA,YACA,WAAWf;AAAA,cACTiB,GAAO;AAAA,cACPA,GAAO,YAAYX,CAAI,EAAE;AAAA,cACzBW,GAAO,YAAYZ,CAAO,EAAE;AAAA,cAC5BD;AAAA,YAAA;AAAA,YAEF,OAAA0W;AAAA,YACA,oBAAkB5F;AAAA,YAClB,aAAW5Q;AAAA,YACX,gBAAcD;AAAA,YACb,GAAGS;AAAA,YAEH,UAAAX;AAAA,UAAA;AAAA,QAAA;AAAA,MACH;AAAA,IAAA;AAAA,EAGN;AACF,GAOM01B,KAAkB31B;AAAA,EACtB,CAAC,EAAE,UAAAC,GAAU,WAAAC,EAAA,GAAaW,MAAQ;AAChC,UAAM,EAAE,cAAAu0B,GAAc,aAAApkB,GAAa,eAAAukB,EAAA,IAAkBR,GAAA,GAC/CtoB,IAAaxK,EAAuB,IAAI;AAE9C,IAAAC,EAAU,MAAM;AACd,YAAMsN,IAAQpI,EAAM,SAAS,MAAMnH,CAAQ;AAC3C,MAAAs1B,EAAc/lB,CAAK;AAAA,IACrB,GAAG,CAACvP,GAAUs1B,CAAa,CAAC;AAE5B,UAAM1nB,IAAYmD,MAAgB,eAC9B,eAAeokB,IAAe,GAAG,OACjC,eAAeA,IAAe,GAAG;AAErC,WACE,gBAAAp0B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,iBAAiBb,CAAS;AAAA,QAEjD,UAAA,gBAAAc;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,KAAKyL;AAAA,YACL,WAAW1L,GAAO;AAAA,YAClB,OAAO,EAAE,WAAA8M,EAAA;AAAA,YAER,YAAM,SAAS,IAAI5N,GAAU,CAACoH,GAAOjF,MACpC,gBAAApB;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWD,GAAO;AAAA,gBAClB,eAAaqB,MAAUgzB;AAAA,gBAGtB,UAAA/tB;AAAA,cAAA;AAAA,cAFIjF;AAAA,YAAA,CAIR;AAAA,UAAA;AAAA,QAAA;AAAA,MACH;AAAA,IAAA;AAAA,EAGN;AACF,GAOMwzB,KAAmB51B;AAAA,EACvB,CAAC,EAAE,UAAAC,GAAU,WAAAC,EAAA,GAAaW,MAEtB,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,kBAAkBb,CAAS;AAAA,MAEjD,UAAAD;AAAA,IAAA;AAAA,EAAA;AAIT,GAMM41B,KAAmB71B;AAAA,EACvB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,SAAAsK,GAAS,GAAG5J,EAAA,GAASC,MAAQ;AACnD,UAAM,EAAE,cAAAu0B,GAAc,iBAAAI,GAAiB,MAAAL,EAAA,IAASJ,GAAA,GAC1C9qB,IAAa,CAACkrB,KAAQC,MAAiB,GAEvCvqB,IAAc,CAACjI,MAA2C;AAC9D,MAAA4H,KAAA,QAAAA,EAAU5H,IACLA,EAAE,oBACL4yB,EAAgBJ,IAAe,CAAC;AAAA,IAEpC;AAEA,WACE,gBAAAp0B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,MAAK;AAAA,QACL,WAAWf,EAAKiB,GAAO,gBAAgBA,GAAO,kBAAkBb,CAAS;AAAA,QACzE,SAAS2K;AAAA,QACT,UAAUZ;AAAA,QACV,cAAW;AAAA,QACV,GAAGrJ;AAAA,QAEH,eACC,gBAAAI,EAAC,OAAA,EAAI,OAAM,MAAK,QAAO,MAAK,SAAQ,aAAY,MAAK,QAAO,QAAO,gBAAe,aAAY,KAC5F,4BAAC,YAAA,EAAS,QAAO,mBAAkB,EAAA,CACrC;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF,GAMM80B,KAAe91B;AAAA,EACnB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,SAAAsK,GAAS,GAAG5J,EAAA,GAASC,MAAQ;AACnD,UAAM,EAAE,cAAAu0B,GAAc,iBAAAI,GAAiB,YAAAF,GAAY,MAAAH,EAAA,IAASJ,GAAA,GACtD9qB,IAAa,CAACkrB,KAAQC,MAAiBE,IAAa,GAEpDzqB,IAAc,CAACjI,MAA2C;AAC9D,MAAA4H,KAAA,QAAAA,EAAU5H,IACLA,EAAE,oBACL4yB,EAAgBJ,IAAe,CAAC;AAAA,IAEpC;AAEA,WACE,gBAAAp0B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,MAAK;AAAA,QACL,WAAWf,EAAKiB,GAAO,gBAAgBA,GAAO,cAAcb,CAAS;AAAA,QACrE,SAAS2K;AAAA,QACT,UAAUZ;AAAA,QACV,cAAW;AAAA,QACV,GAAGrJ;AAAA,QAEH,eACC,gBAAAI,EAAC,OAAA,EAAI,OAAM,MAAK,QAAO,MAAK,SAAQ,aAAY,MAAK,QAAO,QAAO,gBAAe,aAAY,KAC5F,4BAAC,YAAA,EAAS,QAAO,kBAAiB,EAAA,CACpC;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF,GAOM+0B,KAAqB/1B;AAAA,EACzB,CAAC,EAAE,UAAAC,GAAU,WAAAC,EAAA,GAAaW,MAAQ;AAChC,UAAM,EAAE,cAAAu0B,GAAc,iBAAAI,GAAiB,YAAAF,EAAA,IAAeP,GAAA;AAEtD,WAAI90B,IAEA,gBAAAe;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,oBAAoBb,CAAS;AAAA,QAEnD,UAAAD;AAAA,MAAA;AAAA,IAAA,IAML,gBAAAe;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,oBAAoBb,CAAS;AAAA,QAEnD,UAAA,MAAM,KAAK,EAAE,QAAQo1B,GAAY,EAAE,IAAI,CAACpyB,GAAGd,MAC1C,gBAAApB;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,MAAK;AAAA,YACL,WAAWlB;AAAA,cACTiB,GAAO;AAAA,cACPqB,MAAUgzB,KAAgBr0B,GAAO;AAAA,YAAA;AAAA,YAEnC,SAAS,MAAMy0B,EAAgBpzB,CAAK;AAAA,YACpC,cAAY,eAAeA,IAAQ,CAAC;AAAA,UAAA;AAAA,UAP/BA;AAAA,QAAA,CASR;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF;AAGA4yB,GAAS,cAAc;AACvBW,GAAgB,cAAc;AAC9BC,GAAiB,cAAc;AAC/BC,GAAiB,cAAc;AAC/BC,GAAa,cAAc;AAC3BC,GAAmB,cAAc;AAGjC,MAAMC,KAAoB,OAAO,OAAOhB,IAAU;AAAA,EAChD,SAASW;AAAA,EACT,UAAUC;AAAA,EACV,UAAUC;AAAA,EACV,MAAMC;AAAA,EACN,YAAYC;AACd,CAAC;;;;;;;;;;;;;;;;;;;;;GCpSKE,KAAe7tB,GAAwC,IAAI,GAE3D8tB,KAAW,MAAM;AACrB,QAAMntB,IAAUC,EAAWitB,EAAY;AACvC,MAAI,CAACltB;AACH,UAAM,IAAI,MAAM,8CAA8C;AAEhE,SAAOA;AACT,GAEMotB,KAAQn2B;AAAA,EACZ,CAAC;AAAA,IACC,SAAAG,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,YAAAg2B,IAAa;AAAA,IACb,YAAAC,IAAa;AAAA,IACb,UAAAxK,IAAW;AAAA,IACX,aAAAyK,IAAc;AAAA,IACd,QAAA5f;AAAA,IACA,UAAAzW;AAAA,IACA,WAAAC;AAAA,IACA,OAAA0W;AAAA,IACA,GAAGhW;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM01B,IAAkC;AAAA,MACtC,GAAG3f;AAAA,MACH,QAAAF;AAAA,MACA,aAAcA,IAAuB,SAAd4f;AAAA,IAAc;AAGvC,WACE,gBAAAt1B,EAACi1B,GAAa,UAAb,EAAsB,OAAO,EAAE,SAAA91B,GAAS,MAAAC,GAAM,UAAAyrB,KAC7C,UAAA,gBAAA7qB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf;AAAA,UACTiB,GAAO;AAAA,UACPA,GAAO,SAASX,CAAI,EAAE;AAAA,UACtBW,GAAO,SAASZ,CAAO,EAAE;AAAA,UACzB,CAACi2B,KAAcr1B,GAAO;AAAA,UACtB,CAACs1B,KAAct1B,GAAO;AAAA,UACtBb;AAAA,QAAA;AAAA,QAEF,OAAOq2B;AAAA,QACP,gBAAcp2B;AAAA,QACd,aAAWC;AAAA,QACX,MAAK;AAAA,QACL,cAAW;AAAA,QACV,GAAGQ;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA,GAEL;AAAA,EAEJ;AACF,GAMMu2B,KAAcx2B;AAAA,EAClB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,aAAab,CAAS;AAAA,MAC5C,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAMMw2B,KAAaz2B;AAAA,EACjB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,YAAYb,CAAS;AAAA,MAC3C,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAMMy2B,KAAgB12B;AAAA,EACpB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,eAAeb,CAAS;AAAA,MAC9C,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAMM02B,KAAe32B;AAAA,EACnB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAAQ;AAC1C,UAAM,EAAE,UAAAgrB,EAAA,IAAaqK,GAAA;AAErB,WACE,gBAAAl1B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWf,EAAKiB,GAAO,cAAcb,CAAS;AAAA,QAC7C,GAAGU;AAAA,QAEJ,UAAA,gBAAAE,EAAC,OAAA,EAAI,WAAWC,GAAO,cACpB,UAAA;AAAA,UAAA8qB,uBAAa,OAAA,EAAI,WAAW9qB,GAAO,WAAW,eAAY,QAAO;AAAA,UAClE,gBAAAC,EAAC,OAAA,EAAI,WAAWD,GAAO,gBACpB,UAAAd,EAAA,CACH;AAAA,QAAA,EAAA,CACF;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF,GAOM22B,KAAc52B;AAAA,EAClB,CAAC,EAAE,UAAA0M,IAAW,UAAU,UAAAzM,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAErD,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf;AAAA,QACTiB,GAAO;AAAA,QACPA,GAAO,UAAU2L,CAAQ,EAAE;AAAA,QAC3BxM;AAAA,MAAA;AAAA,MAEF,MAAK;AAAA,MACL,cAAW;AAAA,MACV,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAMM42B,KAAc72B;AAAA,EAClB,CAAC,EAAE,UAAAC,GAAU,WAAAC,GAAW,GAAGU,EAAA,GAASC,MAEhC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAWf,EAAKiB,GAAO,aAAab,CAAS;AAAA,MAC5C,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT;AAGAk2B,GAAM,cAAc;AACpBK,GAAY,cAAc;AAC1BC,GAAW,cAAc;AACzBC,GAAc,cAAc;AAC5BC,GAAa,cAAc;AAC3BC,GAAY,cAAc;AAC1BC,GAAY,cAAc;AAG1B,MAAMC,KAAiB,OAAO,OAAOX,IAAO;AAAA,EAC1C,QAAQK;AAAA,EACR,OAAOC;AAAA,EACP,UAAUC;AAAA,EACV,SAASC;AAAA,EACT,QAAQC;AAAA,EACR,QAAQC;AACV,CAAC,GCpNYE,KAAS;AAAA,EACpB,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,WAAW;AAAA,EACX,SAAS;AACX,GAEaC,KAAa;AAAA,EACxB;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAAA,EAEf;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAEjB,GChEaj3B,KAAgC,CAAC;AAAA,EAC5C,SAAAI,IAAU;AAAA,EACV,MAAAC,IAAO;AAAA,EACP,WAAAC,IAAY;AAAA,EACZ,SAAAC,IAAU;AAAA,EACV,iBAAAG,IAAkB;AAAA,EAClB,QAAAC,IAAS;AAAA,EACT,UAAAH;AAAA,EACA,WAAAC;AAAA,EACA,UAAAG;AAAA,EACA,UAAAV;AAAA,EACA,WAAAC,IAAY;AAAA,EACZ,GAAGU;AACL,MAAM;AACJ,QAAMmW,IAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWdkgB,IAAc;AAAA,IAClB,IAAI;AAAA;AAAA,IACJ,IAAI;AAAA;AAAA,IACJ,IAAI;AAAA;AAAA,IACJ,IAAI;AAAA;AAAA,EAAA,GAGAC,IAAiB;AAAA,IACrB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,IAKT,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKR,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKb,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,IAKT,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA,GAOHC,IAAgB12B,KAAmB,CAACE,IAAW;AAAA;AAAA;AAAA;AAAA,MAIjDF,KAAmBE,IAAW,+BAA+B,IAE3Dy2B,IAAgB12B,IAAS,2oBAA2oB,IAEpqB22B,IAAeh3B,IAAY,WAAW,IACtCi3B,IAAiBh3B,IAAU,qBAAqB,IAEhDi3B,IAAkB;AAAA,MACpBxgB,CAAW;AAAA,MACXkgB,EAAY72B,CAAI,CAAC;AAAA,MACjB82B,EAAe/2B,CAAO,CAAC;AAAA,MACvBg3B,CAAa;AAAA,MACbC,CAAa;AAAA,MACbC,CAAY;AAAA,MACZC,CAAc;AAAA,MACdp3B,CAAS;AAAA,IACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAEvB,SACE,gBAAAY;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWy2B;AAAA,MACX,OAAO;AAAA,QACL,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,GAAG32B,EAAM;AAAA,MAAA;AAAA,MAEX,UAAUD,KAAYL;AAAA,MACtB,aAAWI,IAAST,IAAW;AAAA,MAC9B,GAAGW;AAAA,MAEH,UAAA;AAAA,QAAAN,KACC,gBAAAU,EAAC,QAAA,EAAK,WAAU,0FAAA,CAA0F;AAAA,QAE3GT,KAAY,gBAAAS,EAAC,QAAA,EAAK,WAAU,2CAA2C,UAAAT,GAAS;AAAA,QACjF,gBAAAS,EAAC,QAAA,EAAK,WAAU,4BAA4B,UAAAf,EAAA,CAAS;AAAA,QACpDO,KAAa,gBAAAQ,EAAC,QAAA,EAAK,WAAU,2CAA2C,UAAAR,EAAA,CAAU;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGzF,GClGa6uB,KAAcrvB;AAAA,EACzB,CAAC;AAAA,IACC,OAAAsvB,IAAQ,KAAG;AAAA,IACX,UAAArvB;AAAA,IACA,WAAAC,IAAY;AAAA,IACZ,WAAAqvB,IAAY;AAAA,IACZ,iBAAAC;AAAA,IACA,OAAA5Y;AAAA,IACA,GAAGhW;AAAA,EAAA,GACFC,MAAQ;AACT,UAAM4uB,IAAgB,GAAI,IAAIH,IAAS,GAAG,KAsBpCiI,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARC;AAAA,MACvB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAAA,EAKKhI,CAAS,CAAC;AAAA,QAC3BrvB,CAAS;AAAA,MACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAEvB,WACE,gBAAAY;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAW02B;AAAA,QACX,OAAO;AAAA,UACL,GAAG3gB;AAAA,UACH,iBAAiB4Y,KAAmB;AAAA,QAAA;AAAA,QAErC,GAAG5uB;AAAA,QAGJ,UAAA;AAAA,UAAA,gBAAAI,EAAC,OAAA,EAAI,OAAO,EAAE,eAAAyuB,EAAA,EAAc,CAAG;AAAA,UAG/B,gBAAAzuB,EAAC,SAAI,WAAU,qDACb,4BAAC,OAAA,EAAI,WAAU,gNACZ,UAAAf,EAAA,CACH,EAAA,CACF;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AAEAovB,GAAY,cAAc;AC9D1B,MAAMrb,KAAOhU;AAAA,EACX,CACE;AAAA,IACE,UAAAC;AAAA,IACA,WAAAC,IAAY;AAAA,IACZ,SAAAC,IAAU;AAAA,IACV,SAAA8T,IAAU;AAAA,IACV,WAAAxB,IAAY;AAAA,IACZ,OAAAyB,IAAQ;AAAA,IACR,GAAGtT;AAAA,EAAA,GAELC,MACG;AACH,UAAMkW,IAAc;AAAA;AAAA;AAAA;AAAA,OAMdmgB,IAAiB;AAAA,MACrB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,SAAS;AAAA,IAAA,GAGLM,IAAiB;AAAA,MACrB,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA,GAGAC,IAAqBhlB,IACvB,uKACAyB,IACE,iFACA,IAEAqjB,IAAkB;AAAA,QACpBxgB,CAAW;AAAA,QACXmgB,EAAe/2B,CAAO,CAAC;AAAA,QACvBq3B,EAAevjB,CAAO,CAAC;AAAA,QACvBwjB,CAAkB;AAAA,QAClBv3B,CAAS;AAAA,MACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAEvB,WACE,gBAAAc;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAW02B;AAAA,QACX,MAAM9kB,IAAY,WAAW;AAAA,QAC7B,UAAUA,IAAY,IAAI;AAAA,QACzB,GAAG7R;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAEMkU,KAAanU;AAAA,EACjB,CAAC,EAAE,UAAAC,GAAU,WAAAC,IAAY,IAAI,GAAGU,EAAA,GAASC,MAAQ;AAC/C,UAAM62B,IAAgB;AAAA;AAAA,QAElBx3B,CAAS;AAAA,MACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAEvB,WACE,gBAAAc;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAW62B;AAAA,QACV,GAAG92B;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAEMmU,KAAWpU;AAAA,EACf,CAAC,EAAE,UAAAC,GAAU,WAAAC,IAAY,IAAI,GAAGU,EAAA,GAASC,MAAQ;AAC/C,UAAM82B,IAAc;AAAA,QAChBz3B,CAAS;AAAA,MACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAEvB,WACE,gBAAAc;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAW82B;AAAA,QACV,GAAG/2B;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF,GAEMoU,KAAarU;AAAA,EACjB,CAAC,EAAE,UAAAC,GAAU,WAAAC,IAAY,IAAI,GAAGU,EAAA,GAASC,MAAQ;AAC/C,UAAM+2B,IAAgB;AAAA;AAAA,QAElB13B,CAAS;AAAA,MACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAEvB,WACE,gBAAAc;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAW+2B;AAAA,QACV,GAAGh3B;AAAA,QAEH,UAAAX;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF;AAEA+T,GAAK,cAAc;AACnBG,GAAW,cAAc;AACzBC,GAAS,cAAc;AACvBC,GAAW,cAAc;AAGzB,MAAMC,KAAgBN;AAMtBM,GAAc,SAASH;AACvBG,GAAc,OAAOF;AACrBE,GAAc,SAASD;ACxIhB,MAAMpT,KAAQjB;AAAA,EACnB,CACE;AAAA,IACE,WAAAE,IAAY;AAAA,IACZ,SAAAC,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,UAAAG;AAAA,IACA,WAAAC;AAAA,IACA,WAAAH,IAAY;AAAA,IACZ,iBAAAI,IAAkB;AAAA,IAClB,UAAAE;AAAA,IACA,UAAAO;AAAA,IACA,MAAAC,IAAO;AAAA,IACP,GAAGP;AAAA,EAAA,GAELC,MACG;AACH,UAAMkW,IAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYdkgB,IAAc;AAAA,MAClB,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA,GAGAC,IAAiB;AAAA,MACrB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,IAAA,GAGLC,IAAgB12B,KAAmB,CAACE,KAAY,CAACO,IACnD,8GACA,IAEEm2B,IAAeh3B,IAAY,WAAW,IAEtCw3B,IAAc;AAAA,MAClB,MAAMt3B,IAAW,UAAU;AAAA,MAC3B,OAAOC,IAAY,UAAU;AAAA,IAAA;AAG/B,WAAID,KAAYC,sBAEX,OAAA,EAAI,WAAW,YAAYH,IAAY,WAAW,cAAc,IAC9D,UAAA;AAAA,MAAAE,KACC,gBAAAS,EAAC,OAAA,EAAI,WAAU,wFACZ,UAAAT,GACH;AAAA,MAEF,gBAAAS;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,MAAAM;AAAA,UACA,WAAW;AAAA,gBACP4V,CAAW;AAAA,gBACXkgB,EAAY72B,CAAI,CAAC;AAAA,gBACjB82B,EAAe/2B,CAAO,CAAC;AAAA,gBACvBg3B,CAAa;AAAA,gBACbE,CAAY;AAAA,gBACZQ,EAAY,IAAI;AAAA,gBAChBA,EAAY,KAAK;AAAA,gBACjB33B,CAAS;AAAA,cACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAAA,UACvB,OAAO;AAAA,YACL,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,GAAGU,EAAM;AAAA,UAAA;AAAA,UAEX,UAAAD;AAAA,UACA,UAAAO;AAAA,UACC,GAAGN;AAAA,QAAA;AAAA,MAAA;AAAA,MAELJ,KACC,gBAAAQ,EAAC,OAAA,EAAI,WAAU,yFACZ,UAAAR,EAAA,CACH;AAAA,IAAA,GAEJ,IAKF,gBAAAQ;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,MAAAM;AAAA,QACA,WAAW;AAAA,YACP4V,CAAW;AAAA,YACXkgB,EAAY72B,CAAI,CAAC;AAAA,YACjB82B,EAAe/2B,CAAO,CAAC;AAAA,YACvBg3B,CAAa;AAAA,YACbE,CAAY;AAAA,YACZn3B,CAAS;AAAA,UACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAAA,QACvB,OAAO;AAAA,UACL,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,GAAGU,EAAM;AAAA,QAAA;AAAA,QAEX,UAAAD;AAAA,QACA,UAAAO;AAAA,QACC,GAAGN;AAAA,MAAA;AAAA,IAAA;AAAA,EAGV;AACF;AAEAK,GAAM,cAAc;ACxGb,MAAMwS,KAAQzT;AAAA,EACnB,CACE;AAAA,IACE,UAAAC;AAAA,IACA,SAAAE,IAAU;AAAA,IACV,OAAA2N,IAAQ;AAAA,IACR,MAAA1N,IAAO;AAAA,IACP,aAAAsT,IAAc;AAAA,IACd,WAAAC;AAAA,IACA,WAAAzT,IAAY;AAAA,IACZ,SAAAsK;AAAA,IACA,WAAAiI,IAAY;AAAA,IACZ,GAAG7R;AAAA,EAAA,GAELC,MACG;AACH,UAAM+S,IAAQzT,MAAY,OACpBqT,IAAcf,KAAa,CAAC,CAACjI,GAC7BqJ,IAAgBH,KAAe,CAAC,CAACC,GAEjCG,IAAgB,CAAClR,MAAwB;AAC7C,MAAAA,EAAE,gBAAA,GACF+Q,KAAA,QAAAA;AAAA,IACF,GAEM9I,IAAc,MAAM;AACxB,MAAI2I,MACFhJ,KAAA,QAAAA;AAAA,IAEJ,GAEM7H,IAAgB,CAACC,MAA2B;AAChD,MAAI4Q,MAAgB5Q,EAAE,QAAQ,WAAWA,EAAE,QAAQ,SACjDA,EAAE,eAAA,GACF4H,KAAA,QAAAA;AAAA,IAEJ,GAGM0C,IAAU0G,IAAQ,OAAO3T,GAEzB8W,IAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASdkgB,IAAc;AAAA,MAClB,IAAIrjB,IAAQ,YAAY;AAAA,MACxB,IAAIA,IAAQ,YAAY;AAAA,MACxB,IAAIA,IAAQ,YAAY;AAAA,IAAA,GAGpBsjB,IAAiB;AAAA,MACrB,OAAO;AAAA,MACP,SAAS;AAAA,MACT,KAAK;AAAA,MACL,WAAW;AAAA,IAAA,GAGPY,IAAe;AAAA,MACnB,QAAQ33B,MAAY,YAAY,gCAAgC;AAAA,MAChE,SAASA,MAAY,YAAY,oCAAoC;AAAA,MACrE,SAASA,MAAY,YAAY,sCAAsC;AAAA,MACvE,OAAOA,MAAY,YAAY,gCAAgC;AAAA,MAC/D,MAAMA,MAAY,YAAY,kCAAkC;AAAA,MAChE,SAASA,MAAY,YAAY,kCAAkC;AAAA,IAAA,GAG/Ds3B,IAAqBjkB,IACvB,yKACA,IAEE+jB,IAAkB;AAAA,QACpBxgB,CAAW;AAAA,QACXkgB,EAAY72B,CAAI,CAAC;AAAA,QACjB82B,EAAe/2B,CAAO,CAAC;AAAA,QACvBA,MAAY,WAAWA,MAAY,cAAc23B,EAAahqB,CAAK,IAAI,EAAE;AAAA,QACzE2pB,CAAkB;AAAA,QAClBv3B,CAAS;AAAA,MACX,QAAQ,QAAQ,GAAG,EAAE,KAAA,GAGjB6T,IACJ,gBAAA/S;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,WAAU;AAAA,QACV,eAAY;AAAA,QAEZ,UAAA,gBAAAA,EAAC,QAAA,EAAK,GAAE,wGAAA,CAAuG;AAAA,MAAA;AAAA,IAAA;AAInH,WACE,gBAAAF;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAW02B;AAAA,QACX,OAAO;AAAA,UACL,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,eAAe;AAAA,UACf,YAAY;AAAA,UACZ,GAAG32B,EAAM;AAAA,QAAA;AAAA,QAEX,SAAS4S,IAAc3I,IAAc;AAAA,QACrC,WAAW2I,IAAc7Q,IAAgB;AAAA,QACzC,MAAM6Q,IAAc,WAAWI,IAAQ,WAAW;AAAA,QAClD,UAAUJ,IAAc,IAAI;AAAA,QAC5B,cACEI,IACI,GAAG9F,CAAK,sBACR,OAAO7N,KAAa,WAClBA,IACA;AAAA,QAEP,GAAGW;AAAA,QAEH,UAAA;AAAA,UAAAsM;AAAA,UAEA2G,KACC,gBAAA7S;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,WAAU;AAAA,cACV,SAAS8S;AAAA,cACT,cAAW;AAAA,cACX,UAAU;AAAA,cAET,UAAAC;AAAA,YAAA;AAAA,UAAA;AAAA,QACH;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAN,GAAM,cAAc;AC7IpB,MAAMc,KAAQvU;AAAA,EACZ,CACE;AAAA,IACE,UAAAC;AAAA,IACA,WAAAC,IAAY;AAAA,IACZ,MAAAiB,IAAO;AAAA,IACP,SAAAhB,IAAU;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,aAAAsT,IAAc;AAAA,IACd,WAAAC;AAAA,IACA,GAAG/S;AAAA,EAAA,GAELC,MACG;AACH,UAAM,CAAC2T,GAAWC,CAAY,IAAI3S,EAAS,EAAK,GAC1C,CAAC4S,GAAWC,CAAY,IAAI7S,EAAS,EAAK,GAE1CgS,IAAgB,MAAM;AAC1B,MAAAa,EAAa,EAAI,GAEjB,WAAW,MAAM;AACf,QAAAF,EAAa,EAAI,GACjBd,KAAA,QAAAA;AAAA,MACF,GAAG,GAAG;AAAA,IACR;AAEA,QAAIa;AACF,aAAO;AAGT,UAAMuC,IAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUdkgB,IAAc;AAAA,MAClB,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA,GAGAc,IAAqB;AAAA,MACzB,MAAM;AAAA,QACJ,QAAQ;AAAA,QACR,SAAS;AAAA,MAAA;AAAA,MAEX,SAAS;AAAA,QACP,QAAQ;AAAA,QACR,SAAS;AAAA,MAAA;AAAA,MAEX,SAAS;AAAA,QACP,QAAQ;AAAA,QACR,SAAS;AAAA,MAAA;AAAA,MAEX,OAAO;AAAA,QACL,QAAQ;AAAA,QACR,SAAS;AAAA,MAAA;AAAA,IACX,GAGIC,IAAqBtkB,IAAc,UAAU,IAE7C6jB,IAAkB;AAAA,QACpBxgB,CAAW;AAAA,QACXkgB,EAAY72B,CAAI,CAAC;AAAA,QACjB23B,EAAmB52B,CAAI,EAAEhB,CAAO,CAAC;AAAA,QACjC63B,CAAkB;AAAA,QAClB93B,CAAS;AAAA,MACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAEvB,WACE,gBAAAY;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAW02B;AAAA,QACX,OAAO;AAAA,UACL,YAAY;AAAA,UACZ,WAAW7iB,IACP,mEACA;AAAA,UACJ,GAAG9T,EAAM;AAAA,QAAA;AAAA,QAEX,MAAK;AAAA,QACL,aAAU;AAAA,QACT,GAAGA;AAAA,QAEJ,UAAA;AAAA,UAAA,gBAAAI,EAAC,SAAA,EACE,UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAiCH;AAAA,UACCf;AAAA,UACAyT,KACC,gBAAA1S;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMPZ,MAAS,OAAO,wBAAwBA,MAAS,OAAO,kBAAkB,EAAE;AAAA;AAAA,cAEhF,SAAS0T;AAAA,cACT,cAAW;AAAA,cACX,MAAK;AAAA,cAEL,UAAA,gBAAA9S;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,OAAOZ,MAAS,OAAO,KAAKA,MAAS,OAAO,KAAK;AAAA,kBACjD,QAAQA,MAAS,OAAO,KAAKA,MAAS,OAAO,KAAK;AAAA,kBAClD,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,OAAM;AAAA,kBAEN,UAAA,gBAAAY;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,GAAE;AAAA,sBACF,QAAO;AAAA,sBACP,aAAY;AAAA,sBACZ,eAAc;AAAA,oBAAA;AAAA,kBAAA;AAAA,gBAChB;AAAA,cAAA;AAAA,YACF;AAAA,UAAA;AAAA,QACF;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF,GAEM4T,KAAY5U;AAAA,EAChB,CAAC,EAAE,UAAAC,GAAU,WAAAC,IAAY,IAAI,GAAGU,EAAA,GAASC,MAErC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAW;AAAA;AAAA,YAEPX,CAAS;AAAA,UACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAAA,MACtB,GAAGU;AAAA,MAEH,UAAAX,uBAAa4U,IAAA,CAAA,CAAY;AAAA,IAAA;AAAA,EAAA;AAIlC,GAEMC,KAAe9U;AAAA,EACnB,CAAC,EAAE,UAAAC,GAAU,WAAAC,IAAY,IAAI,GAAGU,EAAA,GAASC,MAErC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAW;AAAA;AAAA,YAEPX,CAAS;AAAA,UACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAAA,MACtB,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEM8U,KAAa/U;AAAA,EACjB,CAAC,EAAE,UAAAC,GAAU,WAAAC,IAAY,IAAI,GAAGU,EAAA,GAASC,MAErC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAW;AAAA;AAAA;AAAA,YAGPX,CAAS;AAAA,UACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAAA,MACvB,OAAO;AAAA,QACL,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,GAAGU,EAAM;AAAA,MAAA;AAAA,MAEV,GAAGA;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEM+U,KAAmBhV;AAAA,EACvB,CAAC,EAAE,UAAAC,GAAU,WAAAC,IAAY,IAAI,GAAGU,EAAA,GAASC,MAErC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAW;AAAA;AAAA,YAEPX,CAAS;AAAA,UACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAAA,MACtB,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAEMgV,KAAejV;AAAA,EACnB,CAAC,EAAE,UAAAC,GAAU,WAAAC,IAAY,IAAI,GAAGU,EAAA,GAASC,MAErC,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACA,WAAW;AAAA;AAAA;AAAA,YAGPX,CAAS;AAAA,UACX,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAAA,MACtB,GAAGU;AAAA,MAEH,UAAAX;AAAA,IAAA;AAAA,EAAA;AAIT,GAGM4U,KAAc,MAClB,gBAAA/T;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IACR,MAAK;AAAA,IACL,OAAM;AAAA,IAEN,UAAA;AAAA,MAAA,gBAAAE;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,IAAG;AAAA,UACH,GAAE;AAAA,UACF,QAAO;AAAA,UACP,aAAY;AAAA,UACZ,MAAK;AAAA,QAAA;AAAA,MAAA;AAAA,MAEP,gBAAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,GAAE;AAAA,UACF,QAAO;AAAA,UACP,aAAY;AAAA,UACZ,eAAc;AAAA,QAAA;AAAA,MAAA;AAAA,MAEhB,gBAAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,IAAG;AAAA,UACH,GAAE;AAAA,UACF,MAAK;AAAA,QAAA;AAAA,MAAA;AAAA,IACP;AAAA,EAAA;AACF;AAGFuT,GAAM,cAAc;AACpBK,GAAU,cAAc;AACxBE,GAAa,cAAc;AAC3BC,GAAW,cAAc;AACzBC,GAAiB,cAAc;AAC/BC,GAAa,cAAc;AAG3B,MAAMC,KAAiBX;AAQvBW,GAAe,OAAON;AACtBM,GAAe,UAAUJ;AACzBI,GAAe,QAAQH;AACvBG,GAAe,cAAcF;AAC7BE,GAAe,UAAUD;AC5TlB,MAAMrN,KAAW5H;AAAA,EACtB,CACE;AAAA,IACE,WAAAE,IAAY;AAAA,IACZ,MAAAE,IAAO;AAAA,IACP,OAAAkH;AAAA,IACA,eAAAO,IAAgB;AAAA,IAChB,OAAAC,IAAQ;AAAA,IACR,iBAAArH,IAAkB;AAAA,IAClB,UAAAE;AAAA,IACA,IAAA6E;AAAA,IACA,GAAG5E;AAAA,EAAA,GAELC,MACG;AACH,UAAMkH,IAAc9F,EAAyB,IAAI,GAC3C+F,IAAcnH,KAAOkH;AAG3B,IAAA7F,EAAU,MAAM;AACd,YAAM+F,IAAW,OAAOD,KAAgB,aAAa,OAAOA,EAAY;AACxE,MAAIC,MACFA,EAAS,gBAAgBJ;AAAA,IAE7B,GAAG,CAACA,GAAeG,CAAW,CAAC;AAE/B,UAAME,IAAa1C,KAAM,YAAY,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC,IAEtEyxB,IAAc;AAAA,MAClB,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA,GAGAgB,IAAmB;AAAA,MACvB,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA,GAGAC,IAAmB;AAAA;AAAA,QAErBv3B,IAAW,kCAAkC,EAAE;AAAA,QAC/CT,CAAS;AAAA,OAGPi4B,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKpBlB,EAAY72B,CAAI,CAAC;AAAA,QACjBK,IAAkB,+BAA+B,EAAE;AAAA,QACnDqH,IAAQ,mBAAmB,cAAc;AAAA,QACzCnH,IAAW,mCAAmC,EAAE;AAAA;AAAA,QAEhDF,IAAkB,qCAAqC,EAAE;AAAA,QACzDqH,KAASrH,IAAkB,uCAAuC,EAAE;AAAA;AAAA,QAEpEA,IAAkB,sCAAsC,EAAE;AAAA,QAC1DqH,KAASrH,IAAkB,wCAAwC,EAAE;AAAA;AAAA,QAErEE,IAAW,+FAA+F,EAAE;AAAA,OAG1Gy3B,IAAe;AAAA;AAAA,QAEjBz3B,IAAW,uBAAuB,EAAE;AAAA,OAGlC03B,IAAmB;AAAA;AAAA,QAErBvwB,IAAQ,iBAAiB,YAAY;AAAA,QACrCD,IAAgB,cAAc,EAAE;AAAA,OAG9BywB,IAA2B;AAAA;AAAA,QAE7BzwB,IAAgB,gBAAgB,WAAW;AAAA,QAC3CC,IAAQ,eAAe,UAAU;AAAA,OAG/BywB,IAAe;AAAA;AAAA,QAEjBN,EAAiB73B,CAAI,CAAC;AAAA,QACtBO,IAAW,qCAAqC,qBAAqB;AAAA;AAGzE,WACE,gBAAAG,EAAC,OAAA,EAAI,WAAWo3B,GACd,UAAA;AAAA,MAAA,gBAAAp3B,EAAC,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,QAAA,gBAAAE;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,KAAKgH;AAAA,YACL,MAAK;AAAA,YACL,IAAIE;AAAA,YACJ,WAAW,GAAGkwB,CAAY;AAAA,YAC1B,UAAAz3B;AAAA,YACA,gBAAcmH;AAAA,YACb,GAAGlH;AAAA,UAAA;AAAA,QAAA;AAAA,QAEN,gBAAAE,EAAC,OAAA,EAAI,WAAWq3B,GACd,UAAA;AAAA,UAAA,gBAAAn3B;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWq3B;AAAA,cACX,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,eAAY;AAAA,cAEZ,UAAA,gBAAAr3B;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,GAAE;AAAA,kBACF,QAAO;AAAA,kBACP,aAAY;AAAA,kBACZ,eAAc;AAAA,kBACd,gBAAe;AAAA,gBAAA;AAAA,cAAA;AAAA,YACjB;AAAA,UAAA;AAAA,UAEF,gBAAAA,EAAC,OAAA,EAAI,WAAWs3B,EAAA,CAA0B;AAAA,QAAA,EAAA,CAC5C;AAAA,MAAA,GACF;AAAA,MACChxB,KACC,gBAAAtG;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,SAASkH;AAAA,UACT,WAAWqwB;AAAA,UACX,OAAO;AAAA,YACL,YAAY;AAAA,UAAA;AAAA,UAGb,UAAAjxB;AAAA,QAAA;AAAA,MAAA;AAAA,wBAIJ,SAAA,EACE,UAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAA,CAMH;AAAA,IAAA,GACF;AAAA,EAEJ;AACF;AAEAM,GAAS,cAAc;AClIhB,MAAMuK,KAASnS;AAAA,EACpB,CACE;AAAA,IACE,KAAAoS;AAAA,IACA,KAAAC;AAAA,IACA,UAAAC;AAAA,IACA,MAAAC;AAAA,IACA,MAAAnS,IAAO;AAAA,IACP,QAAAoS;AAAA,IACA,WAAAtS,IAAY;AAAA,IACZ,SAAAsK;AAAA,IACA,WAAAiI,IAAY;AAAA,IACZ,GAAG7R;AAAA,EAAA,GAELC,MACG;AACH,UAAM,CAAC6R,GAAYC,CAAa,IAAI7Q,EAAS,EAAK,GAC5C,CAAC8Q,GAAaC,CAAc,IAAI/Q,EAAS,EAAK,GAE9CgR,IAAmB,MAAM;AAC7B,MAAAH,EAAc,EAAI;AAAA,IACpB,GAEMI,IAAkB,MAAM;AAC5B,MAAAF,EAAe,EAAI,GACnBF,EAAc,EAAK;AAAA,IACrB,GAEMK,IAAWZ,KAAO,CAACM,GACnBO,IAAcX,KAAYA,EAAS,SAAS,GAC5CY,IAAUX,GAGVY,IAAYH,GACZI,IAAe,CAACJ,KAAYC,GAC5BI,IAAW,CAACL,KAAY,CAACC,KAAeC,GAGxCI,IAAkBhB,IAAWA,EAAS,MAAM,GAAG,CAAC,EAAE,gBAAgB,IAGlEiB,IACJ,gBAAAvS;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,WAAU;AAAA,QAEV,UAAA,gBAAAA,EAAC,QAAA,EAAK,GAAE,gHAAA,CAA+G;AAAA,MAAA;AAAA,IAAA,GAIrHwS,IAAcf,KAAa,CAAC,CAACjI,GAE7BysB,IAAc;AAAA,MAClB,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA,GAGAuB,IAAkB;AAAA,MACtB,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA,GAGAC,IAAoB;AAAA,MACxB,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA,GAGAC,IAAqB;AAAA,MACzB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,MACN,MAAM;AAAA,IAAA,GAGFR,IAAmB;AAAA;AAAA,QAErB1kB,IAAc,mBAAmB,EAAE;AAAA,QACnCtT,CAAS;AAAA,OAGPy4B,IAAgB;AAAA,QAClB1B,EAAY72B,CAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMjBoT,IAAc,mFAAmF,EAAE;AAAA,QACnGA,IAAc,oFAAoF,EAAE;AAAA,QACpGA,IAAc,+EAA+E,EAAE;AAAA,OAG7FolB,IAAgB;AAAA;AAAA,QAElBH,EAAkBr4B,CAAI,CAAC;AAAA,QACvBs4B,EAAmBlmB,CAAO,CAAC;AAAA;AAAA;AAAA;AAK/B,WACE,gBAAA1R;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWq3B;AAAA,QACX,SAAS1kB,IAAchJ,IAAU;AAAA,QACjC,MAAMgJ,IAAc,WAAW;AAAA,QAC/B,UAAUA,IAAc,IAAI;AAAA,QAC5B,WACEA,IACI,CAAC5Q,MAAM;AACL,WAAIA,EAAE,QAAQ,WAAWA,EAAE,QAAQ,SACjCA,EAAE,eAAA,GACF4H,KAAA,QAAAA;AAAA,QAEJ,IACA;AAAA,QAEN,cAAY6H,KAAO,SAASC,IAAW,QAAQA,CAAQ,KAAK,EAAE;AAAA,QAE9D,UAAA;AAAA,UAAA,gBAAAxR,EAAC,OAAA,EAAI,WAAW63B,GACb,UAAA;AAAA,YAAAxlB,KACC,gBAAAnS;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,KAAAoR;AAAA,gBACA,KAAAC;AAAA,gBACA,WAAW,8BAA8BO,IAAc,gBAAgB,WAAW;AAAA,gBAClF,SAASE;AAAA,gBACT,QAAQC;AAAA,gBACP,GAAGnS;AAAA,cAAA;AAAA,YAAA;AAAA,YAIPwS,KACC,gBAAApS;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAW,GAAGw3B,EAAgBp4B,CAAI,CAAC;AAAA,gBACnC,OAAO;AAAA,kBACL,YAAY;AAAA,gBAAA;AAAA,gBAEd,cAAY,aAAakT,CAAe;AAAA,gBAEvC,UAAAA;AAAA,cAAA;AAAA,YAAA;AAAA,YAIJD,KACC,gBAAArS;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAU;AAAA,gBACV,cAAW;AAAA,gBAEV,UAAAuR;AAAA,cAAA;AAAA,YAAA;AAAA,YAIJ,CAACY,KAAa,CAACC,KAAgB,CAACC,KAC/B,gBAAArS;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAU;AAAA,gBACV,cAAW;AAAA,gBAEV,UAAAuS;AAAA,cAAA;AAAA,YAAA;AAAA,UACH,GAEJ;AAAA,UAECf,KACC,gBAAAxR;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAW43B;AAAA,cACX,cAAY,WAAWpmB,CAAM;AAAA,cAC7B,MAAK;AAAA,YAAA;AAAA,UAAA;AAAA,QACP;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAL,GAAO,cAAc;ACrLd,MAAMkD,KAAWrV;AAAA,EACtB,CACE;AAAA,IACE,OAAAuB;AAAA,IACA,KAAA6P,IAAM;AAAA,IACN,MAAAjQ,IAAO;AAAA,IACP,SAAAhB,IAAU;AAAA;AAAA,IACV,MAAAC,IAAO;AAAA,IACP,WAAAkV,IAAY;AAAA,IACZ,OAAAhO;AAAA,IACA,eAAAO,IAAgB;AAAA,IAChB,OAAAiG,IAAQ;AAAA,IACR,WAAA5N;AAAA,IACA,GAAGU;AAAA,EAAA,GAELC,MACG;AAEH,UAAM0U,IAAgB1N,IAAgB,SAAY,KAAK,IAAI,KAAK,KAAKtG,KAAS,KAAK6P,IAAM,KAAK,CAAC,GAAG,GAAG,GAC/FoE,IAAarU,MAAS,YAGtBsU,IAAYnO,MAAUiO,MAAkB,SAAY,GAAG,KAAK,MAAMA,CAAa,CAAC,MAAM,KAGtFG,IAAUF,IAAcpV,MAAS,OAAO,KAAKA,MAAS,OAAO,KAAK,KAAM,GACxEuV,IAAaH,IAAaE,IAAU,IAAI,KAAK,GAC7CE,IAAaJ,KAAcD,MAAkB,SAC/CI,IAAcJ,IAAgB,MAAOI,IACrC,GAGEI,IAAe,eACfC,IAAenO,IAAgB,SAAYtG,KAAS,GACpD0U,IAAe,GACfC,IAAe9E,GACf+E,IAAY7O,MAAUO,IAAgB,YAAY,GAAG,KAAK,MAAM0N,KAAiB,CAAC,CAAC,sBAGnFwB,IAAcjX;AAAA,MAClB;AAAA,MACA;AAAA,MACAI;AAAA,IAAA,GAII43B,IAAe;AAAA,MACnB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,IAAA,GAGFe,IAAoB;AAAA,MACxB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,IAAA;AAGR,QAAIrjB,GAAY;AACd,YAAMY,IAAchW,MAAS,OAAO,IAAIA,MAAS,OAAO,IAAI,GACtD6T,IAAUmC,IAAc,GACxBC,IAAUX,IAAUzB,IAAU,GAC9BqC,IAAa,GAEbwiB,IAAkBh5B;AAAA,QACtBiX;AAAA,QACA;AAAA,MAAA,GAGIgiB,IAAqB;AAAA,QACzB,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,MAAA,GAGFC,IAAqB;AAAA,QACzB,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,MAAA;AAGR,aACE,gBAAAh4B;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAWi4B;AAAA,UACX,MAAM/iB;AAAA,UACN,iBAAeC;AAAA,UACf,iBAAeC;AAAA,UACf,iBAAeC;AAAA,UACf,cAAYC;AAAA,UACX,GAAGvV;AAAA,UAEJ,UAAA,gBAAAE,EAAC,OAAA,EAAI,WAAU,6CACb,UAAA;AAAA,YAAA,gBAAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAU;AAAA,gBACV,OAAOuV;AAAA,gBACP,QAAQA;AAAA,gBACR,SAAS,OAAOA,CAAO,IAAIA,CAAO;AAAA,gBAClC,OAAO;AAAA,kBACL,YAAY;AAAA,kBACZ,YAAY;AAAA,gBAAA;AAAA,gBAId,UAAA;AAAA,kBAAA,gBAAArV;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,WAAWlB,EAAK,cAAck5B,EAAmBlrB,CAAK,CAAC;AAAA,sBACvD,GAAGmG;AAAA,sBACH,GAAGA;AAAA,sBACH,OAAOyB;AAAA,sBACP,QAAQA;AAAA,sBACR,IAAIY;AAAA,sBACJ,IAAIA;AAAA,sBACJ,MAAK;AAAA,sBACL,aAAAF;AAAA,oBAAA;AAAA,kBAAA;AAAA,kBAGF,gBAAApV;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,WAAWlB,EAAK,yCAAyCi5B,EAAmBjrB,CAAK,CAAC;AAAA,sBAClF,GAAGmG;AAAA,sBACH,GAAGA;AAAA,sBACH,OAAOyB;AAAA,sBACP,QAAQA;AAAA,sBACR,IAAIY;AAAA,sBACJ,IAAIA;AAAA,sBACJ,MAAK;AAAA,sBACL,aAAAF;AAAA,sBACA,OAAO;AAAA,wBACL,iBAAiBT;AAAA,wBACjB,kBAAkBC;AAAA,sBAAA;AAAA,sBAEpB,eAAc;AAAA,sBACd,WAAW,cAAcS,IAAU,CAAC,IAAIA,IAAU,CAAC;AAAA,oBAAA;AAAA,kBAAA;AAAA,gBACrD;AAAA,cAAA;AAAA,YAAA;AAAA,YAEDf,KACC,gBAAAtU;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACT;AAAA,kBACAM,MAAS,OAAO,YAAYA,MAAS,OAAO,cAAc;AAAA,gBAAA;AAAA,gBAE5D,OAAO;AAAA,kBACL,YAAY;AAAA,gBAAA;AAAA,gBAGb,UAAAqV;AAAA,cAAA;AAAA,YAAA;AAAA,UACH,EAAA,CAEJ;AAAA,QAAA;AAAA,MAAA;AAAA,IAGN;AAGA,UAAMwjB,IAAgBn5B;AAAA,MACpBiX;AAAA,MACA;AAAA,MACAzB,KAAa;AAAA,IAAA,GAST4jB,IAAep5B;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MATkB;AAAA,QAClB,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MAAA,EAOQM,CAAI;AAAA,MAChBy4B,EAAkB/qB,CAAK;AAAA,IAAA,GAGnBqrB,IAAar5B;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACAg4B,EAAahqB,CAAK;AAAA,MAClBjG,KAAiB;AAAA,IAAA;AAGnB,WACE,gBAAA/G;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWo4B;AAAA,QACX,MAAMljB;AAAA,QACN,iBAAeC;AAAA,QACf,iBAAeC;AAAA,QACf,iBAAeC;AAAA,QACf,cAAYC;AAAA,QACX,GAAGvV;AAAA,QAEJ,UAAA;AAAA,UAAA,gBAAAI,EAAC,OAAA,EAAI,WAAWk4B,GACd,UAAA,gBAAAl4B;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWm4B;AAAA,cACX,OAAO;AAAA,gBACL,OAAOtxB,IAAgB,QAAQ,GAAG0N,CAAa;AAAA,gBAC/C,YAAY;AAAA,cAAA;AAAA,cAEd,eAAY;AAAA,YAAA;AAAA,UAAA,GAEhB;AAAA,UACCD,KACC,gBAAAtU;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAU;AAAA,cACV,OAAO;AAAA,gBACL,YAAY;AAAA,cAAA;AAAA,cAGb,UAAAyU;AAAA,YAAA;AAAA,UAAA;AAAA,QACH;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR;AACF;AAEAJ,GAAS,cAAc;ACzOhB,MAAMqL,KAAU1gB;AAAA,EACrB,CACE;AAAA,IACE,MAAAI,IAAO;AAAA,IACP,OAAA0N,IAAQ;AAAA,IACR,SAAA3N,IAAU;AAAA,IACV,OAAAwgB,IAAQ;AAAA,IACR,OAAArZ,IAAQ;AAAA,IACR,WAAApH;AAAA,IACA,GAAGU;AAAA,EAAA,GAELC,MACG;AAEH,UAAMo2B,IAAc;AAAA,MAClB,IAAI;AAAA,QACF,WAAW;AAAA,QACX,KAAK;AAAA,QACL,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,QAAQ;AAAA,MAAA;AAAA,MAEV,IAAI;AAAA,QACF,WAAW;AAAA,QACX,KAAK;AAAA,QACL,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,QAAQ;AAAA,MAAA;AAAA,MAEV,IAAI;AAAA,QACF,WAAW;AAAA,QACX,KAAK;AAAA,QACL,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,QAAQ;AAAA,MAAA;AAAA,MAEV,IAAI;AAAA,QACF,WAAW;AAAA,QACX,KAAK;AAAA,QACL,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,QAAQ;AAAA,MAAA;AAAA,IACV,GAIIa,IAAe;AAAA,MACnB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,IAAA,GAIFsB,IAAe;AAAA,MACnB,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,IAAA,GAGFxY,IAAgB,MAAM;AAC1B,YAAM7J,IAAcjX;AAAA,QAClB;AAAA,QACAg4B,EAAahqB,CAAK;AAAA,QAClBsrB,EAAazY,CAAK;AAAA,MAAA;AAGpB,cAAQxgB,GAAA;AAAA,QACN,KAAK;AACH,iBACE,gBAAAW,EAAAsY,IAAA,EACE,UAAA;AAAA,YAAA,gBAAApY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiX;AAAA,kBACAkgB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,YAEF,gBAAAY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiX;AAAA,kBACAkgB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,YAEF,gBAAAY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiX;AAAA,kBACAkgB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,UACF,GACF;AAAA,QAEJ,KAAK;AACH,iBACE,gBAAAU,EAAAsY,IAAA,EACE,UAAA;AAAA,YAAA,gBAAApY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiX;AAAA,kBACAkgB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,YAEF,gBAAAY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiX;AAAA,kBACAkgB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,YAEF,gBAAAY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiX;AAAA,kBACAkgB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,YAEF,gBAAAY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiX;AAAA,kBACAkgB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,UACF,GACF;AAAA,QAEJ,KAAK;AACH,iBACE,gBAAAY;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWlB;AAAA,gBACTiX;AAAA,gBACAkgB,EAAY72B,CAAI,EAAE;AAAA,gBAClB;AAAA,cAAA;AAAA,cAEF,OAAO;AAAA,gBACL,YAAY;AAAA,cAAA;AAAA,YACd;AAAA,UAAA;AAAA,QAGN,KAAK;AACH,iBACE,gBAAAU,EAAAsY,IAAA,EACE,UAAA;AAAA,YAAA,gBAAApY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACTiX;AAAA,kBACAkgB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,YAEF,gBAAAY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACT;AAAA,kBACAg4B,EAAahqB,CAAK,EAAE,QAAQ,OAAO,SAAS;AAAA,kBAC5CmpB,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,YAEF,gBAAAY;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAWlB;AAAA,kBACT;AAAA,kBACAm3B,EAAY72B,CAAI,EAAE;AAAA,kBAClB;AAAA,gBAAA;AAAA,gBAEF,OAAO;AAAA,kBACL,gBAAgB;AAAA,kBAChB,YAAY;AAAA,gBAAA;AAAA,cACd;AAAA,YAAA;AAAA,UACF,GACF;AAAA,QAEJ;AACE,iBAAO;AAAA,MAAA;AAAA,IAEb,GAEM83B,IAAmBp4B;AAAA,MACvB;AAAA,MACAK,MAAY,YAAY;AAAA,MACxBA,MAAY,UAAU82B,EAAY72B,CAAI,EAAE;AAAA,MACxCF;AAAA,IAAA;AAGF,WACE,gBAAAY;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAD;AAAA,QACA,WAAWq3B;AAAA,QACX,MAAK;AAAA,QACL,cAAY5wB;AAAA,QACZ,OAAO;AAAA,UACL,YAAY;AAAA,UACZ,YAAY;AAAA,QAAA;AAAA,QAEb,GAAG1G;AAAA,QAEH,UAAA;AAAA,UAAAggB,EAAA;AAAA,UACD,gBAAA5f,EAAC,QAAA,EAAK,WAAU,WAAW,UAAAsG,EAAA,CAAM;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGvC;AACF;AAEAoZ,GAAQ,cAAc;AC5Of,MAAM5F,KAAsC,CAAC;AAAA,EAClD,aAAA9J,IAAc;AAAA,EACd,WAAA+J,IAAY;AAAA,EACZ,SAAA5a,IAAU;AAAA,EACV,WAAAD;AAAA,EACA,OAAA0W;AAAA,EACA,OAAAtP;AAAA,EACA,eAAAmC,IAAgB;AAAA,EAChB,WAAA0M,IAAY;AACd,MAAM;AACJ,QAAM6E,IAAehK,MAAgB,cAG/B+F,IAAcjX;AAAA,IAClB;AAAA,IACAkb,IAAe,gBAAgB;AAAA,IAC/B9a;AAAA,EAAA,GAIIm5B,IAAmB;AAAA,IACvB,MAAMre,IAAe,aAAa;AAAA,IAClC,QAAQA,IAAe,eAAe;AAAA,IACtC,OAAOA,IAAe,eAAe;AAAA,EAAA,GAIjCse,IAAe;AAAA,IACnB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,EAAA;AAIV,MAAIhyB,KAAS0T,GAAc;AACzB,UAAMue,IAAcz5B;AAAA,MAClB;AAAA,MACAib,MAAc,SAAS,SAASA,MAAc,UAAU,QAAQ;AAAA,IAAA,GAI5Dye,IAAe,MAAM;AACzB,cAAQr5B,GAAA;AAAA,QACN,KAAK;AACH,iBAAO;AAAA,YACL,YAAY;AAAA,YACZ,gBAAgB;AAAA,YAChB,iBAAiB;AAAA,UAAA;AAAA,QAErB,KAAK;AACH,iBAAO;AAAA,YACL,YAAY;AAAA,YACZ,gBAAgB;AAAA,YAChB,iBAAiB;AAAA,UAAA;AAAA,QAErB,KAAK;AACH,iBAAO;AAAA,YACL,iBAAiB;AAAA,YACjB,WAAW;AAAA,YACX,cAAc;AAAA,YACd,QAAQ;AAAA,UAAA;AAAA,QAEZ;AACE,iBAAO,CAAA;AAAA,MAAC;AAAA,IAEd,GAEMo4B,IAAez4B;AAAA,MACnB;AAAA,MACA;AAAA,IAAA;AAGF,WACE,gBAAAgB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAWhB,EAAKiX,GAAa,mBAAmB;AAAA,QAChD,OAAO;AAAA,UACL,GAAGH;AAAA,UACH,YAAY;AAAA,UACZ,YAAY;AAAA,QAAA;AAAA,QAEd,MAAK;AAAA,QACL,oBAAkB5F;AAAA,QAClB,cAAYmF;AAAA,QAEX,UAAA;AAAA,UAAA1M,MAAkB,WACjB,gBAAAzI,EAAC,OAAA,EAAI,WAAWu4B,GAAa,OAAOC,KAAgB;AAAA,UAEtD,gBAAAx4B,EAAC,OAAA,EAAI,WAAWu3B,GACb,UAAA,OAAOjxB,KAAU,WAAW,gBAAAtG,EAAC,QAAA,EAAM,UAAAsG,EAAA,CAAM,IAAUA,GACtD;AAAA,UACCmC,MAAkB,SACjB,gBAAAzI,EAAC,OAAA,EAAI,WAAWu4B,GAAa,OAAOC,IAAa,CAAG;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAI5D;AAGA,SACE,gBAAAx4B;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWlB;AAAA,QACTiX;AAAA,QACAsiB,EAAiBte,CAAS;AAAA,QAC1Bue,EAAan5B,CAAO;AAAA,MAAA;AAAA,MAEtB,OAAO;AAAA,QACL,GAAGyW;AAAA,QACH,YAAY;AAAA,QACZ,YAAY;AAAA,MAAA;AAAA,MAEd,MAAK;AAAA,MACL,oBAAkB5F;AAAA,MAClB,cAAYmF;AAAA,IAAA;AAAA,EAAA;AAGlB;AAEA2E,GAAU,cAAc;ACxHjB,MAAMvE,KAAWvW;AAAA,EACtB,CACE;AAAA,IACE,OAAAwW,IAAQ;AAAA,IACR,WAAAC,IAAY;AAAA,IACZ,OAAA/S;AAAA,IACA,QAAAgT;AAAA,IACA,OAAAC,IAAQ;AAAA,IACR,SAAAxW,IAAU;AAAA,IACV,WAAAD;AAAA,IACA,OAAA0W;AAAA,IACA,GAAGhW;AAAA,EAAA,GAELC,MACG;AACH,UAAMgW,IAASL,MAAU,QACnBhB,IAAagB,MAAU,YAGvBM,IAAuC;AAAA,MAC3C,GAAGF;AAAA,MACH,GAAIlT,KAAS,EAAE,OAAO,OAAOA,KAAU,WAAW,GAAGA,CAAK,OAAOA,EAAA;AAAA,MACjE,GAAIgT,KAAU,EAAE,QAAQ,OAAOA,KAAW,WAAW,GAAGA,CAAM,OAAOA,EAAA;AAAA,MACrE,YAAY;AAAA,MACZ,YAAY;AAAA,IAAA;AAId,IAAIlB,KAAc9R,KAAS,CAACgT,MAC1BI,EAAgB,SAASA,EAAgB;AAI3C,UAAMC,IAAcjX;AAAA,MAClB;AAAA;AAAA,MAEA+W,KAAU;AAAA,MACVrB,KAAc;AAAA,MACdgB,MAAU,iBAAiB;AAAA;AAAA,MAE3BrW,MAAY,aAAa,CAACqV,KAAc;AAAA;AAAA,MAExCiB,MAAc,WAAW;AAAA,MACzBA,MAAc,UAAU;AAAA,MACxBvW;AAAA,IAAA;AAIF,QAAI2W,KAAUF,IAAQ,GAAG;AACvB,YAAMK,IAAY,MAAM,KAAK,EAAE,QAAQL,EAAA,GAAS,CAACzT,GAAGd,MAAU;AAE5D,cAAM6U,IADa7U,MAAUuU,IAAQ,IACN,QAAQ;AAEvC,eACE,gBAAA3V;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,WAAWlB;AAAA,cACT;AAAA,cACA2W,MAAc,WAAW;AAAA,cACzBA,MAAc,UAAU;AAAA,cACxBtW,MAAY,aAAa;AAAA,YAAA;AAAA,YAE3B,OAAO;AAAA,cACL,OAAO8W;AAAA,cACP,cAAc7U,IAAQuU,IAAQ,IAAI,QAAQ;AAAA,cAC1C,YAAY;AAAA,cACZ,YAAY;AAAA,YAAA;AAAA,YAEd,eAAY;AAAA,UAAA;AAAA,UAbPvU;AAAA,QAAA;AAAA,MAgBX,CAAC;AAED,aACE,gBAAApB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAAH;AAAA,UACA,WAAU;AAAA,UACV,MAAK;AAAA,UACL,cAAW;AAAA,UACX,OAAO;AAAA,YACL,YAAY;AAAA,YACZ,YAAY;AAAA,UAAA;AAAA,UAEb,GAAGD;AAAA,UAEH,UAAAoW;AAAA,QAAA;AAAA,MAAA;AAAA,IAGP;AAGA,WACE,gBAAAhW;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAH;AAAA,QACA,WAAWkW;AAAA,QACX,OAAOD;AAAA,QACP,MAAK;AAAA,QACL,cAAW;AAAA,QACX,eAAY;AAAA,QACX,GAAGlW;AAAA,MAAA;AAAA,IAAA;AAAA,EAGV;AACF;AAEA2V,GAAS,cAAc;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}